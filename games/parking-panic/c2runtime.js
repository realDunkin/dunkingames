// Generated by Construct 2, the HTML5 game and app creator :: http://www.scirra.com
var cr = {};
cr.plugins_ = {};
cr.behaviors = {};
if (typeof Object.getPrototypeOf !== "function")
{
	if (typeof "test".__proto__ === "object")
	{
		Object.getPrototypeOf = function(object) {
			return object.__proto__;
		};
	}
	else
	{
		Object.getPrototypeOf = function(object) {
			return object.constructor.prototype;
		};
	}
}
(function(){
	cr.logexport = function (msg)
	{
		if (window.console && window.console.log)
			window.console.log(msg);
	};
	cr.seal = function(x)
	{
		return x;
	};
	cr.freeze = function(x)
	{
		return x;
	};
	cr.is_undefined = function (x)
	{
		return typeof x === "undefined";
	};
	cr.is_number = function (x)
	{
		return typeof x === "number";
	};
	cr.is_string = function (x)
	{
		return typeof x === "string";
	};
	cr.isPOT = function (x)
	{
		return x > 0 && ((x - 1) & x) === 0;
	};
	cr.nextHighestPowerOfTwo = function(x) {
		--x;
		for (var i = 1; i < 32; i <<= 1) {
			x = x | x >> i;
		}
		return x + 1;
	}
	cr.abs = function (x)
	{
		return (x < 0 ? -x : x);
	};
	cr.max = function (a, b)
	{
		return (a > b ? a : b);
	};
	cr.min = function (a, b)
	{
		return (a < b ? a : b);
	};
	cr.PI = Math.PI;
	cr.round = function (x)
	{
		return (x + 0.5) | 0;
	};
	cr.floor = function (x)
	{
		if (x >= 0)
			return x | 0;
		else
			return (x | 0) - 1;		// correctly round down when negative
	};
	cr.ceil = function (x)
	{
		var f = x | 0;
		return (f === x ? f : f + 1);
	};
	function Vector2(x, y)
	{
		this.x = x;
		this.y = y;
		cr.seal(this);
	};
	Vector2.prototype.offset = function (px, py)
	{
		this.x += px;
		this.y += py;
		return this;
	};
	Vector2.prototype.mul = function (px, py)
	{
		this.x *= px;
		this.y *= py;
		return this;
	};
	cr.vector2 = Vector2;
	cr.segments_intersect = function(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y)
	{
		var max_ax, min_ax, max_ay, min_ay, max_bx, min_bx, max_by, min_by;
		if (a1x < a2x)
		{
			min_ax = a1x;
			max_ax = a2x;
		}
		else
		{
			min_ax = a2x;
			max_ax = a1x;
		}
		if (b1x < b2x)
		{
			min_bx = b1x;
			max_bx = b2x;
		}
		else
		{
			min_bx = b2x;
			max_bx = b1x;
		}
		if (max_ax < min_bx || min_ax > max_bx)
			return false;
		if (a1y < a2y)
		{
			min_ay = a1y;
			max_ay = a2y;
		}
		else
		{
			min_ay = a2y;
			max_ay = a1y;
		}
		if (b1y < b2y)
		{
			min_by = b1y;
			max_by = b2y;
		}
		else
		{
			min_by = b2y;
			max_by = b1y;
		}
		if (max_ay < min_by || min_ay > max_by)
			return false;
		var dpx = b1x - a1x + b2x - a2x;
		var dpy = b1y - a1y + b2y - a2y;
		var qax = a2x - a1x;
		var qay = a2y - a1y;
		var qbx = b2x - b1x;
		var qby = b2y - b1y;
		var d = cr.abs(qay * qbx - qby * qax);
		var la = qbx * dpy - qby * dpx;
		if (cr.abs(la) > d)
			return false;
		var lb = qax * dpy - qay * dpx;
		return cr.abs(lb) <= d;
	};
	function Rect(left, top, right, bottom)
	{
		this.set(left, top, right, bottom);
		cr.seal(this);
	};
	Rect.prototype.set = function (left, top, right, bottom)
	{
		this.left = left;
		this.top = top;
		this.right = right;
		this.bottom = bottom;
	};
	Rect.prototype.copy = function (r)
	{
		this.left = r.left;
		this.top = r.top;
		this.right = r.right;
		this.bottom = r.bottom;
	};
	Rect.prototype.width = function ()
	{
		return this.right - this.left;
	};
	Rect.prototype.height = function ()
	{
		return this.bottom - this.top;
	};
	Rect.prototype.offset = function (px, py)
	{
		this.left += px;
		this.top += py;
		this.right += px;
		this.bottom += py;
		return this;
	};
	Rect.prototype.normalize = function ()
	{
		var temp = 0;
		if (this.left > this.right)
		{
			temp = this.left;
			this.left = this.right;
			this.right = temp;
		}
		if (this.top > this.bottom)
		{
			temp = this.top;
			this.top = this.bottom;
			this.bottom = temp;
		}
	};
	Rect.prototype.intersects_rect = function (rc)
	{
		return !(rc.right < this.left || rc.bottom < this.top || rc.left > this.right || rc.top > this.bottom);
	};
	Rect.prototype.intersects_rect_off = function (rc, ox, oy)
	{
		return !(rc.right + ox < this.left || rc.bottom + oy < this.top || rc.left + ox > this.right || rc.top + oy > this.bottom);
	};
	Rect.prototype.contains_pt = function (x, y)
	{
		return (x >= this.left && x <= this.right) && (y >= this.top && y <= this.bottom);
	};
	Rect.prototype.equals = function (r)
	{
		return this.left === r.left && this.top === r.top && this.right === r.right && this.bottom === r.bottom;
	};
	cr.rect = Rect;
	function Quad()
	{
		this.tlx = 0;
		this.tly = 0;
		this.trx = 0;
		this.try_ = 0;	// is a keyword otherwise!
		this.brx = 0;
		this.bry = 0;
		this.blx = 0;
		this.bly = 0;
		cr.seal(this);
	};
	Quad.prototype.set_from_rect = function (rc)
	{
		this.tlx = rc.left;
		this.tly = rc.top;
		this.trx = rc.right;
		this.try_ = rc.top;
		this.brx = rc.right;
		this.bry = rc.bottom;
		this.blx = rc.left;
		this.bly = rc.bottom;
	};
	Quad.prototype.set_from_rotated_rect = function (rc, a)
	{
		if (a === 0)
		{
			this.set_from_rect(rc);
		}
		else
		{
			var sin_a = Math.sin(a);
			var cos_a = Math.cos(a);
			var left_sin_a = rc.left * sin_a;
			var top_sin_a = rc.top * sin_a;
			var right_sin_a = rc.right * sin_a;
			var bottom_sin_a = rc.bottom * sin_a;
			var left_cos_a = rc.left * cos_a;
			var top_cos_a = rc.top * cos_a;
			var right_cos_a = rc.right * cos_a;
			var bottom_cos_a = rc.bottom * cos_a;
			this.tlx = left_cos_a - top_sin_a;
			this.tly = top_cos_a + left_sin_a;
			this.trx = right_cos_a - top_sin_a;
			this.try_ = top_cos_a + right_sin_a;
			this.brx = right_cos_a - bottom_sin_a;
			this.bry = bottom_cos_a + right_sin_a;
			this.blx = left_cos_a - bottom_sin_a;
			this.bly = bottom_cos_a + left_sin_a;
		}
	};
	Quad.prototype.offset = function (px, py)
	{
		this.tlx += px;
		this.tly += py;
		this.trx += px;
		this.try_ += py;
		this.brx += px;
		this.bry += py;
		this.blx += px;
		this.bly += py;
		return this;
	};
	var minresult = 0;
	var maxresult = 0;
	function minmax4(a, b, c, d)
	{
		if (a < b)
		{
			if (c < d)
			{
				if (a < c)
					minresult = a;
				else
					minresult = c;
				if (b > d)
					maxresult = b;
				else
					maxresult = d;
			}
			else
			{
				if (a < d)
					minresult = a;
				else
					minresult = d;
				if (b > c)
					maxresult = b;
				else
					maxresult = c;
			}
		}
		else
		{
			if (c < d)
			{
				if (b < c)
					minresult = b;
				else
					minresult = c;
				if (a > d)
					maxresult = a;
				else
					maxresult = d;
			}
			else
			{
				if (b < d)
					minresult = b;
				else
					minresult = d;
				if (a > c)
					maxresult = a;
				else
					maxresult = c;
			}
		}
	};
	Quad.prototype.bounding_box = function (rc)
	{
		minmax4(this.tlx, this.trx, this.brx, this.blx);
		rc.left = minresult;
		rc.right = maxresult;
		minmax4(this.tly, this.try_, this.bry, this.bly);
		rc.top = minresult;
		rc.bottom = maxresult;
	};
	Quad.prototype.contains_pt = function (x, y)
	{
		var v0x = this.trx - this.tlx;
		var v0y = this.try_ - this.tly;
		var v1x = this.brx - this.tlx;
		var v1y = this.bry - this.tly;
		var v2x = x - this.tlx;
		var v2y = y - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		var dot11 = v1x * v1x + v1y * v1y
		var dot12 = v1x * v2x + v1y * v2y
		var invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		if ((u >= 0.0) && (v > 0.0) && (u + v < 1))
			return true;
		v0x = this.blx - this.tlx;
		v0y = this.bly - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		return (u >= 0.0) && (v > 0.0) && (u + v < 1);
	};
	Quad.prototype.at = function (i, xory)
	{
		if (xory)
		{
			switch (i)
			{
				case 0: return this.tlx;
				case 1: return this.trx;
				case 2: return this.brx;
				case 3: return this.blx;
				case 4: return this.tlx;
				default: return this.tlx;
			}
		}
		else
		{
			switch (i)
			{
				case 0: return this.tly;
				case 1: return this.try_;
				case 2: return this.bry;
				case 3: return this.bly;
				case 4: return this.tly;
				default: return this.tly;
			}
		}
	};
	Quad.prototype.midX = function ()
	{
		return (this.tlx + this.trx  + this.brx + this.blx) / 4;
	};
	Quad.prototype.midY = function ()
	{
		return (this.tly + this.try_ + this.bry + this.bly) / 4;
	};
	Quad.prototype.intersects_segment = function (x1, y1, x2, y2)
	{
		if (this.contains_pt(x1, y1) || this.contains_pt(x2, y2))
			return true;
		var a1x, a1y, a2x, a2y;
		var i;
		for (i = 0; i < 4; i++)
		{
			a1x = this.at(i, true);
			a1y = this.at(i, false);
			a2x = this.at(i + 1, true);
			a2y = this.at(i + 1, false);
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	Quad.prototype.intersects_quad = function (rhs)
	{
		var midx = rhs.midX();
		var midy = rhs.midY();
		if (this.contains_pt(midx, midy))
			return true;
		midx = this.midX();
		midy = this.midY();
		if (rhs.contains_pt(midx, midy))
			return true;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		var i, j;
		for (i = 0; i < 4; i++)
		{
			for (j = 0; j < 4; j++)
			{
				a1x = this.at(i, true);
				a1y = this.at(i, false);
				a2x = this.at(i + 1, true);
				a2y = this.at(i + 1, false);
				b1x = rhs.at(j, true);
				b1y = rhs.at(j, false);
				b2x = rhs.at(j + 1, true);
				b2y = rhs.at(j + 1, false);
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	cr.quad = Quad;
	cr.RGB = function (red, green, blue)
	{
		return Math.max(Math.min(red, 255), 0)
			 | (Math.max(Math.min(green, 255), 0) << 8)
			 | (Math.max(Math.min(blue, 255), 0) << 16);
	};
	cr.GetRValue = function (rgb)
	{
		return rgb & 0xFF;
	};
	cr.GetGValue = function (rgb)
	{
		return (rgb & 0xFF00) >> 8;
	};
	cr.GetBValue = function (rgb)
	{
		return (rgb & 0xFF0000) >> 16;
	};
	cr.shallowCopy = function (a, b, allowOverwrite)
	{
		var attr;
		for (attr in b)
		{
			if (b.hasOwnProperty(attr))
			{
;
				a[attr] = b[attr];
			}
		}
		return a;
	};
	cr.arrayRemove = function (arr, index)
	{
		var i, len;
		index = cr.floor(index);
		if (index < 0 || index >= arr.length)
			return;							// index out of bounds
		for (i = index, len = arr.length - 1; i < len; i++)
			arr[i] = arr[i + 1];
		arr.length = len;
	};
	cr.shallowAssignArray = function (dest, src)
	{
		dest.length = src.length;
		var i, len;
		for (i = 0, len = src.length; i < len; i++)
			dest[i] = src[i];
	};
	cr.appendArray = function (a, b)
	{
		a.push.apply(a, b);
	};
	cr.fastIndexOf = function (arr, item)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; ++i)
		{
			if (arr[i] === item)
				return i;
		}
		return -1;
	};
	cr.arrayFindRemove = function (arr, item)
	{
		var index = cr.fastIndexOf(arr, item);
		if (index !== -1)
			cr.arrayRemove(arr, index);
	};
	cr.clamp = function(x, a, b)
	{
		if (x < a)
			return a;
		else if (x > b)
			return b;
		else
			return x;
	};
	cr.to_radians = function(x)
	{
		return x / (180.0 / cr.PI);
	};
	cr.to_degrees = function(x)
	{
		return x * (180.0 / cr.PI);
	};
	cr.clamp_angle_degrees = function (a)
	{
		a %= 360;       // now in (-360, 360) range
		if (a < 0)
			a += 360;   // now in [0, 360) range
		return a;
	};
	cr.clamp_angle = function (a)
	{
		a %= 2 * cr.PI;       // now in (-2pi, 2pi) range
		if (a < 0)
			a += 2 * cr.PI;   // now in [0, 2pi) range
		return a;
	};
	cr.to_clamped_degrees = function (x)
	{
		return cr.clamp_angle_degrees(cr.to_degrees(x));
	};
	cr.to_clamped_radians = function (x)
	{
		return cr.clamp_angle(cr.to_radians(x));
	};
	cr.angleTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.atan2(dy, dx);
	};
	cr.angleDiff = function (a1, a2)
	{
		if (a1 === a2)
			return 0;
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		var n = s1 * s2 + c1 * c2;
		if (n >= 1)
			return 0;
		if (n <= -1)
			return cr.PI;
		return Math.acos(n);
	};
	cr.angleRotate = function (start, end, step)
	{
		var ss = Math.sin(start);
		var cs = Math.cos(start);
		var se = Math.sin(end);
		var ce = Math.cos(end);
		if (Math.acos(ss * se + cs * ce) > step)
		{
			if (cs * se - ss * ce > 0)
				return cr.clamp_angle(start + step);
			else
				return cr.clamp_angle(start - step);
		}
		else
			return cr.clamp_angle(end);
	};
	cr.angleClockwise = function (a1, a2)
	{
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		return c1 * s2 - s1 * c2 <= 0;
	};
	cr.rotatePtAround = function (px, py, a, ox, oy, getx)
	{
		if (a === 0)
			return getx ? px : py;
		var sin_a = Math.sin(a);
		var cos_a = Math.cos(a);
		px -= ox;
		py -= oy;
		var left_sin_a = px * sin_a;
		var top_sin_a = py * sin_a;
		var left_cos_a = px * cos_a;
		var top_cos_a = py * cos_a;
		px = left_cos_a - top_sin_a;
		py = top_cos_a + left_sin_a;
		px += ox;
		py += oy;
		return getx ? px : py;
	}
	cr.distanceTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.sqrt(dx*dx + dy*dy);
	};
	cr.xor = function (x, y)
	{
		return !x !== !y;
	};
	cr.lerp = function (a, b, x)
	{
		return a + (b - a) * x;
	};
	cr.unlerp = function (a, b, c)
	{
		if (a === b)
			return 0;		// avoid divide by 0
		return (c - a) / (b - a);
	};
	cr.anglelerp = function (a, b, x)
	{
		var diff = cr.angleDiff(a, b);
		if (cr.angleClockwise(b, a))
		{
			return a + diff * x;
		}
		else
		{
			return a - diff * x;
		}
	};
	cr.qarp = function (a, b, c, x)
	{
		return cr.lerp(cr.lerp(a, b, x), cr.lerp(b, c, x), x);
	};
	cr.cubic = function (a, b, c, d, x)
	{
		return cr.lerp(cr.qarp(a, b, c, x), cr.qarp(b, c, d, x), x);
	};
	cr.cosp = function (a, b, x)
	{
		return (a + b + (a - b) * Math.cos(x * Math.PI)) / 2;
	};
	cr.hasAnyOwnProperty = function (o)
	{
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
				return true;
		}
		return false;
	};
	cr.wipe = function (obj)
	{
		var p;
		for (p in obj)
		{
			if (obj.hasOwnProperty(p))
				delete obj[p];
		}
	};
	var startup_time = +(new Date());
	cr.performance_now = function()
	{
		if (typeof window["performance"] !== "undefined")
		{
			var winperf = window["performance"];
			if (typeof winperf.now !== "undefined")
				return winperf.now();
			else if (typeof winperf["webkitNow"] !== "undefined")
				return winperf["webkitNow"]();
			else if (typeof winperf["mozNow"] !== "undefined")
				return winperf["mozNow"]();
			else if (typeof winperf["msNow"] !== "undefined")
				return winperf["msNow"]();
		}
		return Date.now() - startup_time;
	};
	var isChrome = false;
	var isSafari = false;
	var isiOS = false;
	var isEjecta = false;
	if (typeof window !== "undefined")		// not c2 editor
	{
		isChrome = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent);
		isSafari = !isChrome && /safari/i.test(navigator.userAgent);
		isiOS = /(iphone|ipod|ipad)/i.test(navigator.userAgent);
		isEjecta = window["c2ejecta"];
	}
	var supports_set = ((!isSafari && !isEjecta && !isiOS) && (typeof Set !== "undefined" && typeof Set.prototype["forEach"] !== "undefined"));
	function ObjectSet_()
	{
		this.s = null;
		this.items = null;			// lazy allocated (hopefully results in better GC performance)
		this.item_count = 0;
		if (supports_set)
		{
			this.s = new Set();
		}
		this.values_cache = [];
		this.cache_valid = true;
		cr.seal(this);
	};
	ObjectSet_.prototype.contains = function (x)
	{
		if (this.isEmpty())
			return false;
		if (supports_set)
			return this.s["has"](x);
		else
			return (this.items && this.items.hasOwnProperty(x));
	};
	ObjectSet_.prototype.add = function (x)
	{
		if (supports_set)
		{
			if (!this.s["has"](x))
			{
				this.s["add"](x);
				this.cache_valid = false;
			}
		}
		else
		{
			var str = x.toString();
			var items = this.items;
			if (!items)
			{
				this.items = {};
				this.items[str] = x;
				this.item_count = 1;
				this.cache_valid = false;
			}
			else if (!items.hasOwnProperty(str))
			{
				items[str] = x;
				this.item_count++;
				this.cache_valid = false;
			}
		}
	};
	ObjectSet_.prototype.remove = function (x)
	{
		if (this.isEmpty())
			return;
		if (supports_set)
		{
			if (this.s["has"](x))
			{
				this.s["delete"](x);
				this.cache_valid = false;
			}
		}
		else if (this.items)
		{
			var str = x.toString();
			var items = this.items;
			if (items.hasOwnProperty(str))
			{
				delete items[str];
				this.item_count--;
				this.cache_valid = false;
			}
		}
	};
	ObjectSet_.prototype.clear = function (/*wipe_*/)
	{
		if (this.isEmpty())
			return;
		if (supports_set)
		{
			this.s["clear"]();			// best!
		}
		else
		{
				this.items = null;		// creates garbage; will lazy allocate on next add()
			this.item_count = 0;
		}
		this.values_cache.length = 0;
		this.cache_valid = true;
	};
	ObjectSet_.prototype.isEmpty = function ()
	{
		return this.count() === 0;
	};
	ObjectSet_.prototype.count = function ()
	{
		if (supports_set)
			return this.s["size"];
		else
			return this.item_count;
	};
	var current_arr = null;
	var current_index = 0;
	function set_append_to_arr(x)
	{
		current_arr[current_index++] = x;
	};
	ObjectSet_.prototype.update_cache = function ()
	{
		if (this.cache_valid)
			return;
		if (supports_set)
		{
			this.values_cache.length = this.s["size"];
			current_arr = this.values_cache;
			current_index = 0;
			this.s["forEach"](set_append_to_arr);
;
			current_arr = null;
			current_index = 0;
		}
		else
		{
			var values_cache = this.values_cache;
			values_cache.length = this.item_count;
			var p, n = 0, items = this.items;
			if (items)
			{
				for (p in items)
				{
					if (items.hasOwnProperty(p))
						values_cache[n++] = items[p];
				}
			}
;
		}
		this.cache_valid = true;
	};
	ObjectSet_.prototype.valuesRef = function ()
	{
		this.update_cache();
		return this.values_cache;
	};
	cr.ObjectSet = ObjectSet_;
	var tmpSet = new cr.ObjectSet();
	cr.removeArrayDuplicates = function (arr)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; ++i)
		{
			tmpSet.add(arr[i]);
		}
		cr.shallowAssignArray(arr, tmpSet.valuesRef());
		tmpSet.clear();
	};
	function KahanAdder_()
	{
		this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
		cr.seal(this);
	};
	KahanAdder_.prototype.add = function (v)
	{
		this.y = v - this.c;
	    this.t = this.sum + this.y;
	    this.c = (this.t - this.sum) - this.y;
	    this.sum = this.t;
	};
    KahanAdder_.prototype.reset = function ()
    {
        this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
    };
	cr.KahanAdder = KahanAdder_;
	cr.regexp_escape = function(text)
	{
		return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
	};
	function CollisionPoly_(pts_array_)
	{
		this.pts_cache = [];
		this.bboxLeft = 0;
		this.bboxTop = 0;
		this.bboxRight = 0;
		this.bboxBottom = 0;
		this.convexpolys = null;		// for physics behavior to cache separated polys
		this.set_pts(pts_array_);
		cr.seal(this);
	};
	CollisionPoly_.prototype.set_pts = function(pts_array_)
	{
		this.pts_array = pts_array_;
		this.pts_count = pts_array_.length / 2;			// x, y, x, y... in array
		this.pts_cache.length = pts_array_.length;
		this.cache_width = -1;
		this.cache_height = -1;
		this.cache_angle = 0;
	};
	CollisionPoly_.prototype.is_empty = function()
	{
		return !this.pts_array.length;
	};
	CollisionPoly_.prototype.update_bbox = function ()
	{
		var myptscache = this.pts_cache;
		var bboxLeft_ = myptscache[0];
		var bboxRight_ = bboxLeft_;
		var bboxTop_ = myptscache[1];
		var bboxBottom_ = bboxTop_;
		var x, y, i = 1, i2, len = this.pts_count;
		for ( ; i < len; ++i)
		{
			i2 = i*2;
			x = myptscache[i2];
			y = myptscache[i2+1];
			if (x < bboxLeft_)
				bboxLeft_ = x;
			if (x > bboxRight_)
				bboxRight_ = x;
			if (y < bboxTop_)
				bboxTop_ = y;
			if (y > bboxBottom_)
				bboxBottom_ = y;
		}
		this.bboxLeft = bboxLeft_;
		this.bboxRight = bboxRight_;
		this.bboxTop = bboxTop_;
		this.bboxBottom = bboxBottom_;
	};
	CollisionPoly_.prototype.set_from_rect = function(rc, offx, offy)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = rc.left - offx;
		myptscache[1] = rc.top - offy;
		myptscache[2] = rc.right - offx;
		myptscache[3] = rc.top - offy;
		myptscache[4] = rc.right - offx;
		myptscache[5] = rc.bottom - offy;
		myptscache[6] = rc.left - offx;
		myptscache[7] = rc.bottom - offy;
		this.cache_width = rc.right - rc.left;
		this.cache_height = rc.bottom - rc.top;
		this.update_bbox();
	};
	CollisionPoly_.prototype.set_from_quad = function(q, offx, offy, w, h)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = q.tlx - offx;
		myptscache[1] = q.tly - offy;
		myptscache[2] = q.trx - offx;
		myptscache[3] = q.try_ - offy;
		myptscache[4] = q.brx - offx;
		myptscache[5] = q.bry - offy;
		myptscache[6] = q.blx - offx;
		myptscache[7] = q.bly - offy;
		this.cache_width = w;
		this.cache_height = h;
		this.update_bbox();
	};
	CollisionPoly_.prototype.set_from_poly = function (r)
	{
		this.pts_count = r.pts_count;
		cr.shallowAssignArray(this.pts_cache, r.pts_cache);
		this.bboxLeft = r.bboxLeft;
		this.bboxTop - r.bboxTop;
		this.bboxRight = r.bboxRight;
		this.bboxBottom = r.bboxBottom;
	};
	CollisionPoly_.prototype.cache_poly = function(w, h, a)
	{
		if (this.cache_width === w && this.cache_height === h && this.cache_angle === a)
			return;		// cache up-to-date
		this.cache_width = w;
		this.cache_height = h;
		this.cache_angle = a;
		var i, i2, i21, len, x, y;
		var sina = 0;
		var cosa = 1;
		var myptsarray = this.pts_array;
		var myptscache = this.pts_cache;
		if (a !== 0)
		{
			sina = Math.sin(a);
			cosa = Math.cos(a);
		}
		for (i = 0, len = this.pts_count; i < len; i++)
		{
			i2 = i*2;
			i21 = i2+1;
			x = myptsarray[i2] * w;
			y = myptsarray[i21] * h;
			myptscache[i2] = (x * cosa) - (y * sina);
			myptscache[i21] = (y * cosa) + (x * sina);
		}
		this.update_bbox();
	};
	CollisionPoly_.prototype.contains_pt = function (a2x, a2y)
	{
		var myptscache = this.pts_cache;
		if (a2x === myptscache[0] && a2y === myptscache[1])
			return true;
		var i, i2, imod, len = this.pts_count;
		var a1x = this.bboxLeft - 110;
		var a1y = this.bboxTop - 101;
		var a3x = this.bboxRight + 131
		var a3y = this.bboxBottom + 120;
		var b1x, b1y, b2x, b2y;
		var count1 = 0, count2 = 0;
		for (i = 0; i < len; i++)
		{
			i2 = i*2;
			imod = ((i+1)%len)*2;
			b1x = myptscache[i2];
			b1y = myptscache[i2+1];
			b2x = myptscache[imod];
			b2y = myptscache[imod+1];
			if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
				count1++;
			if (cr.segments_intersect(a3x, a3y, a2x, a2y, b1x, b1y, b2x, b2y))
				count2++;
		}
		return (count1 % 2 === 1) || (count2 % 2 === 1);
	};
	CollisionPoly_.prototype.intersects_poly = function (rhs, offx, offy)
	{
		var rhspts = rhs.pts_cache;
		var mypts = this.pts_cache;
		if (this.contains_pt(rhspts[0] + offx, rhspts[1] + offy))
			return true;
		if (rhs.contains_pt(mypts[0] - offx, mypts[1] - offy))
			return true;
		var i, i2, imod, leni, j, j2, jmod, lenj;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			i2 = i*2;
			imod = ((i+1)%leni)*2;
			a1x = mypts[i2];
			a1y = mypts[i2+1];
			a2x = mypts[imod];
			a2y = mypts[imod+1];
			for (j = 0, lenj = rhs.pts_count; j < lenj; j++)
			{
				j2 = j*2;
				jmod = ((j+1)%lenj)*2;
				b1x = rhspts[j2] + offx;
				b1y = rhspts[j2+1] + offy;
				b2x = rhspts[jmod] + offx;
				b2y = rhspts[jmod+1] + offy;
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	CollisionPoly_.prototype.intersects_segment = function (offx, offy, x1, y1, x2, y2)
	{
		var mypts = this.pts_cache;
		if (this.contains_pt(x1 - offx, y1 - offy))
			return true;
		var i, leni, i2, imod;
		var a1x, a1y, a2x, a2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			i2 = i*2;
			imod = ((i+1)%leni)*2;
			a1x = mypts[i2] + offx;
			a1y = mypts[i2+1] + offy;
			a2x = mypts[imod] + offx;
			a2y = mypts[imod+1] + offy;
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	CollisionPoly_.prototype.mirror = function (px)
	{
		var i, leni, i2;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i2 = i*2;
			this.pts_cache[i2] = px * 2 - this.pts_cache[i2];
		}
	};
	CollisionPoly_.prototype.flip = function (py)
	{
		var i, leni, i21;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i21 = i*2+1;
			this.pts_cache[i21] = py * 2 - this.pts_cache[i21];
		}
	};
	CollisionPoly_.prototype.diag = function ()
	{
		var i, leni, i2, i21, temp;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i2 = i*2;
			i21 = i2+1;
			temp = this.pts_cache[i2];
			this.pts_cache[i2] = this.pts_cache[i21];
			this.pts_cache[i21] = temp;
		}
	};
	cr.CollisionPoly = CollisionPoly_;
	function SparseGrid_(cellwidth_, cellheight_)
	{
		this.cellwidth = cellwidth_;
		this.cellheight = cellheight_;
		this.cells = {};
	};
	SparseGrid_.prototype.totalCellCount = 0;
	SparseGrid_.prototype.getCell = function (x_, y_, create_if_missing)
	{
		var ret;
		var col = this.cells[x_];
		if (!col)
		{
			if (create_if_missing)
			{
				ret = allocGridCell(this, x_, y_);
				this.cells[x_] = {};
				this.cells[x_][y_] = ret;
				return ret;
			}
			else
				return null;
		}
		ret = col[y_];
		if (ret)
			return ret;
		else if (create_if_missing)
		{
			ret = allocGridCell(this, x_, y_);
			this.cells[x_][y_] = ret;
			return ret;
		}
		else
			return null;
	};
	SparseGrid_.prototype.XToCell = function (x_)
	{
		return cr.floor(x_ / this.cellwidth);
	};
	SparseGrid_.prototype.YToCell = function (y_)
	{
		return cr.floor(y_ / this.cellheight);
	};
	SparseGrid_.prototype.update = function (inst, oldrange, newrange)
	{
		var x, lenx, y, leny, cell;
		if (oldrange)
		{
			for (x = oldrange.left, lenx = oldrange.right; x <= lenx; ++x)
			{
				for (y = oldrange.top, leny = oldrange.bottom; y <= leny; ++y)
				{
					if (newrange && newrange.contains_pt(x, y))
						continue;	// is still in this cell
					cell = this.getCell(x, y, false);	// don't create if missing
					if (!cell)
						continue;	// cell does not exist yet
					cell.remove(inst);
					if (cell.isEmpty())
					{
						freeGridCell(cell);
						this.cells[x][y] = null;
					}
				}
			}
		}
		if (newrange)
		{
			for (x = newrange.left, lenx = newrange.right; x <= lenx; ++x)
			{
				for (y = newrange.top, leny = newrange.bottom; y <= leny; ++y)
				{
					if (oldrange && oldrange.contains_pt(x, y))
						continue;	// is still in this cell
					this.getCell(x, y, true).insert(inst);
				}
			}
		}
	};
	SparseGrid_.prototype.queryRange = function (rc, result)
	{
		var x, lenx, ystart, y, leny, cell;
		x = this.XToCell(rc.left);
		ystart = this.YToCell(rc.top);
		lenx = this.XToCell(rc.right);
		leny = this.YToCell(rc.bottom);
		for ( ; x <= lenx; ++x)
		{
			for (y = ystart; y <= leny; ++y)
			{
				cell = this.getCell(x, y, false);
				if (!cell)
					continue;
				cell.dump(result);
			}
		}
	};
	cr.SparseGrid = SparseGrid_;
	var gridcellcache = [];
	function allocGridCell(grid_, x_, y_)
	{
		var ret;
		SparseGrid_.prototype.totalCellCount++;
		if (gridcellcache.length)
		{
			ret = gridcellcache.pop();
			ret.grid = grid_;
			ret.x = x_;
			ret.y = y_;
			return ret;
		}
		else
			return new cr.GridCell(grid_, x_, y_);
	};
	function freeGridCell(c)
	{
		SparseGrid_.prototype.totalCellCount--;
		c.objects.clear();
		if (gridcellcache.length < 1000)
			gridcellcache.push(c);
	};
	function GridCell_(grid_, x_, y_)
	{
		this.grid = grid_;
		this.x = x_;
		this.y = y_;
		this.objects = new cr.ObjectSet();
	};
	GridCell_.prototype.isEmpty = function ()
	{
		return this.objects.isEmpty();
	};
	GridCell_.prototype.insert = function (inst)
	{
		this.objects.add(inst);
	};
	GridCell_.prototype.remove = function (inst)
	{
		this.objects.remove(inst);
	};
	GridCell_.prototype.dump = function (result)
	{
		cr.appendArray(result, this.objects.valuesRef());
	};
	cr.GridCell = GridCell_;
	var fxNames = [ "lighter",
					"xor",
					"copy",
					"destination-over",
					"source-in",
					"destination-in",
					"source-out",
					"destination-out",
					"source-atop",
					"destination-atop"];
	cr.effectToCompositeOp = function(effect)
	{
		if (effect <= 0 || effect >= 11)
			return "source-over";
		return fxNames[effect - 1];	// not including "none" so offset by 1
	};
	cr.setGLBlend = function(this_, effect, gl)
	{
		if (!gl)
			return;
		this_.srcBlend = gl.ONE;
		this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
		switch (effect) {
		case 1:		// lighter (additive)
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ONE;
			break;
		case 2:		// xor
			break;	// todo
		case 3:		// copy
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ZERO;
			break;
		case 4:		// destination-over
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ONE;
			break;
		case 5:		// source-in
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 6:		// destination-in
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		case 7:		// source-out
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 8:		// destination-out
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 9:		// source-atop
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 10:	// destination-atop
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		}
	};
	cr.round6dp = function (x)
	{
		return Math.round(x * 1000000) / 1000000;
	};
	/*
	var localeCompare_options = {
		"usage": "search",
		"sensitivity": "accent"
	};
	var has_localeCompare = !!"a".localeCompare;
	var localeCompare_works1 = (has_localeCompare && "a".localeCompare("A", undefined, localeCompare_options) === 0);
	var localeCompare_works2 = (has_localeCompare && "a".localeCompare("á", undefined, localeCompare_options) !== 0);
	var supports_localeCompare = (has_localeCompare && localeCompare_works1 && localeCompare_works2);
	*/
	cr.equals_nocase = function (a, b)
	{
		if (typeof a !== "string" || typeof b !== "string")
			return false;
		if (a.length !== b.length)
			return false;
		if (a === b)
			return true;
		/*
		if (supports_localeCompare)
		{
			return (a.localeCompare(b, undefined, localeCompare_options) === 0);
		}
		else
		{
		*/
			return a.toLowerCase() === b.toLowerCase();
	};
	cr.isCanvasInputEvent = function (e)
	{
		var target = e.target;
		if (!target)
			return true;
		if (target === document || target === window)
			return true;
		if (document && document.body && target === document.body)
			return true;
		if (cr.equals_nocase(target.tagName, "canvas"))
			return true;
		return false;
	};
}());
var MatrixArray=typeof Float32Array!=="undefined"?Float32Array:Array,glMatrixArrayType=MatrixArray,vec3={},mat3={},mat4={},quat4={};vec3.create=function(a){var b=new MatrixArray(3);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2]);return b};vec3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];return b};vec3.add=function(a,b,c){if(!c||a===c)return a[0]+=b[0],a[1]+=b[1],a[2]+=b[2],a;c[0]=a[0]+b[0];c[1]=a[1]+b[1];c[2]=a[2]+b[2];return c};
vec3.subtract=function(a,b,c){if(!c||a===c)return a[0]-=b[0],a[1]-=b[1],a[2]-=b[2],a;c[0]=a[0]-b[0];c[1]=a[1]-b[1];c[2]=a[2]-b[2];return c};vec3.negate=function(a,b){b||(b=a);b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];return b};vec3.scale=function(a,b,c){if(!c||a===c)return a[0]*=b,a[1]*=b,a[2]*=b,a;c[0]=a[0]*b;c[1]=a[1]*b;c[2]=a[2]*b;return c};
vec3.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=Math.sqrt(c*c+d*d+e*e);if(g){if(g===1)return b[0]=c,b[1]=d,b[2]=e,b}else return b[0]=0,b[1]=0,b[2]=0,b;g=1/g;b[0]=c*g;b[1]=d*g;b[2]=e*g;return b};vec3.cross=function(a,b,c){c||(c=a);var d=a[0],e=a[1],a=a[2],g=b[0],f=b[1],b=b[2];c[0]=e*b-a*f;c[1]=a*g-d*b;c[2]=d*f-e*g;return c};vec3.length=function(a){var b=a[0],c=a[1],a=a[2];return Math.sqrt(b*b+c*c+a*a)};vec3.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]};
vec3.direction=function(a,b,c){c||(c=a);var d=a[0]-b[0],e=a[1]-b[1],a=a[2]-b[2],b=Math.sqrt(d*d+e*e+a*a);if(!b)return c[0]=0,c[1]=0,c[2]=0,c;b=1/b;c[0]=d*b;c[1]=e*b;c[2]=a*b;return c};vec3.lerp=function(a,b,c,d){d||(d=a);d[0]=a[0]+c*(b[0]-a[0]);d[1]=a[1]+c*(b[1]-a[1]);d[2]=a[2]+c*(b[2]-a[2]);return d};vec3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+"]"};
mat3.create=function(a){var b=new MatrixArray(9);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8]);return b};mat3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return b};mat3.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};
mat3.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[5];a[1]=a[3];a[2]=a[6];a[3]=c;a[5]=a[7];a[6]=d;a[7]=e;return a}b[0]=a[0];b[1]=a[3];b[2]=a[6];b[3]=a[1];b[4]=a[4];b[5]=a[7];b[6]=a[2];b[7]=a[5];b[8]=a[8];return b};mat3.toMat4=function(a,b){b||(b=mat4.create());b[15]=1;b[14]=0;b[13]=0;b[12]=0;b[11]=0;b[10]=a[8];b[9]=a[7];b[8]=a[6];b[7]=0;b[6]=a[5];b[5]=a[4];b[4]=a[3];b[3]=0;b[2]=a[2];b[1]=a[1];b[0]=a[0];return b};
mat3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+"]"};mat4.create=function(a){var b=new MatrixArray(16);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b[9]=a[9],b[10]=a[10],b[11]=a[11],b[12]=a[12],b[13]=a[13],b[14]=a[14],b[15]=a[15]);return b};
mat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return b};mat4.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=1;a[6]=0;a[7]=0;a[8]=0;a[9]=0;a[10]=1;a[11]=0;a[12]=0;a[13]=0;a[14]=0;a[15]=1;return a};
mat4.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[3],g=a[6],f=a[7],h=a[11];a[1]=a[4];a[2]=a[8];a[3]=a[12];a[4]=c;a[6]=a[9];a[7]=a[13];a[8]=d;a[9]=g;a[11]=a[14];a[12]=e;a[13]=f;a[14]=h;return a}b[0]=a[0];b[1]=a[4];b[2]=a[8];b[3]=a[12];b[4]=a[1];b[5]=a[5];b[6]=a[9];b[7]=a[13];b[8]=a[2];b[9]=a[6];b[10]=a[10];b[11]=a[14];b[12]=a[3];b[13]=a[7];b[14]=a[11];b[15]=a[15];return b};
mat4.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],g=a[4],f=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],n=a[11],o=a[12],m=a[13],p=a[14],a=a[15];return o*k*h*e-j*m*h*e-o*f*l*e+g*m*l*e+j*f*p*e-g*k*p*e-o*k*d*i+j*m*d*i+o*c*l*i-b*m*l*i-j*c*p*i+b*k*p*i+o*f*d*n-g*m*d*n-o*c*h*n+b*m*h*n+g*c*p*n-b*f*p*n-j*f*d*a+g*k*d*a+j*c*h*a-b*k*h*a-g*c*l*a+b*f*l*a};
mat4.inverse=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=a[4],h=a[5],i=a[6],j=a[7],k=a[8],l=a[9],n=a[10],o=a[11],m=a[12],p=a[13],r=a[14],s=a[15],A=c*h-d*f,B=c*i-e*f,t=c*j-g*f,u=d*i-e*h,v=d*j-g*h,w=e*j-g*i,x=k*p-l*m,y=k*r-n*m,z=k*s-o*m,C=l*r-n*p,D=l*s-o*p,E=n*s-o*r,q=1/(A*E-B*D+t*C+u*z-v*y+w*x);b[0]=(h*E-i*D+j*C)*q;b[1]=(-d*E+e*D-g*C)*q;b[2]=(p*w-r*v+s*u)*q;b[3]=(-l*w+n*v-o*u)*q;b[4]=(-f*E+i*z-j*y)*q;b[5]=(c*E-e*z+g*y)*q;b[6]=(-m*w+r*t-s*B)*q;b[7]=(k*w-n*t+o*B)*q;b[8]=(f*D-h*z+j*x)*q;
b[9]=(-c*D+d*z-g*x)*q;b[10]=(m*v-p*t+s*A)*q;b[11]=(-k*v+l*t-o*A)*q;b[12]=(-f*C+h*y-i*x)*q;b[13]=(c*C-d*y+e*x)*q;b[14]=(-m*u+p*B-r*A)*q;b[15]=(k*u-l*B+n*A)*q;return b};mat4.toRotationMat=function(a,b){b||(b=mat4.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
mat4.toMat3=function(a,b){b||(b=mat3.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[4];b[4]=a[5];b[5]=a[6];b[6]=a[8];b[7]=a[9];b[8]=a[10];return b};mat4.toInverseMat3=function(a,b){var c=a[0],d=a[1],e=a[2],g=a[4],f=a[5],h=a[6],i=a[8],j=a[9],k=a[10],l=k*f-h*j,n=-k*g+h*i,o=j*g-f*i,m=c*l+d*n+e*o;if(!m)return null;m=1/m;b||(b=mat3.create());b[0]=l*m;b[1]=(-k*d+e*j)*m;b[2]=(h*d-e*f)*m;b[3]=n*m;b[4]=(k*c-e*i)*m;b[5]=(-h*c+e*g)*m;b[6]=o*m;b[7]=(-j*c+d*i)*m;b[8]=(f*c-d*g)*m;return b};
mat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],f=a[3],h=a[4],i=a[5],j=a[6],k=a[7],l=a[8],n=a[9],o=a[10],m=a[11],p=a[12],r=a[13],s=a[14],a=a[15],A=b[0],B=b[1],t=b[2],u=b[3],v=b[4],w=b[5],x=b[6],y=b[7],z=b[8],C=b[9],D=b[10],E=b[11],q=b[12],F=b[13],G=b[14],b=b[15];c[0]=A*d+B*h+t*l+u*p;c[1]=A*e+B*i+t*n+u*r;c[2]=A*g+B*j+t*o+u*s;c[3]=A*f+B*k+t*m+u*a;c[4]=v*d+w*h+x*l+y*p;c[5]=v*e+w*i+x*n+y*r;c[6]=v*g+w*j+x*o+y*s;c[7]=v*f+w*k+x*m+y*a;c[8]=z*d+C*h+D*l+E*p;c[9]=z*e+C*i+D*n+E*r;c[10]=z*g+C*
j+D*o+E*s;c[11]=z*f+C*k+D*m+E*a;c[12]=q*d+F*h+G*l+b*p;c[13]=q*e+F*i+G*n+b*r;c[14]=q*g+F*j+G*o+b*s;c[15]=q*f+F*k+G*m+b*a;return c};mat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],b=b[2];c[0]=a[0]*d+a[4]*e+a[8]*b+a[12];c[1]=a[1]*d+a[5]*e+a[9]*b+a[13];c[2]=a[2]*d+a[6]*e+a[10]*b+a[14];return c};
mat4.multiplyVec4=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=b[3];c[0]=a[0]*d+a[4]*e+a[8]*g+a[12]*b;c[1]=a[1]*d+a[5]*e+a[9]*g+a[13]*b;c[2]=a[2]*d+a[6]*e+a[10]*g+a[14]*b;c[3]=a[3]*d+a[7]*e+a[11]*g+a[15]*b;return c};
mat4.translate=function(a,b,c){var d=b[0],e=b[1],b=b[2],g,f,h,i,j,k,l,n,o,m,p,r;if(!c||a===c)return a[12]=a[0]*d+a[4]*e+a[8]*b+a[12],a[13]=a[1]*d+a[5]*e+a[9]*b+a[13],a[14]=a[2]*d+a[6]*e+a[10]*b+a[14],a[15]=a[3]*d+a[7]*e+a[11]*b+a[15],a;g=a[0];f=a[1];h=a[2];i=a[3];j=a[4];k=a[5];l=a[6];n=a[7];o=a[8];m=a[9];p=a[10];r=a[11];c[0]=g;c[1]=f;c[2]=h;c[3]=i;c[4]=j;c[5]=k;c[6]=l;c[7]=n;c[8]=o;c[9]=m;c[10]=p;c[11]=r;c[12]=g*d+j*e+o*b+a[12];c[13]=f*d+k*e+m*b+a[13];c[14]=h*d+l*e+p*b+a[14];c[15]=i*d+n*e+r*b+a[15];
return c};mat4.scale=function(a,b,c){var d=b[0],e=b[1],b=b[2];if(!c||a===c)return a[0]*=d,a[1]*=d,a[2]*=d,a[3]*=d,a[4]*=e,a[5]*=e,a[6]*=e,a[7]*=e,a[8]*=b,a[9]*=b,a[10]*=b,a[11]*=b,a;c[0]=a[0]*d;c[1]=a[1]*d;c[2]=a[2]*d;c[3]=a[3]*d;c[4]=a[4]*e;c[5]=a[5]*e;c[6]=a[6]*e;c[7]=a[7]*e;c[8]=a[8]*b;c[9]=a[9]*b;c[10]=a[10]*b;c[11]=a[11]*b;c[12]=a[12];c[13]=a[13];c[14]=a[14];c[15]=a[15];return c};
mat4.rotate=function(a,b,c,d){var e=c[0],g=c[1],c=c[2],f=Math.sqrt(e*e+g*g+c*c),h,i,j,k,l,n,o,m,p,r,s,A,B,t,u,v,w,x,y,z;if(!f)return null;f!==1&&(f=1/f,e*=f,g*=f,c*=f);h=Math.sin(b);i=Math.cos(b);j=1-i;b=a[0];f=a[1];k=a[2];l=a[3];n=a[4];o=a[5];m=a[6];p=a[7];r=a[8];s=a[9];A=a[10];B=a[11];t=e*e*j+i;u=g*e*j+c*h;v=c*e*j-g*h;w=e*g*j-c*h;x=g*g*j+i;y=c*g*j+e*h;z=e*c*j+g*h;e=g*c*j-e*h;g=c*c*j+i;d?a!==d&&(d[12]=a[12],d[13]=a[13],d[14]=a[14],d[15]=a[15]):d=a;d[0]=b*t+n*u+r*v;d[1]=f*t+o*u+s*v;d[2]=k*t+m*u+A*
v;d[3]=l*t+p*u+B*v;d[4]=b*w+n*x+r*y;d[5]=f*w+o*x+s*y;d[6]=k*w+m*x+A*y;d[7]=l*w+p*x+B*y;d[8]=b*z+n*e+r*g;d[9]=f*z+o*e+s*g;d[10]=k*z+m*e+A*g;d[11]=l*z+p*e+B*g;return d};mat4.rotateX=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[4],g=a[5],f=a[6],h=a[7],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[0]=a[0],c[1]=a[1],c[2]=a[2],c[3]=a[3],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[4]=e*b+i*d;c[5]=g*b+j*d;c[6]=f*b+k*d;c[7]=h*b+l*d;c[8]=e*-d+i*b;c[9]=g*-d+j*b;c[10]=f*-d+k*b;c[11]=h*-d+l*b;return c};
mat4.rotateY=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[4]=a[4],c[5]=a[5],c[6]=a[6],c[7]=a[7],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*-d;c[1]=g*b+j*-d;c[2]=f*b+k*-d;c[3]=h*b+l*-d;c[8]=e*d+i*b;c[9]=g*d+j*b;c[10]=f*d+k*b;c[11]=h*d+l*b;return c};
mat4.rotateZ=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[4],j=a[5],k=a[6],l=a[7];c?a!==c&&(c[8]=a[8],c[9]=a[9],c[10]=a[10],c[11]=a[11],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*d;c[1]=g*b+j*d;c[2]=f*b+k*d;c[3]=h*b+l*d;c[4]=e*-d+i*b;c[5]=g*-d+j*b;c[6]=f*-d+k*b;c[7]=h*-d+l*b;return c};
mat4.frustum=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=e*2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=e*2/i;f[6]=0;f[7]=0;f[8]=(b+a)/h;f[9]=(d+c)/i;f[10]=-(g+e)/j;f[11]=-1;f[12]=0;f[13]=0;f[14]=-(g*e*2)/j;f[15]=0;return f};mat4.perspective=function(a,b,c,d,e){a=c*Math.tan(a*Math.PI/360);b*=a;return mat4.frustum(-b,b,-a,a,c,d,e)};
mat4.ortho=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=2/i;f[6]=0;f[7]=0;f[8]=0;f[9]=0;f[10]=-2/j;f[11]=0;f[12]=-(a+b)/h;f[13]=-(d+c)/i;f[14]=-(g+e)/j;f[15]=1;return f};
mat4.lookAt=function(a,b,c,d){d||(d=mat4.create());var e,g,f,h,i,j,k,l,n=a[0],o=a[1],a=a[2];g=c[0];f=c[1];e=c[2];c=b[1];j=b[2];if(n===b[0]&&o===c&&a===j)return mat4.identity(d);c=n-b[0];j=o-b[1];k=a-b[2];l=1/Math.sqrt(c*c+j*j+k*k);c*=l;j*=l;k*=l;b=f*k-e*j;e=e*c-g*k;g=g*j-f*c;(l=Math.sqrt(b*b+e*e+g*g))?(l=1/l,b*=l,e*=l,g*=l):g=e=b=0;f=j*g-k*e;h=k*b-c*g;i=c*e-j*b;(l=Math.sqrt(f*f+h*h+i*i))?(l=1/l,f*=l,h*=l,i*=l):i=h=f=0;d[0]=b;d[1]=f;d[2]=c;d[3]=0;d[4]=e;d[5]=h;d[6]=j;d[7]=0;d[8]=g;d[9]=i;d[10]=k;d[11]=
0;d[12]=-(b*n+e*o+g*a);d[13]=-(f*n+h*o+i*a);d[14]=-(c*n+j*o+k*a);d[15]=1;return d};mat4.fromRotationTranslation=function(a,b,c){c||(c=mat4.create());var d=a[0],e=a[1],g=a[2],f=a[3],h=d+d,i=e+e,j=g+g,a=d*h,k=d*i;d*=j;var l=e*i;e*=j;g*=j;h*=f;i*=f;f*=j;c[0]=1-(l+g);c[1]=k+f;c[2]=d-i;c[3]=0;c[4]=k-f;c[5]=1-(a+g);c[6]=e+h;c[7]=0;c[8]=d+i;c[9]=e-h;c[10]=1-(a+l);c[11]=0;c[12]=b[0];c[13]=b[1];c[14]=b[2];c[15]=1;return c};
mat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+", "+a[9]+", "+a[10]+", "+a[11]+", "+a[12]+", "+a[13]+", "+a[14]+", "+a[15]+"]"};quat4.create=function(a){var b=new MatrixArray(4);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3]);return b};quat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];return b};
quat4.calculateW=function(a,b){var c=a[0],d=a[1],e=a[2];if(!b||a===b)return a[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e)),a;b[0]=c;b[1]=d;b[2]=e;b[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e));return b};quat4.inverse=function(a,b){if(!b||a===b)return a[0]*=-1,a[1]*=-1,a[2]*=-1,a;b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];b[3]=a[3];return b};quat4.length=function(a){var b=a[0],c=a[1],d=a[2],a=a[3];return Math.sqrt(b*b+c*c+d*d+a*a)};
quat4.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=Math.sqrt(c*c+d*d+e*e+g*g);if(f===0)return b[0]=0,b[1]=0,b[2]=0,b[3]=0,b;f=1/f;b[0]=c*f;b[1]=d*f;b[2]=e*f;b[3]=g*f;return b};quat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],a=a[3],f=b[0],h=b[1],i=b[2],b=b[3];c[0]=d*b+a*f+e*i-g*h;c[1]=e*b+a*h+g*f-d*i;c[2]=g*b+a*i+d*h-e*f;c[3]=a*b-d*f-e*h-g*i;return c};
quat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=a[0],f=a[1],h=a[2],a=a[3],i=a*d+f*g-h*e,j=a*e+h*d-b*g,k=a*g+b*e-f*d,d=-b*d-f*e-h*g;c[0]=i*a+d*-b+j*-h-k*-f;c[1]=j*a+d*-f+k*-b-i*-h;c[2]=k*a+d*-h+i*-f-j*-b;return c};quat4.toMat3=function(a,b){b||(b=mat3.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=k-g;b[4]=1-(j+e);b[5]=d+f;b[6]=c+h;b[7]=d-f;b[8]=1-(j+l);return b};
quat4.toMat4=function(a,b){b||(b=mat4.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=0;b[4]=k-g;b[5]=1-(j+e);b[6]=d+f;b[7]=0;b[8]=c+h;b[9]=d-f;b[10]=1-(j+l);b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
quat4.slerp=function(a,b,c,d){d||(d=a);var e=a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3],g,f;if(Math.abs(e)>=1)return d!==a&&(d[0]=a[0],d[1]=a[1],d[2]=a[2],d[3]=a[3]),d;g=Math.acos(e);f=Math.sqrt(1-e*e);if(Math.abs(f)<0.001)return d[0]=a[0]*0.5+b[0]*0.5,d[1]=a[1]*0.5+b[1]*0.5,d[2]=a[2]*0.5+b[2]*0.5,d[3]=a[3]*0.5+b[3]*0.5,d;e=Math.sin((1-c)*g)/f;c=Math.sin(c*g)/f;d[0]=a[0]*e+b[0]*c;d[1]=a[1]*e+b[1]*c;d[2]=a[2]*e+b[2]*c;d[3]=a[3]*e+b[3]*c;return d};
quat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+"]"};
(function()
{
	var MAX_VERTICES = 8000;						// equates to 2500 objects being drawn
	var MAX_INDICES = (MAX_VERTICES / 2) * 3;		// 6 indices for every 4 vertices
	var MAX_POINTS = 8000;
	var MULTI_BUFFERS = 4;							// cycle 4 buffers to try and avoid blocking
	var BATCH_NULL = 0;
	var BATCH_QUAD = 1;
	var BATCH_SETTEXTURE = 2;
	var BATCH_SETOPACITY = 3;
	var BATCH_SETBLEND = 4;
	var BATCH_UPDATEMODELVIEW = 5;
	var BATCH_RENDERTOTEXTURE = 6;
	var BATCH_CLEAR = 7;
	var BATCH_POINTS = 8;
	var BATCH_SETPROGRAM = 9;
	var BATCH_SETPROGRAMPARAMETERS = 10;
	var BATCH_SETTEXTURE1 = 11;
	/*
	var lose_ext = null;
	window.lose_context = function ()
	{
		if (!lose_ext)
		{
			console.log("WEBGL_lose_context not supported");
			return;
		}
		lose_ext.loseContext();
	};
	window.restore_context = function ()
	{
		if (!lose_ext)
		{
			console.log("WEBGL_lose_context not supported");
			return;
		}
		lose_ext.restoreContext();
	};
	*/
	function GLWrap_(gl, isMobile)
	{
		this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent);
		this.width = 0;		// not yet known, wait for call to setSize()
		this.height = 0;
		this.cam = vec3.create([0, 0, 100]);			// camera position
		this.look = vec3.create([0, 0, 0]);				// lookat position
		this.up = vec3.create([0, 1, 0]);				// up vector
		this.worldScale = vec3.create([1, 1, 1]);		// world scaling factor
		this.enable_mipmaps = true;
		this.matP = mat4.create();						// perspective matrix
		this.matMV = mat4.create();						// model view matrix
		this.lastMV = mat4.create();
		this.currentMV = mat4.create();
		this.gl = gl;
		this.initState();
	};
	GLWrap_.prototype.initState = function ()
	{
		var gl = this.gl;
		var i, len;
		this.lastOpacity = 1;
		this.lastTexture0 = null;			// last bound to TEXTURE0
		this.lastTexture1 = null;			// last bound to TEXTURE1
		this.currentOpacity = 1;
		gl.clearColor(0, 0, 0, 0);
		gl.clear(gl.COLOR_BUFFER_BIT);
		gl.enable(gl.BLEND);
        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
		gl.disable(gl.CULL_FACE);
		gl.disable(gl.DEPTH_TEST);
		this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);
		this.lastSrcBlend = gl.ONE;
		this.lastDestBlend = gl.ONE_MINUS_SRC_ALPHA;
		this.pointBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
		this.vertexBuffers = new Array(MULTI_BUFFERS);
		this.texcoordBuffers = new Array(MULTI_BUFFERS);
		for (i = 0; i < MULTI_BUFFERS; i++)
		{
			this.vertexBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[i]);
			this.texcoordBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[i]);
		}
		this.curBuffer = 0;
		this.indexBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
		this.vertexData = new Float32Array(MAX_VERTICES * 2);
		this.texcoordData = new Float32Array(MAX_VERTICES * 2);
		this.pointData = new Float32Array(MAX_POINTS * 4);
		var indexData = new Uint16Array(MAX_INDICES);
		i = 0, len = MAX_INDICES;
		var fv = 0;
		while (i < len)
		{
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 1;	// top right
			indexData[i++] = fv + 2;	// bottom right (first tri)
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 2;	// bottom right
			indexData[i++] = fv + 3;	// bottom left
			fv += 4;
		}
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexData, gl.STATIC_DRAW);
		this.vertexPtr = 0;
		this.pointPtr = 0;
		var fsSource, vsSource;
		this.shaderPrograms = [];
		fsSource = [
			"varying mediump vec2 vTex;",
			"uniform lowp float opacity;",
			"uniform lowp sampler2D samplerFront;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, vTex);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		vsSource = [
			"attribute highp vec2 aPos;",
			"attribute mediump vec2 aTex;",
			"varying mediump vec2 vTex;",
			"uniform highp mat4 matP;",
			"uniform highp mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	vTex = aTex;",
			"}"
		].join("\n");
		var shaderProg = this.createShaderProgram({src: fsSource}, vsSource, "<default>");
;
		this.shaderPrograms.push(shaderProg);		// Default shader is always shader 0
		fsSource = [
			"uniform mediump sampler2D samplerFront;",
			"varying lowp float opacity;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, gl_PointCoord);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		var pointVsSource = [
			"attribute vec4 aPos;",
			"varying float opacity;",
			"uniform mat4 matP;",
			"uniform mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	gl_PointSize = aPos.z;",
			"	opacity = aPos.w;",
			"}"
		].join("\n");
		shaderProg = this.createShaderProgram({src: fsSource}, pointVsSource, "<point>");
;
		this.shaderPrograms.push(shaderProg);		// Point shader is always shader 1
		for (var shader_name in cr.shaders)
		{
			if (cr.shaders.hasOwnProperty(shader_name))
				this.shaderPrograms.push(this.createShaderProgram(cr.shaders[shader_name], vsSource, shader_name));
		}
		gl.activeTexture(gl.TEXTURE0);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.batch = [];
		this.batchPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.lastProgram = -1;				// start -1 so first switchProgram can do work
		this.currentProgram = -1;			// current program during batch execution
		this.currentShader = null;
		this.fbo = gl.createFramebuffer();
		this.renderToTex = null;
		this.tmpVec3 = vec3.create([0, 0, 0]);
;
		var pointsizes = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);
		this.minPointSize = pointsizes[0];
		this.maxPointSize = pointsizes[1];
		if (this.maxPointSize > 2048)
			this.maxPointSize = 2048;
;
;
		this.switchProgram(0);
		cr.seal(this);
	};
	function GLShaderProgram(gl, shaderProgram, name)
	{
		this.gl = gl;
		this.shaderProgram = shaderProgram;
		this.name = name;
		this.locAPos = gl.getAttribLocation(shaderProgram, "aPos");
		this.locATex = gl.getAttribLocation(shaderProgram, "aTex");
		this.locMatP = gl.getUniformLocation(shaderProgram, "matP");
		this.locMatMV = gl.getUniformLocation(shaderProgram, "matMV");
		this.locOpacity = gl.getUniformLocation(shaderProgram, "opacity");
		this.locSamplerFront = gl.getUniformLocation(shaderProgram, "samplerFront");
		this.locSamplerBack = gl.getUniformLocation(shaderProgram, "samplerBack");
		this.locDestStart = gl.getUniformLocation(shaderProgram, "destStart");
		this.locDestEnd = gl.getUniformLocation(shaderProgram, "destEnd");
		this.locSeconds = gl.getUniformLocation(shaderProgram, "seconds");
		this.locPixelWidth = gl.getUniformLocation(shaderProgram, "pixelWidth");
		this.locPixelHeight = gl.getUniformLocation(shaderProgram, "pixelHeight");
		this.locLayerScale = gl.getUniformLocation(shaderProgram, "layerScale");
		this.locLayerAngle = gl.getUniformLocation(shaderProgram, "layerAngle");
		this.locViewOrigin = gl.getUniformLocation(shaderProgram, "viewOrigin");
		this.hasAnyOptionalUniforms = !!(this.locPixelWidth || this.locPixelHeight || this.locSeconds || this.locSamplerBack || this.locDestStart || this.locDestEnd || this.locLayerScale || this.locLayerAngle || this.locViewOrigin);
		this.lpPixelWidth = -999;		// set to something unlikely so never counts as cached on first set
		this.lpPixelHeight = -999;
		this.lpOpacity = 1;
		this.lpDestStartX = 0.0;
		this.lpDestStartY = 0.0;
		this.lpDestEndX = 1.0;
		this.lpDestEndY = 1.0;
		this.lpLayerScale = 1.0;
		this.lpLayerAngle = 0.0;
		this.lpViewOriginX = 0.0;
		this.lpViewOriginY = 0.0;
		this.lastCustomParams = [];
		this.lpMatMV = mat4.create();
		if (this.locOpacity)
			gl.uniform1f(this.locOpacity, 1);
		if (this.locSamplerFront)
			gl.uniform1i(this.locSamplerFront, 0);
		if (this.locSamplerBack)
			gl.uniform1i(this.locSamplerBack, 1);
		if (this.locDestStart)
			gl.uniform2f(this.locDestStart, 0.0, 0.0);
		if (this.locDestEnd)
			gl.uniform2f(this.locDestEnd, 1.0, 1.0);
		if (this.locLayerScale)
			gl.uniform1f(this.locLayerScale, 1.0);
		if (this.locLayerAngle)
			gl.uniform1f(this.locLayerAngle, 0.0);
		if (this.locViewOrigin)
			gl.uniform2f(this.locViewOrigin, 0.0, 0.0);
		this.hasCurrentMatMV = false;		// matMV needs updating
	};
	function areMat4sEqual(a, b)
	{
		return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]&&
			   a[4]===b[4]&&a[5]===b[5]&&a[6]===b[6]&&a[7]===b[7]&&
			   a[8]===b[8]&&a[9]===b[9]&&a[10]===b[10]&&a[11]===b[11]&&
			   a[12]===b[12]&&a[13]===b[13]&&a[14]===b[14]&&a[15]===b[15];
	};
	GLShaderProgram.prototype.updateMatMV = function (mv)
	{
		if (areMat4sEqual(this.lpMatMV, mv))
			return;		// no change, save the expensive GL call
		mat4.set(mv, this.lpMatMV);
		this.gl.uniformMatrix4fv(this.locMatMV, false, mv);
	};
	GLWrap_.prototype.createShaderProgram = function(shaderEntry, vsSource, name)
	{
		var gl = this.gl;
		var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
		gl.shaderSource(fragmentShader, shaderEntry.src);
		gl.compileShader(fragmentShader);
		if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			return null;
		}
		var vertexShader = gl.createShader(gl.VERTEX_SHADER);
		gl.shaderSource(vertexShader, vsSource);
		gl.compileShader(vertexShader);
		if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			return null;
		}
		var shaderProgram = gl.createProgram();
		gl.attachShader(shaderProgram, fragmentShader);
		gl.attachShader(shaderProgram, vertexShader);
		gl.linkProgram(shaderProgram);
		if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			gl.deleteProgram(shaderProgram);
			return null;
		}
		gl.useProgram(shaderProgram);
		gl.deleteShader(fragmentShader);
		gl.deleteShader(vertexShader);
		var ret = new GLShaderProgram(gl, shaderProgram, name);
		ret.extendBoxHorizontal = shaderEntry.extendBoxHorizontal || 0;
		ret.extendBoxVertical = shaderEntry.extendBoxVertical || 0;
		ret.crossSampling = !!shaderEntry.crossSampling;
		ret.animated = !!shaderEntry.animated;
		ret.parameters = shaderEntry.parameters || [];
		var i, len;
		for (i = 0, len = ret.parameters.length; i < len; i++)
		{
			ret.parameters[i][1] = gl.getUniformLocation(shaderProgram, ret.parameters[i][0]);
			ret.lastCustomParams.push(0);
			gl.uniform1f(ret.parameters[i][1], 0);
		}
		cr.seal(ret);
		return ret;
	};
	GLWrap_.prototype.getShaderIndex = function(name_)
	{
		var i, len;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			if (this.shaderPrograms[i].name === name_)
				return i;
		}
		return -1;
	};
	GLWrap_.prototype.project = function (x, y, out)
	{
		var mv = this.matMV;
		var proj = this.matP;
		var fTempo = [0, 0, 0, 0, 0, 0, 0, 0];
		fTempo[0] = mv[0]*x+mv[4]*y+mv[12];
		fTempo[1] = mv[1]*x+mv[5]*y+mv[13];
		fTempo[2] = mv[2]*x+mv[6]*y+mv[14];
		fTempo[3] = mv[3]*x+mv[7]*y+mv[15];
		fTempo[4] = proj[0]*fTempo[0]+proj[4]*fTempo[1]+proj[8]*fTempo[2]+proj[12]*fTempo[3];
		fTempo[5] = proj[1]*fTempo[0]+proj[5]*fTempo[1]+proj[9]*fTempo[2]+proj[13]*fTempo[3];
		fTempo[6] = proj[2]*fTempo[0]+proj[6]*fTempo[1]+proj[10]*fTempo[2]+proj[14]*fTempo[3];
		fTempo[7] = -fTempo[2];
		if(fTempo[7]===0.0)	//The w value
			return;
		fTempo[7]=1.0/fTempo[7];
		fTempo[4]*=fTempo[7];
		fTempo[5]*=fTempo[7];
		fTempo[6]*=fTempo[7];
		out[0]=(fTempo[4]*0.5+0.5)*this.width;
		out[1]=(fTempo[5]*0.5+0.5)*this.height;
	};
	GLWrap_.prototype.setSize = function(w, h, force)
	{
		if (this.width === w && this.height === h && !force)
			return;
		this.endBatch();
		this.width = w;
		this.height = h;
		this.gl.viewport(0, 0, w, h);
		mat4.perspective(45, w / h, 1, 1000, this.matP);
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		var tl = [0, 0];
		var br = [0, 0];
		this.project(0, 0, tl);
		this.project(1, 1, br);
		this.worldScale[0] = 1 / (br[0] - tl[0]);
		this.worldScale[1] = -1 / (br[1] - tl[1]);
		var i, len, s;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			s = this.shaderPrograms[i];
			s.hasCurrentMatMV = false;
			if (s.locMatP)
			{
				this.gl.useProgram(s.shaderProgram);
				this.gl.uniformMatrix4fv(s.locMatP, false, this.matP);
			}
		}
		this.gl.useProgram(this.shaderPrograms[this.lastProgram].shaderProgram);
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.gl.activeTexture(this.gl.TEXTURE1);
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.gl.activeTexture(this.gl.TEXTURE0);
		this.lastTexture0 = null;
		this.lastTexture1 = null;
	};
	GLWrap_.prototype.resetModelView = function ()
	{
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		mat4.scale(this.matMV, this.worldScale);
	};
	GLWrap_.prototype.translate = function (x, y)
	{
		if (x === 0 && y === 0)
			return;
		this.tmpVec3[0] = x;// * this.worldScale[0];
		this.tmpVec3[1] = y;// * this.worldScale[1];
		this.tmpVec3[2] = 0;
		mat4.translate(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.scale = function (x, y)
	{
		if (x === 1 && y === 1)
			return;
		this.tmpVec3[0] = x;
		this.tmpVec3[1] = y;
		this.tmpVec3[2] = 1;
		mat4.scale(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.rotateZ = function (a)
	{
		if (a === 0)
			return;
		mat4.rotateZ(this.matMV, a);
	};
	GLWrap_.prototype.updateModelView = function()
	{
		var anydiff = false;
		for (var i = 0; i < 16; i++)
		{
			if (this.lastMV[i] !== this.matMV[i])
			{
				anydiff = true;
				break;
			}
		}
		if (!anydiff)
			return;
		var b = this.pushBatch();
		b.type = BATCH_UPDATEMODELVIEW;
		if (b.mat4param)
			mat4.set(this.matMV, b.mat4param);
		else
			b.mat4param = mat4.create(this.matMV);
		mat4.set(this.matMV, this.lastMV);
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	/*
	var debugBatch = false;
	jQuery(document).mousedown(
		function(info) {
			if (info.which === 2)
				debugBatch = true;
		}
	);
	*/
	function GLBatchJob(type_, glwrap_)
	{
		this.type = type_;
		this.glwrap = glwrap_;
		this.gl = glwrap_.gl;
		this.opacityParam = 0;		// for setOpacity()
		this.startIndex = 0;		// for quad()
		this.indexCount = 0;		// "
		this.texParam = null;		// for setTexture()
		this.mat4param = null;		// for updateModelView()
		this.shaderParams = [];		// for user parameters
		cr.seal(this);
	};
	GLBatchJob.prototype.doSetTexture = function ()
	{
		this.gl.bindTexture(this.gl.TEXTURE_2D, this.texParam);
	};
	GLBatchJob.prototype.doSetTexture1 = function ()
	{
		var gl = this.gl;
		gl.activeTexture(gl.TEXTURE1);
		gl.bindTexture(gl.TEXTURE_2D, this.texParam);
		gl.activeTexture(gl.TEXTURE0);
	};
	GLBatchJob.prototype.doSetOpacity = function ()
	{
		var o = this.opacityParam;
		var glwrap = this.glwrap;
		glwrap.currentOpacity = o;
		var curProg = glwrap.currentShader;
		if (curProg.locOpacity && curProg.lpOpacity !== o)
		{
			curProg.lpOpacity = o;
			this.gl.uniform1f(curProg.locOpacity, o);
		}
	};
	GLBatchJob.prototype.doQuad = function ()
	{
		this.gl.drawElements(this.gl.TRIANGLES, this.indexCount, this.gl.UNSIGNED_SHORT, this.startIndex * 2);
	};
	GLBatchJob.prototype.doSetBlend = function ()
	{
		this.gl.blendFunc(this.startIndex, this.indexCount);
	};
	GLBatchJob.prototype.doUpdateModelView = function ()
	{
		var i, len, s, shaderPrograms = this.glwrap.shaderPrograms, currentProgram = this.glwrap.currentProgram;
		for (i = 0, len = shaderPrograms.length; i < len; i++)
		{
			s = shaderPrograms[i];
			if (i === currentProgram && s.locMatMV)
			{
				s.updateMatMV(this.mat4param);
				s.hasCurrentMatMV = true;
			}
			else
				s.hasCurrentMatMV = false;
		}
		mat4.set(this.mat4param, this.glwrap.currentMV);
	};
	GLBatchJob.prototype.doRenderToTexture = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		if (this.texParam)
		{
			if (glwrap.lastTexture1 === this.texParam)
			{
				gl.activeTexture(gl.TEXTURE1);
				gl.bindTexture(gl.TEXTURE_2D, null);
				glwrap.lastTexture1 = null;
				gl.activeTexture(gl.TEXTURE0);
			}
			gl.bindFramebuffer(gl.FRAMEBUFFER, glwrap.fbo);
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texParam, 0);
		}
		else
		{
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0);
			gl.bindFramebuffer(gl.FRAMEBUFFER, null);
		}
	};
	GLBatchJob.prototype.doClear = function ()
	{
		var gl = this.gl;
		if (this.startIndex === 0)		// clear whole surface
		{
			gl.clearColor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clear(gl.COLOR_BUFFER_BIT);
		}
		else							// clear rectangle
		{
			gl.enable(gl.SCISSOR_TEST);
			gl.scissor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clearColor(0, 0, 0, 0);
			gl.clear(this.gl.COLOR_BUFFER_BIT);
			gl.disable(gl.SCISSOR_TEST);
		}
	};
	GLBatchJob.prototype.doPoints = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[1];
		gl.useProgram(s.shaderProgram);
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			s.updateMatMV(glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		gl.enableVertexAttribArray(s.locAPos);
		gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.pointBuffer);
		gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		gl.drawArrays(gl.POINTS, this.startIndex / 4, this.indexCount);
		s = glwrap.currentShader;
		gl.useProgram(s.shaderProgram);
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	};
	GLBatchJob.prototype.doSetProgram = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[this.startIndex];		// recycled param to save memory
		glwrap.currentProgram = this.startIndex;			// current batch program
		glwrap.currentShader = s;
		gl.useProgram(s.shaderProgram);						// switch to
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			s.updateMatMV(glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		if (s.locOpacity && s.lpOpacity !== glwrap.currentOpacity)
		{
			s.lpOpacity = glwrap.currentOpacity;
			gl.uniform1f(s.locOpacity, glwrap.currentOpacity);
		}
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	}
	GLBatchJob.prototype.doSetProgramParameters = function ()
	{
		var i, len, s = this.glwrap.currentShader;
		var gl = this.gl;
		var mat4param = this.mat4param;
		if (s.locSamplerBack && this.glwrap.lastTexture1 !== this.texParam)
		{
			gl.activeTexture(gl.TEXTURE1);
			gl.bindTexture(gl.TEXTURE_2D, this.texParam);
			this.glwrap.lastTexture1 = this.texParam;
			gl.activeTexture(gl.TEXTURE0);
		}
		var v = mat4param[0];
		var v2;
		if (s.locPixelWidth && v !== s.lpPixelWidth)
		{
			s.lpPixelWidth = v;
			gl.uniform1f(s.locPixelWidth, v);
		}
		v = mat4param[1];
		if (s.locPixelHeight && v !== s.lpPixelHeight)
		{
			s.lpPixelHeight = v;
			gl.uniform1f(s.locPixelHeight, v);
		}
		v = mat4param[2];
		v2 = mat4param[3];
		if (s.locDestStart && (v !== s.lpDestStartX || v2 !== s.lpDestStartY))
		{
			s.lpDestStartX = v;
			s.lpDestStartY = v2;
			gl.uniform2f(s.locDestStart, v, v2);
		}
		v = mat4param[4];
		v2 = mat4param[5];
		if (s.locDestEnd && (v !== s.lpDestEndX || v2 !== s.lpDestEndY))
		{
			s.lpDestEndX = v;
			s.lpDestEndY = v;
			gl.uniform2f(s.locDestEnd, v, v2);
		}
		v = mat4param[6];
		if (s.locLayerScale && v !== s.lpLayerScale)
		{
			s.lpLayerScale = v;
			gl.uniform1f(s.locLayerScale, v);
		}
		v = mat4param[7];
		if (s.locLayerAngle && v !== s.lpLayerAngle)
		{
			s.lpLayerAngle = v;
			gl.uniform1f(s.locLayerAngle, v);
		}
		v = mat4param[8];
		v2 = mat4param[9];
		if (s.locViewOrigin && (v !== s.lpViewOriginX || v !== s.lpViewOriginY))
		{
			s.lpViewOriginX = v;
			s.lpViewOriginY = v2;
			gl.uniform2f(s.locViewOrigin, v, v2);
		}
		if (s.locSeconds)
			gl.uniform1f(s.locSeconds, cr.performance_now() / 1000.0);
		if (s.parameters.length)
		{
			for (i = 0, len = s.parameters.length; i < len; i++)
			{
				v = this.shaderParams[i];
				if (v !== s.lastCustomParams[i])
				{
					s.lastCustomParams[i] = v;
					gl.uniform1f(s.parameters[i][1], v);
				}
			}
		}
	};
	GLWrap_.prototype.pushBatch = function ()
	{
		if (this.batchPtr === this.batch.length)
			this.batch.push(new GLBatchJob(BATCH_NULL, this));
		return this.batch[this.batchPtr++];
	};
	GLWrap_.prototype.endBatch = function ()
	{
		if (this.batchPtr === 0)
			return;
		if (this.gl.isContextLost())
			return;
		var gl = this.gl;
		if (this.pointPtr > 0)
		{
			gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
			gl.bufferData(gl.ARRAY_BUFFER, this.pointData.subarray(0, this.pointPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name === "<point>")
				gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		}
		if (this.vertexPtr > 0)
		{
			var s = this.currentShader;
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.vertexData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.texcoordData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locATex >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
		var i, len, b;
		for (i = 0, len = this.batchPtr; i < len; i++)
		{
			b = this.batch[i];
			switch (b.type) {
			case 1:
				b.doQuad();
				break;
			case 2:
				b.doSetTexture();
				break;
			case 3:
				b.doSetOpacity();
				break;
			case 4:
				b.doSetBlend();
				break;
			case 5:
				b.doUpdateModelView();
				break;
			case 6:
				b.doRenderToTexture();
				break;
			case 7:
				b.doClear();
				break;
			case 8:
				b.doPoints();
				break;
			case 9:
				b.doSetProgram();
				break;
			case 10:
				b.doSetProgramParameters();
				break;
			case 11:
				b.doSetTexture1();
				break;
			}
		}
		this.batchPtr = 0;
		this.vertexPtr = 0;
		this.pointPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.curBuffer++;
		if (this.curBuffer >= MULTI_BUFFERS)
			this.curBuffer = 0;
	};
	GLWrap_.prototype.setOpacity = function (op)
	{
		if (op === this.lastOpacity)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETOPACITY;
		b.opacityParam = op;
		this.lastOpacity = op;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setTexture = function (tex)
	{
		if (tex === this.lastTexture0)
			return;
;
		var b = this.pushBatch();
		b.type = BATCH_SETTEXTURE;
		b.texParam = tex;
		this.lastTexture0 = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setBlend = function (s, d)
	{
		if (s === this.lastSrcBlend && d === this.lastDestBlend)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETBLEND;
		b.startIndex = s;		// recycle params to save memory
		b.indexCount = d;
		this.lastSrcBlend = s;
		this.lastDestBlend = d;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.isPremultipliedAlphaBlend = function ()
	{
		return (this.lastSrcBlend === this.gl.ONE && this.lastDestBlend === this.gl.ONE_MINUS_SRC_ALPHA);
	};
	GLWrap_.prototype.setAlphaBlend = function ()
	{
		this.setBlend(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);
	};
	GLWrap_.prototype.setNoPremultiplyAlphaBlend = function ()
	{
		this.setBlend(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);
	};
	var LAST_VERTEX = MAX_VERTICES * 2 - 8;
	GLWrap_.prototype.quad = function(tlx, tly, trx, try_, brx, bry, blx, bly)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = 0;
		vd[v] = tly;
		td[v++] = 0;
		vd[v] = trx;
		td[v++] = 1;
		vd[v] = try_;
		td[v++] = 0;
		vd[v] = brx;
		td[v++] = 1;
		vd[v] = bry;
		td[v++] = 1;
		vd[v] = blx;
		td[v++] = 0;
		vd[v] = bly;
		td[v++] = 1;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.quadTex = function(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		var rc_left = rcTex.left;
		var rc_top = rcTex.top;
		var rc_right = rcTex.right;
		var rc_bottom = rcTex.bottom;
		vd[v] = tlx;
		td[v++] = rc_left;
		vd[v] = tly;
		td[v++] = rc_top;
		vd[v] = trx;
		td[v++] = rc_right;
		vd[v] = try_;
		td[v++] = rc_top;
		vd[v] = brx;
		td[v++] = rc_right;
		vd[v] = bry;
		td[v++] = rc_bottom;
		vd[v] = blx;
		td[v++] = rc_left;
		vd[v] = bly;
		td[v++] = rc_bottom;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.quadTexUV = function(tlx, tly, trx, try_, brx, bry, blx, bly, tlu, tlv, tru, trv, bru, brv, blu, blv)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = tlu;
		vd[v] = tly;
		td[v++] = tlv;
		vd[v] = trx;
		td[v++] = tru;
		vd[v] = try_;
		td[v++] = trv;
		vd[v] = brx;
		td[v++] = bru;
		vd[v] = bry;
		td[v++] = brv;
		vd[v] = blx;
		td[v++] = blu;
		vd[v] = bly;
		td[v++] = blv;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.convexPoly = function(pts)
	{
		var pts_count = pts.length / 2;
;
		var tris = pts_count - 2;	// 3 points = 1 tri, 4 points = 2 tris, 5 points = 3 tris etc.
		var last_tri = tris - 1;
		var p0x = pts[0];
		var p0y = pts[1];
		var i, i2, p1x, p1y, p2x, p2y, p3x, p3y;
		for (i = 0; i < tris; i += 2)		// draw 2 triangles at a time
		{
			i2 = i * 2;
			p1x = pts[i2 + 2];
			p1y = pts[i2 + 3];
			p2x = pts[i2 + 4];
			p2y = pts[i2 + 5];
			if (i === last_tri)
			{
				this.quad(p0x, p0y, p1x, p1y, p2x, p2y, p2x, p2y);
			}
			else
			{
				p3x = pts[i2 + 6];
				p3y = pts[i2 + 7];
				this.quad(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y);
			}
		}
	};
	var LAST_POINT = MAX_POINTS - 4;
	GLWrap_.prototype.point = function(x_, y_, size_, opacity_)
	{
		if (this.pointPtr >= LAST_POINT)
			this.endBatch();
		var p = this.pointPtr;			// point cursor
		var pd = this.pointData;		// point data array
		if (this.hasPointBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount++;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_POINTS;
			b.startIndex = p;
			b.indexCount = 1;
			this.hasPointBatchTop = true;
			this.hasQuadBatchTop = false;
		}
		pd[p++] = x_;
		pd[p++] = y_;
		pd[p++] = size_;
		pd[p++] = opacity_;
		this.pointPtr = p;
	};
	GLWrap_.prototype.switchProgram = function (progIndex)
	{
		if (this.lastProgram === progIndex)
			return;			// no change
		var shaderProg = this.shaderPrograms[progIndex];
		if (!shaderProg)
		{
			if (this.lastProgram === 0)
				return;								// already on default shader
			progIndex = 0;
			shaderProg = this.shaderPrograms[0];
		}
		var b = this.pushBatch();
		b.type = BATCH_SETPROGRAM;
		b.startIndex = progIndex;
		this.lastProgram = progIndex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.programUsesDest = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return !!(s.locDestStart || s.locDestEnd);
	};
	GLWrap_.prototype.programUsesCrossSampling = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return !!(s.locDestStart || s.locDestEnd || s.crossSampling);
	};
	GLWrap_.prototype.programExtendsBox = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return s.extendBoxHorizontal !== 0 || s.extendBoxVertical !== 0;
	};
	GLWrap_.prototype.getProgramBoxExtendHorizontal = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxHorizontal;
	};
	GLWrap_.prototype.getProgramBoxExtendVertical = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxVertical;
	};
	GLWrap_.prototype.getProgramParameterType = function (progIndex, paramIndex)
	{
		return this.shaderPrograms[progIndex].parameters[paramIndex][2];
	};
	GLWrap_.prototype.programIsAnimated = function (progIndex)
	{
		return this.shaderPrograms[progIndex].animated;
	};
	GLWrap_.prototype.setProgramParameters = function (backTex, pixelWidth, pixelHeight, destStartX, destStartY, destEndX, destEndY, layerScale, layerAngle, viewOriginLeft, viewOriginTop, params)
	{
		var i, len;
		var s = this.shaderPrograms[this.lastProgram];
		var b, mat4param, shaderParams;
		if (s.hasAnyOptionalUniforms || params.length)
		{
			b = this.pushBatch();
			b.type = BATCH_SETPROGRAMPARAMETERS;
			if (b.mat4param)
				mat4.set(this.matMV, b.mat4param);
			else
				b.mat4param = mat4.create();
			mat4param = b.mat4param;
			mat4param[0] = pixelWidth;
			mat4param[1] = pixelHeight;
			mat4param[2] = destStartX;
			mat4param[3] = destStartY;
			mat4param[4] = destEndX;
			mat4param[5] = destEndY;
			mat4param[6] = layerScale;
			mat4param[7] = layerAngle;
			mat4param[8] = viewOriginLeft;
			mat4param[9] = viewOriginTop;
			if (s.locSamplerBack)
			{
;
				b.texParam = backTex;
			}
			else
				b.texParam = null;
			if (params.length)
			{
				shaderParams = b.shaderParams;
				shaderParams.length = params.length;
				for (i = 0, len = params.length; i < len; i++)
					shaderParams[i] = params[i];
			}
			this.hasQuadBatchTop = false;
			this.hasPointBatchTop = false;
		}
	};
	GLWrap_.prototype.clear = function (r, g, b_, a)
	{
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 0;					// clear all mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = r;
		b.mat4param[1] = g;
		b.mat4param[2] = b_;
		b.mat4param[3] = a;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.clearRect = function (x, y, w, h)
	{
		if (w < 0 || h < 0)
			return;							// invalid clear area
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 1;					// clear rect mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = x;
		b.mat4param[1] = y;
		b.mat4param[2] = w;
		b.mat4param[3] = h;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.present = function ()
	{
		this.endBatch();
		this.gl.flush();
		/*
		if (debugBatch)
		{
;
			debugBatch = false;
		}
		*/
	};
	function nextHighestPowerOfTwo(x) {
		--x;
		for (var i = 1; i < 32; i <<= 1) {
			x = x | x >> i;
		}
		return x + 1;
	}
	var all_textures = [];
	var textures_by_src = {};
	GLWrap_.prototype.contextLost = function ()
	{
		all_textures.length = 0;
		textures_by_src = {};
	};
	var BF_RGBA8 = 0;
	var BF_RGB8 = 1;
	var BF_RGBA4 = 2;
	var BF_RGB5_A1 = 3;
	var BF_RGB565 = 4;
	GLWrap_.prototype.loadTexture = function (img, tiling, linearsampling, pixelformat, tiletype, nomip)
	{
		tiling = !!tiling;
		linearsampling = !!linearsampling;
		var tex_key = img.src + "," + tiling + "," + linearsampling + (tiling ? ("," + tiletype) : "");
		var webGL_texture = null;
		if (typeof img.src !== "undefined" && textures_by_src.hasOwnProperty(tex_key))
		{
			webGL_texture = textures_by_src[tex_key];
			webGL_texture.c2refcount++;
			return webGL_texture;
		}
		this.endBatch();
;
		var gl = this.gl;
		var isPOT = (cr.isPOT(img.width) && cr.isPOT(img.height));
		webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"], true);
		var internalformat = gl.RGBA;
		var format = gl.RGBA;
		var type = gl.UNSIGNED_BYTE;
		if (pixelformat && !this.isIE)
		{
			switch (pixelformat) {
			case BF_RGB8:
				internalformat = gl.RGB;
				format = gl.RGB;
				break;
			case BF_RGBA4:
				type = gl.UNSIGNED_SHORT_4_4_4_4;
				break;
			case BF_RGB5_A1:
				type = gl.UNSIGNED_SHORT_5_5_5_1;
				break;
			case BF_RGB565:
				internalformat = gl.RGB;
				format = gl.RGB;
				type = gl.UNSIGNED_SHORT_5_6_5;
				break;
			}
		}
		if (!isPOT && tiling)
		{
			var canvas = document.createElement("canvas");
			canvas.width = cr.nextHighestPowerOfTwo(img.width);
			canvas.height = cr.nextHighestPowerOfTwo(img.height);
			var ctx = canvas.getContext("2d");
			ctx["webkitImageSmoothingEnabled"] = linearsampling;
			ctx["mozImageSmoothingEnabled"] = linearsampling;
			ctx["msImageSmoothingEnabled"] = linearsampling;
			ctx["imageSmoothingEnabled"] = linearsampling;
			ctx.drawImage(img,
						  0, 0, img.width, img.height,
						  0, 0, canvas.width, canvas.height);
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, canvas);
		}
		else
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, img);
		if (tiling)
		{
			if (tiletype === "repeat-x")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
			}
			else if (tiletype === "repeat-y")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
			else
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		}
		if (linearsampling)
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
			if (isPOT && this.enable_mipmaps && !nomip)
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);
				gl.generateMipmap(gl.TEXTURE_2D);
			}
			else
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
		}
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
		webGL_texture.c2width = img.width;
		webGL_texture.c2height = img.height;
		webGL_texture.c2refcount = 1;
		webGL_texture.c2texkey = tex_key;
		all_textures.push(webGL_texture);
		textures_by_src[tex_key] = webGL_texture;
		return webGL_texture;
	};
	GLWrap_.prototype.createEmptyTexture = function (w, h, linearsampling, _16bit, tiling)
	{
		this.endBatch();
		var gl = this.gl;
		if (this.isIE)
			_16bit = false;
		var webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, null);
		if (tiling)
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		}
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
		webGL_texture.c2width = w;
		webGL_texture.c2height = h;
		all_textures.push(webGL_texture);
		return webGL_texture;
	};
	GLWrap_.prototype.videoToTexture = function (video_, texture_, _16bit)
	{
		this.endBatch();
		var gl = this.gl;
		if (this.isIE)
			_16bit = false;
		gl.bindTexture(gl.TEXTURE_2D, texture_);
		gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"], true);
		try {
			gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, video_);
		}
		catch (e)
		{
			if (console && console.error)
				console.error("Error updating WebGL texture: ", e);
		}
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
	};
	GLWrap_.prototype.deleteTexture = function (tex)
	{
		if (!tex)
			return;
		if (typeof tex.c2refcount !== "undefined" && tex.c2refcount > 1)
		{
			tex.c2refcount--;
			return;
		}
		this.endBatch();
		if (tex === this.lastTexture0)
		{
			this.gl.bindTexture(this.gl.TEXTURE_2D, null);
			this.lastTexture0 = null;
		}
		if (tex === this.lastTexture1)
		{
			this.gl.activeTexture(this.gl.TEXTURE1);
			this.gl.bindTexture(this.gl.TEXTURE_2D, null);
			this.gl.activeTexture(this.gl.TEXTURE0);
			this.lastTexture1 = null;
		}
		cr.arrayFindRemove(all_textures, tex);
		if (typeof tex.c2texkey !== "undefined")
			delete textures_by_src[tex.c2texkey];
		this.gl.deleteTexture(tex);
	};
	GLWrap_.prototype.estimateVRAM = function ()
	{
		var total = this.width * this.height * 4 * 2;
		var i, len, t;
		for (i = 0, len = all_textures.length; i < len; i++)
		{
			t = all_textures[i];
			total += (t.c2width * t.c2height * 4);
		}
		return total;
	};
	GLWrap_.prototype.textureCount = function ()
	{
		return all_textures.length;
	};
	GLWrap_.prototype.setRenderingToTexture = function (tex)
	{
		if (tex === this.renderToTex)
			return;
;
		var b = this.pushBatch();
		b.type = BATCH_RENDERTOTEXTURE;
		b.texParam = tex;
		this.renderToTex = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	cr.GLWrap = GLWrap_;
}());
;
(function()
{
	function window_innerWidth()
	{
		if (typeof jQuery !== "undefined")
			return jQuery(window).width();
		else
			return window.innerWidth;
	};
	function window_innerHeight()
	{
		if (typeof jQuery !== "undefined")
			return jQuery(window).height();
		else
			return window.innerHeight;
	};
	function Runtime(canvas)
	{
		if (!canvas || (!canvas.getContext && !canvas["dc"]))
			return;
		if (canvas["c2runtime"])
			return;
		else
			canvas["c2runtime"] = this;
		var self = this;
		this.isCrosswalk = /crosswalk/i.test(navigator.userAgent) || /xwalk/i.test(navigator.userAgent) || !!(typeof window["c2isCrosswalk"] !== "undefined" && window["c2isCrosswalk"]);
		this.isPhoneGap = this.isCrosswalk || (typeof window["device"] !== "undefined" && (typeof window["device"]["cordova"] !== "undefined" || typeof window["device"]["phonegap"] !== "undefined")) || (typeof window["c2isphonegap"] !== "undefined" && window["c2isphonegap"]);
		this.isDirectCanvas = !!canvas["dc"];
		this.isAppMobi = (typeof window["AppMobi"] !== "undefined" || this.isDirectCanvas);
		this.isCocoonJs = !!window["c2cocoonjs"];
		this.isEjecta = !!window["c2ejecta"];
		if (this.isCocoonJs)
		{
			CocoonJS["App"]["onSuspended"].addEventListener(function() {
				self["setSuspended"](true);
			});
			CocoonJS["App"]["onActivated"].addEventListener(function () {
				self["setSuspended"](false);
			});
		}
		if (this.isEjecta)
		{
			document.addEventListener("pagehide", function() {
				self["setSuspended"](true);
			});
			document.addEventListener("pageshow", function() {
				self["setSuspended"](false);
			});
			document.addEventListener("resize", function () {
				self["setSize"](window.innerWidth, window.innerHeight);
			});
		}
		this.isDomFree = (this.isDirectCanvas || this.isCocoonJs || this.isEjecta);
		this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent) || /iemobile/i.test(navigator.userAgent);
		this.isTizen = /tizen/i.test(navigator.userAgent);
		this.isAndroid = /android/i.test(navigator.userAgent) && !this.isTizen && !this.isIE;		// IE mobile and Tizen masquerade as Android
		this.isiPhone = (/iphone/i.test(navigator.userAgent) || /ipod/i.test(navigator.userAgent)) && !this.isIE;	// treat ipod as an iphone; IE mobile masquerades as iPhone
		this.isiPad = /ipad/i.test(navigator.userAgent);
		this.isiOS = this.isiPhone || this.isiPad || this.isEjecta;
		this.isiPhoneiOS6 = (this.isiPhone && /os\s6/i.test(navigator.userAgent));
		this.isChrome = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent);	// note true on Chromium-based webview on Android 4.4+
		this.isAmazonWebApp = /amazonwebappplatform/i.test(navigator.userAgent);
		this.isFirefox = /firefox/i.test(navigator.userAgent);
		this.isSafari = /safari/i.test(navigator.userAgent) && !this.isChrome && !this.isIE;		// Chrome and IE Mobile masquerade as Safari
		this.isWindows = /windows/i.test(navigator.userAgent);
		this.isNodeWebkit = (typeof window["c2nodewebkit"] !== "undefined" || /nodewebkit/i.test(navigator.userAgent));
		this.isArcade = (typeof window["is_scirra_arcade"] !== "undefined");
		this.isWindows8App = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.isWindows8Capable = !!(typeof window["c2isWindows8Capable"] !== "undefined" && window["c2isWindows8Capable"]);
		this.isWindowsPhone8 = !!(typeof window["c2isWindowsPhone8"] !== "undefined" && window["c2isWindowsPhone8"]);
		this.isWindowsPhone81 = !!(typeof window["c2isWindowsPhone81"] !== "undefined" && window["c2isWindowsPhone81"]);
		this.isWinJS = (this.isWindows8App || this.isWindows8Capable || this.isWindowsPhone81);	// note not WP8.0
		this.isBlackberry10 = !!(typeof window["c2isBlackberry10"] !== "undefined" && window["c2isBlackberry10"]);
		this.isAndroidStockBrowser = (this.isAndroid && !this.isChrome && !this.isCrosswalk && !this.isFirefox && !this.isAmazonWebApp && !this.isDomFree);
		this.devicePixelRatio = 1;
		this.isMobile = (this.isPhoneGap || this.isCrosswalk || this.isAppMobi || this.isCocoonJs || this.isAndroid || this.isiOS || this.isWindowsPhone8 || this.isWindowsPhone81 || this.isBlackberry10 || this.isTizen || this.isEjecta);
		if (!this.isMobile)
		{
			this.isMobile = /(blackberry|bb10|playbook|palm|symbian|nokia|windows\s+ce|phone|mobile|tablet|kindle|silk)/i.test(navigator.userAgent);
		}
		if (typeof cr_is_preview !== "undefined" && !this.isNodeWebkit && (window.location.search === "?nw" || /nodewebkit/i.test(navigator.userAgent)))
		{
			this.isNodeWebkit = true;
		}
		this.isDebug = (typeof cr_is_preview !== "undefined" && window.location.search.indexOf("debug") > -1);
		this.canvas = canvas;
		this.canvasdiv = document.getElementById("c2canvasdiv");
		this.gl = null;
		this.glwrap = null;
		this.ctx = null;
		this.fullscreenOldMarginCss = "";
		this.firstInFullscreen = false;
		this.oldWidth = 0;		// for restoring non-fullscreen canvas after fullscreen
		this.oldHeight = 0;
		this.canvas.oncontextmenu = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		this.canvas.onselectstart = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		if (this.isDirectCanvas)
			window["c2runtime"] = this;
		if (this.isNodeWebkit)
		{
			window["ondragover"] = function(e) { e.preventDefault(); return false; };
			window["ondrop"] = function(e) { e.preventDefault(); return false; };
			require("nw.gui")["App"]["clearCache"]();
		}
		if (this.isAndroidStockBrowser && typeof jQuery !== "undefined")
		{
			jQuery("canvas").parents("*").css("overflow", "visible");
		}
		this.width = canvas.width;
		this.height = canvas.height;
		this.draw_width = this.width;
		this.draw_height = this.height;
		this.cssWidth = this.width;
		this.cssHeight = this.height;
		this.lastWindowWidth = window.innerWidth;
		this.lastWindowHeight = window.innerHeight;
		this.redraw = true;
		this.isSuspended = false;
		if (!Date.now) {
		  Date.now = function now() {
			return +new Date();
		  };
		}
		this.plugins = [];
		this.types = {};
		this.types_by_index = [];
		this.behaviors = [];
		this.layouts = {};
		this.layouts_by_index = [];
		this.eventsheets = {};
		this.eventsheets_by_index = [];
		this.wait_for_textures = [];        // for blocking until textures loaded
		this.triggers_to_postinit = [];
		this.all_global_vars = [];
		this.all_local_vars = [];
		this.solidBehavior = null;
		this.jumpthruBehavior = null;
		this.shadowcasterBehavior = null;
		this.deathRow = new cr.ObjectSet();
		this.isInClearDeathRow = false;
		this.isInOnDestroy = 0;					// needs to support recursion so increments and decrements and is true if > 0
		this.isRunningEvents = false;
		this.createRow = [];
		this.isLoadingState = false;
		this.saveToSlot = "";
		this.loadFromSlot = "";
		this.loadFromJson = "";
		this.lastSaveJson = "";
		this.signalledContinuousPreview = false;
		this.suspendDrawing = false;		// for hiding display until continuous preview loads
		this.dt = 0;
        this.dt1 = 0;
		this.logictime = 0;			// used to calculate CPUUtilisation
		this.cpuutilisation = 0;
		this.zeroDtCount = 0;
        this.timescale = 1.0;
        this.kahanTime = new cr.KahanAdder();
		this.wallTime = new cr.KahanAdder();
		this.last_tick_time = 0;
		this.measuring_dt = true;
		this.fps = 0;
		this.last_fps_time = 0;
		this.tickcount = 0;
		this.execcount = 0;
		this.framecount = 0;        // for fps
		this.objectcount = 0;
		this.changelayout = null;
		this.destroycallbacks = [];
		this.event_stack = [];
		this.event_stack_index = -1;
		this.localvar_stack = [[]];
		this.localvar_stack_index = 0;
		this.trigger_depth = 0;		// recursion depth for triggers
		this.pushEventStack(null);
		this.loop_stack = [];
		this.loop_stack_index = -1;
		this.next_uid = 0;
		this.next_puid = 0;		// permanent unique ids
		this.layout_first_tick = true;
		this.family_count = 0;
		this.suspend_events = [];
		this.raf_id = -1;
		this.timeout_id = -1;
		this.isloading = true;
		this.loadingprogress = 0;
		this.isNodeFullscreen = false;
		this.stackLocalCount = 0;	// number of stack-based local vars for recursion
		this.audioInstance = null;
		this.halfFramerateMode = false;
		this.lastRafTime = 0;		// time of last requestAnimationFrame call
		this.ranLastRaf = false;	// false if last requestAnimationFrame was skipped for half framerate mode
		this.had_a_click = false;
		this.isInUserInputEvent = false;
		this.objects_to_pretick = new cr.ObjectSet();
        this.objects_to_tick = new cr.ObjectSet();
		this.objects_to_tick2 = new cr.ObjectSet();
		this.registered_collisions = [];
		this.temp_poly = new cr.CollisionPoly([]);
		this.temp_poly2 = new cr.CollisionPoly([]);
		this.allGroups = [];				// array of all event groups
        this.groups_by_name = {};
		this.cndsBySid = {};
		this.actsBySid = {};
		this.varsBySid = {};
		this.blocksBySid = {};
		this.running_layout = null;			// currently running layout
		this.layer_canvas = null;			// for layers "render-to-texture"
		this.layer_ctx = null;
		this.layer_tex = null;
		this.layout_tex = null;
		this.layout_canvas = null;
		this.layout_ctx = null;
		this.is_WebGL_context_lost = false;
		this.uses_background_blending = false;	// if any shader uses background blending, so entire layout renders to texture
		this.fx_tex = [null, null];
		this.fullscreen_scaling = 0;
		this.files_subfolder = "";			// path with project files
		this.objectsByUid = {};				// maps every in-use UID (as a string) to its instance
		this.loaderlogo = null;
		this.snapshotCanvas = null;
		this.snapshotData = "";
		this.load();
		this.isRetina = ((!this.isDomFree || this.isEjecta) && this.useHighDpi && !this.isAndroidStockBrowser);
		this.devicePixelRatio = (this.isRetina ? (window["devicePixelRatio"] || window["webkitDevicePixelRatio"] || window["mozDevicePixelRatio"] || window["msDevicePixelRatio"] || 1) : 1);
		this.ClearDeathRow();
		var attribs;
		var alpha_canvas = this.alphaBackground && !(this.isNodeWebkit || this.isWinJS || this.isWindowsPhone8 || this.isCrosswalk || this.isPhoneGap);
		if (this.fullscreen_mode > 0)
			this["setSize"](window_innerWidth(), window_innerHeight(), true);
		try {
			if (this.enableWebGL && (this.isCocoonJs || this.isEjecta || !this.isDomFree))
			{
				attribs = {
					"alpha": alpha_canvas,
					"depth": false,
					"antialias": false,
					"failIfMajorPerformanceCaveat": true
				};
				this.gl = (canvas.getContext("webgl", attribs) || canvas.getContext("experimental-webgl", attribs));
			}
		}
		catch (e) {
		}
		if (this.gl)
		{
			if (!this.isDomFree)
			{
				this.overlay_canvas = document.createElement("canvas");
				jQuery(this.overlay_canvas).appendTo(this.canvas.parentNode);
				this.overlay_canvas.oncontextmenu = function (e) { return false; };
				this.overlay_canvas.onselectstart = function (e) { return false; };
				this.overlay_canvas.width = this.cssWidth;
				this.overlay_canvas.height = this.cssHeight;
				jQuery(this.overlay_canvas).css({"width": this.cssWidth + "px",
												"height": this.cssHeight + "px"});
				this.positionOverlayCanvas();
				this.overlay_ctx = this.overlay_canvas.getContext("2d");
			}
			this.glwrap = new cr.GLWrap(this.gl, this.isMobile);
			this.glwrap.setSize(canvas.width, canvas.height);
			this.glwrap.enable_mipmaps = (this.downscalingQuality !== 0);
			this.ctx = null;
			this.canvas.addEventListener("webglcontextlost", function (ev) {
				ev.preventDefault();
				self.onContextLost();
				console.log("[Construct 2] WebGL context lost");
				window["cr_setSuspended"](true);		// stop rendering
			}, false);
			this.canvas.addEventListener("webglcontextrestored", function (ev) {
				self.glwrap.initState();
				self.glwrap.setSize(self.glwrap.width, self.glwrap.height, true);
				self.layer_tex = null;
				self.layout_tex = null;
				self.fx_tex[0] = null;
				self.fx_tex[1] = null;
				self.onContextRestored();
				self.redraw = true;
				console.log("[Construct 2] WebGL context restored");
				window["cr_setSuspended"](false);		// resume rendering
			}, false);
			var i, len, j, lenj, k, lenk, t, s, l, y;
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
				{
					s = t.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
					this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
				}
			}
			for (i = 0, len = this.layouts_by_index.length; i < len; i++)
			{
				l = this.layouts_by_index[i];
				for (j = 0, lenj = l.effect_types.length; j < lenj; j++)
				{
					s = l.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
				}
				for (j = 0, lenj = l.layers.length; j < lenj; j++)
				{
					y = l.layers[j];
					for (k = 0, lenk = y.effect_types.length; k < lenk; k++)
					{
						s = y.effect_types[k];
						s.shaderindex = this.glwrap.getShaderIndex(s.id);
						this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
					}
				}
			}
		}
		else
		{
			if (this.fullscreen_mode > 0 && this.isDirectCanvas)
			{
;
				this.canvas = null;
				document.oncontextmenu = function (e) { return false; };
				document.onselectstart = function (e) { return false; };
				this.ctx = AppMobi["canvas"]["getContext"]("2d");
				try {
					this.ctx["samplingMode"] = this.linearSampling ? "smooth" : "sharp";
					this.ctx["globalScale"] = 1;
					this.ctx["HTML5CompatibilityMode"] = true;
					this.ctx["imageSmoothingEnabled"] = this.linearSampling;
				} catch(e){}
				if (this.width !== 0 && this.height !== 0)
				{
					this.ctx.width = this.width;
					this.ctx.height = this.height;
				}
			}
			if (!this.ctx)
			{
;
				if (this.isCocoonJs)
				{
					attribs = {
						"antialias": !!this.linearSampling,
						"alpha": alpha_canvas
					};
					this.ctx = canvas.getContext("2d", attribs);
				}
				else
				{
					attribs = {
						"alpha": alpha_canvas
					};
					this.ctx = canvas.getContext("2d", attribs);
				}
				this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["imageSmoothingEnabled"] = this.linearSampling;
			}
			this.overlay_canvas = null;
			this.overlay_ctx = null;
		}
		this.tickFunc = function () { self.tick(false); };
		if (window != window.top && !this.isDomFree && !this.isWinJS && !this.isWindowsPhone8)
		{
			document.addEventListener("mousedown", function () {
				window.focus();
			}, true);
			document.addEventListener("touchstart", function () {
				window.focus();
			}, true);
		}
		if (typeof cr_is_preview !== "undefined")
		{
			if (this.isCocoonJs)
				console.log("[Construct 2] In preview-over-wifi via CocoonJS mode");
			if (window.location.search.indexOf("continuous") > -1)
			{
				cr.logexport("Reloading for continuous preview");
				this.loadFromSlot = "__c2_continuouspreview";
				this.suspendDrawing = true;
			}
			if (this.pauseOnBlur && !this.isMobile)
			{
				jQuery(window).focus(function ()
				{
					self["setSuspended"](false);
				});
				jQuery(window).blur(function ()
				{
					self["setSuspended"](true);
				});
			}
		}
		var unfocusFormControlFunc = function (e) {
			if (cr.isCanvasInputEvent(e) && document["activeElement"] && document["activeElement"].blur)
			{
				document["activeElement"].blur();
			}
		}
		if (window.navigator["pointerEnabled"])
		{
			document.addEventListener("pointerdown", unfocusFormControlFunc);
		}
		else if (window.navigator["msPointerEnabled"])
		{
			document.addEventListener("MSPointerDown", unfocusFormControlFunc);
		}
		else
		{
			document.addEventListener("touchstart", unfocusFormControlFunc);
		}
		document.addEventListener("mousedown", unfocusFormControlFunc);
		if (this.fullscreen_mode === 0 && this.isRetina && this.devicePixelRatio > 1)
		{
			this["setSize"](this.original_width, this.original_height, true);
		}
		this.tryLockOrientation();
		this.getready();	// determine things to preload
		this.go();			// run loading screen
		this.extra = {};
		cr.seal(this);
	};
	var webkitRepaintFlag = false;
	Runtime.prototype["setSize"] = function (w, h, force)
	{
		var offx = 0, offy = 0;
		var neww = 0, newh = 0, intscale = 0;
		var tryHideAddressBar = (this.isiPhoneiOS6 && this.isSafari && !navigator["standalone"] && !this.isDomFree && !this.isPhoneGap);
		if (tryHideAddressBar)
			h += 60;		// height of Safari iPhone iOS 6 address bar
		if (this.lastWindowWidth === w && this.lastWindowHeight === h && !force)
			return;
		this.lastWindowWidth = w;
		this.lastWindowHeight = h;
		var mode = this.fullscreen_mode;
		var orig_aspect, cur_aspect;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.isNodeFullscreen) && !this.isPhoneGap;
		if (!isfullscreen && this.fullscreen_mode === 0 && !force)
			return;			// ignore size events when not fullscreen and not using a fullscreen-in-browser mode
		if (isfullscreen && this.fullscreen_scaling > 0)
			mode = this.fullscreen_scaling;
		var dpr = this.devicePixelRatio;
		if (mode >= 4)
		{
			orig_aspect = this.original_width / this.original_height;
			cur_aspect = w / h;
			if (cur_aspect > orig_aspect)
			{
				neww = h * orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = (neww * dpr) / this.original_width;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale / dpr;
					newh = this.original_height * intscale / dpr;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offx = (w - neww) / 2;
					w = neww;
				}
			}
			else
			{
				newh = w / orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = (newh * dpr) / this.original_height;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale / dpr;
					newh = this.original_height * intscale / dpr;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offy = (h - newh) / 2;
					h = newh;
				}
			}
			if (isfullscreen && !this.isNodeWebkit)
			{
				offx = 0;
				offy = 0;
			}
		}
		else if (this.isNodeWebkit && this.isNodeFullscreen && this.fullscreen_mode_set === 0)
		{
			offx = Math.floor((w - this.original_width) / 2);
			offy = Math.floor((h - this.original_height) / 2);
			w = this.original_width;
			h = this.original_height;
		}
		if (mode < 2)
			this.aspect_scale = dpr;
		if (this.isRetina && this.isiPad && dpr > 1)	// don't apply to iPad 1-2
		{
			if (w >= 1024)
				w = 1023;		// 2046 retina pixels
			if (h >= 1024)
				h = 1023;
		}
		this.cssWidth = Math.round(w);
		this.cssHeight = Math.round(h);
		this.width = Math.round(w * dpr);
		this.height = Math.round(h * dpr);
		this.redraw = true;
		if (this.wantFullscreenScalingQuality)
		{
			this.draw_width = this.width;
			this.draw_height = this.height;
			this.fullscreenScalingQuality = true;
		}
		else
		{
			if ((this.width < this.original_width && this.height < this.original_height) || mode === 1)
			{
				this.draw_width = this.width;
				this.draw_height = this.height;
				this.fullscreenScalingQuality = true;
			}
			else
			{
				this.draw_width = this.original_width;
				this.draw_height = this.original_height;
				this.fullscreenScalingQuality = false;
				/*var orig_aspect = this.original_width / this.original_height;
				var cur_aspect = this.width / this.height;
				if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
					this.aspect_scale = this.height / this.original_height;
				else
					this.aspect_scale = this.width / this.original_width;*/
				if (mode === 2)		// scale inner
				{
					orig_aspect = this.original_width / this.original_height;
					cur_aspect = this.lastWindowWidth / this.lastWindowHeight;
					if (cur_aspect < orig_aspect)
						this.draw_width = this.draw_height * cur_aspect;
					else if (cur_aspect > orig_aspect)
						this.draw_height = this.draw_width / cur_aspect;
				}
				else if (mode === 3)
				{
					orig_aspect = this.original_width / this.original_height;
					cur_aspect = this.lastWindowWidth / this.lastWindowHeight;
					if (cur_aspect > orig_aspect)
						this.draw_width = this.draw_height * cur_aspect;
					else if (cur_aspect < orig_aspect)
						this.draw_height = this.draw_width / cur_aspect;
				}
			}
		}
		if (this.canvasdiv && !this.isDomFree)
		{
			jQuery(this.canvasdiv).css({"width": Math.round(w) + "px",
										"height": Math.round(h) + "px",
										"margin-left": Math.floor(offx) + "px",
										"margin-top": Math.floor(offy) + "px"});
			if (typeof cr_is_preview !== "undefined")
			{
				jQuery("#borderwrap").css({"width": Math.round(w) + "px",
											"height": Math.round(h) + "px"});
			}
		}
		if (this.canvas)
		{
			this.canvas.width = Math.round(w * dpr);
			this.canvas.height = Math.round(h * dpr);
			if (this.isEjecta)
			{
				this.canvas.style.left = Math.floor(offx) + "px";
				this.canvas.style.top = Math.floor(offy) + "px";
				this.canvas.style.width = Math.round(w) + "px";
				this.canvas.style.height = Math.round(h) + "px";
			}
			else if (this.isRetina && !this.isDomFree)
			{
				jQuery(this.canvas).css({"width": Math.round(w) + "px",
										"height": Math.round(h) + "px"});
			}
		}
		if (this.overlay_canvas)
		{
			this.overlay_canvas.width = Math.round(w);
			this.overlay_canvas.height = Math.round(h);
			jQuery(this.overlay_canvas).css({"width": Math.round(w) + "px",
											"height": Math.round(h) + "px"});
		}
		if (this.glwrap)
		{
			this.glwrap.setSize(Math.round(w * dpr), Math.round(h * dpr));
		}
		if (this.isDirectCanvas && this.ctx)
		{
			this.ctx.width = Math.round(w);
			this.ctx.height = Math.round(h);
		}
		if (this.ctx)
		{
			this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["imageSmoothingEnabled"] = this.linearSampling;
		}
		this.tryLockOrientation();
		if (!this.isDomFree && (tryHideAddressBar || this.isiPhone))
		{
			window.setTimeout(function () {
				window.scrollTo(0, 1);
			}, 100);
		}
	};
	Runtime.prototype.tryLockOrientation = function ()
	{
		if (!this.autoLockOrientation || this.orientations === 0)
			return;
		var orientation = "portrait";
		if (this.orientations === 2)
			orientation = "landscape";
		if (screen["lockOrientation"])
			screen["lockOrientation"](orientation);
		else if (screen["webkitLockOrientation"])
			screen["webkitLockOrientation"](orientation);
		else if (screen["mozLockOrientation"])
			screen["mozLockOrientation"](orientation);
		else if (screen["msLockOrientation"])
			screen["msLockOrientation"](orientation);
	};
	Runtime.prototype.onContextLost = function ()
	{
		this.glwrap.contextLost();
		this.is_WebGL_context_lost = true;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onLostWebGLContext)
				t.onLostWebGLContext();
		}
	};
	Runtime.prototype.onContextRestored = function ()
	{
		this.is_WebGL_context_lost = false;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onRestoreWebGLContext)
				t.onRestoreWebGLContext();
		}
	};
	Runtime.prototype.positionOverlayCanvas = function()
	{
		if (this.isDomFree)
			return;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen) && !this.isPhoneGap;
		var overlay_position = isfullscreen ? jQuery(this.canvas).offset() : jQuery(this.canvas).position();
		overlay_position.position = "absolute";
		jQuery(this.overlay_canvas).css(overlay_position);
	};
	var caf = window["cancelAnimationFrame"] ||
	  window["mozCancelAnimationFrame"]    ||
	  window["webkitCancelAnimationFrame"] ||
	  window["msCancelAnimationFrame"]     ||
	  window["oCancelAnimationFrame"];
	Runtime.prototype["setSuspended"] = function (s)
	{
		var i, len;
		if (s && !this.isSuspended)
		{
			cr.logexport("[Construct 2] Suspending");
			this.isSuspended = true;			// next tick will be last
			if (this.raf_id !== -1 && caf)		// note: CocoonJS does not implement cancelAnimationFrame
				caf(this.raf_id);
			if (this.timeout_id !== -1)
				clearTimeout(this.timeout_id);
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](true);
		}
		else if (!s && this.isSuspended)
		{
			cr.logexport("[Construct 2] Resuming");
			this.isSuspended = false;
			this.last_tick_time = cr.performance_now();	// ensure first tick is a zero-dt one
			this.last_fps_time = cr.performance_now();	// reset FPS counter
			this.framecount = 0;
			this.logictime = 0;
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](false);
			this.tick(false);						// kick off runtime again
		}
	};
	Runtime.prototype.addSuspendCallback = function (f)
	{
		this.suspend_events.push(f);
	};
	Runtime.prototype.load = function ()
	{
;
		var pm = cr.getProjectModel();
		this.name = pm[0];
		this.first_layout = pm[1];
		this.fullscreen_mode = pm[12];	// 0 = off, 1 = crop, 2 = scale inner, 3 = scale outer, 4 = letterbox scale, 5 = integer letterbox scale
		this.fullscreen_mode_set = pm[12];
		this.original_width = pm[10];
		this.original_height = pm[11];
		this.parallax_x_origin = this.original_width / 2;
		this.parallax_y_origin = this.original_height / 2;
		if (this.isDomFree && !this.isEjecta && (pm[12] >= 4 || pm[12] === 0))
		{
			cr.logexport("[Construct 2] Letterbox scale fullscreen modes are not supported on this platform - falling back to 'Scale outer'");
			this.fullscreen_mode = 3;
			this.fullscreen_mode_set = 3;
		}
		this.uses_loader_layout = pm[18];
		this.loaderstyle = pm[19];
		if (this.loaderstyle === 0)
		{
			this.loaderlogo = new Image();
			this.loaderlogo.src = "loading-logo.png";
		}
		this.next_uid = pm[21];
		this.system = new cr.system_object(this);
		var i, len, j, lenj, k, lenk, idstr, m, b, t, f;
		var plugin, plugin_ctor;
		for (i = 0, len = pm[2].length; i < len; i++)
		{
			m = pm[2][i];
;
			cr.add_common_aces(m);
			plugin = new m[0](this);
			plugin.singleglobal = m[1];
			plugin.is_world = m[2];
			plugin.must_predraw = m[9];
			if (plugin.onCreate)
				plugin.onCreate();  // opportunity to override default ACEs
			cr.seal(plugin);
			this.plugins.push(plugin);
		}
		pm = cr.getProjectModel();
		for (i = 0, len = pm[3].length; i < len; i++)
		{
			m = pm[3][i];
			plugin_ctor = m[1];
;
			plugin = null;
			for (j = 0, lenj = this.plugins.length; j < lenj; j++)
			{
				if (this.plugins[j] instanceof plugin_ctor)
				{
					plugin = this.plugins[j];
					break;
				}
			}
;
;
			var type_inst = new plugin.Type(plugin);
;
			type_inst.name = m[0];
			type_inst.is_family = m[2];
			type_inst.instvar_sids = m[3].slice(0);
			type_inst.vars_count = m[3].length;
			type_inst.behs_count = m[4];
			type_inst.fx_count = m[5];
			type_inst.sid = m[11];
			if (type_inst.is_family)
			{
				type_inst.members = [];				// types in this family
				type_inst.family_index = this.family_count++;
				type_inst.families = null;
			}
			else
			{
				type_inst.members = null;
				type_inst.family_index = -1;
				type_inst.families = [];			// families this type belongs to
			}
			type_inst.family_var_map = null;
			type_inst.family_beh_map = null;
			type_inst.family_fx_map = null;
			type_inst.is_contained = false;
			type_inst.container = null;
			if (m[6])
			{
				type_inst.texture_file = m[6][0];
				type_inst.texture_filesize = m[6][1];
				type_inst.texture_pixelformat = m[6][2];
			}
			else
			{
				type_inst.texture_file = null;
				type_inst.texture_filesize = 0;
				type_inst.texture_pixelformat = 0;		// rgba8
			}
			if (m[7])
			{
				type_inst.animations = m[7];
			}
			else
			{
				type_inst.animations = null;
			}
			type_inst.index = i;                                // save index in to types array in type
			type_inst.instances = [];                           // all instances of this type
			type_inst.deadCache = [];							// destroyed instances to recycle next create
			type_inst.solstack = [new cr.selection(type_inst)]; // initialise SOL stack with one empty SOL
			type_inst.cur_sol = 0;
			type_inst.default_instance = null;
			type_inst.default_layerindex = 0;
			type_inst.stale_iids = true;
			type_inst.updateIIDs = cr.type_updateIIDs;
			type_inst.getFirstPicked = cr.type_getFirstPicked;
			type_inst.getPairedInstance = cr.type_getPairedInstance;
			type_inst.getCurrentSol = cr.type_getCurrentSol;
			type_inst.pushCleanSol = cr.type_pushCleanSol;
			type_inst.pushCopySol = cr.type_pushCopySol;
			type_inst.popSol = cr.type_popSol;
			type_inst.getBehaviorByName = cr.type_getBehaviorByName;
			type_inst.getBehaviorIndexByName = cr.type_getBehaviorIndexByName;
			type_inst.getEffectIndexByName = cr.type_getEffectIndexByName;
			type_inst.applySolToContainer = cr.type_applySolToContainer;
			type_inst.getInstanceByIID = cr.type_getInstanceByIID;
			type_inst.collision_grid = new cr.SparseGrid(this.original_width, this.original_height);
			type_inst.any_cell_changed = true;
			type_inst.any_instance_parallaxed = false;
			type_inst.extra = {};
			type_inst.toString = cr.type_toString;
			type_inst.behaviors = [];
			for (j = 0, lenj = m[8].length; j < lenj; j++)
			{
				b = m[8][j];
				var behavior_ctor = b[1];
				var behavior_plugin = null;
				for (k = 0, lenk = this.behaviors.length; k < lenk; k++)
				{
					if (this.behaviors[k] instanceof behavior_ctor)
					{
						behavior_plugin = this.behaviors[k];
						break;
					}
				}
				if (!behavior_plugin)
				{
					behavior_plugin = new behavior_ctor(this);
					behavior_plugin.my_types = [];						// types using this behavior
					behavior_plugin.my_instances = new cr.ObjectSet(); 	// instances of this behavior
					if (behavior_plugin.onCreate)
						behavior_plugin.onCreate();
					cr.seal(behavior_plugin);
					this.behaviors.push(behavior_plugin);
					if (cr.behaviors.solid && behavior_plugin instanceof cr.behaviors.solid)
						this.solidBehavior = behavior_plugin;
					if (cr.behaviors.jumpthru && behavior_plugin instanceof cr.behaviors.jumpthru)
						this.jumpthruBehavior = behavior_plugin;
					if (cr.behaviors.shadowcaster && behavior_plugin instanceof cr.behaviors.shadowcaster)
						this.shadowcasterBehavior = behavior_plugin;
				}
				if (behavior_plugin.my_types.indexOf(type_inst) === -1)
					behavior_plugin.my_types.push(type_inst);
				var behavior_type = new behavior_plugin.Type(behavior_plugin, type_inst);
				behavior_type.name = b[0];
				behavior_type.sid = b[2];
				behavior_type.onCreate();
				cr.seal(behavior_type);
				type_inst.behaviors.push(behavior_type);
			}
			type_inst.global = m[9];
			type_inst.isOnLoaderLayout = m[10];
			type_inst.effect_types = [];
			for (j = 0, lenj = m[12].length; j < lenj; j++)
			{
				type_inst.effect_types.push({
					id: m[12][j][0],
					name: m[12][j][1],
					shaderindex: -1,
					active: true,
					index: j
				});
			}
			type_inst.tile_poly_data = m[13];
			if (!this.uses_loader_layout || type_inst.is_family || type_inst.isOnLoaderLayout || !plugin.is_world)
			{
				type_inst.onCreate();
				cr.seal(type_inst);
			}
			if (type_inst.name)
				this.types[type_inst.name] = type_inst;
			this.types_by_index.push(type_inst);
			if (plugin.singleglobal)
			{
				var instance = new plugin.Instance(type_inst);
				instance.uid = this.next_uid++;
				instance.puid = this.next_puid++;
				instance.iid = 0;
				instance.get_iid = cr.inst_get_iid;
				instance.toString = cr.inst_toString;
				instance.properties = m[14];
				instance.onCreate();
				cr.seal(instance);
				type_inst.instances.push(instance);
				this.objectsByUid[instance.uid.toString()] = instance;
			}
		}
		for (i = 0, len = pm[4].length; i < len; i++)
		{
			var familydata = pm[4][i];
			var familytype = this.types_by_index[familydata[0]];
			var familymember;
			for (j = 1, lenj = familydata.length; j < lenj; j++)
			{
				familymember = this.types_by_index[familydata[j]];
				familymember.families.push(familytype);
				familytype.members.push(familymember);
			}
		}
		for (i = 0, len = pm[27].length; i < len; i++)
		{
			var containerdata = pm[27][i];
			var containertypes = [];
			for (j = 0, lenj = containerdata.length; j < lenj; j++)
				containertypes.push(this.types_by_index[containerdata[j]]);
			for (j = 0, lenj = containertypes.length; j < lenj; j++)
			{
				containertypes[j].is_contained = true;
				containertypes[j].container = containertypes;
			}
		}
		if (this.family_count > 0)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (t.is_family || !t.families.length)
					continue;
				t.family_var_map = new Array(this.family_count);
				t.family_beh_map = new Array(this.family_count);
				t.family_fx_map = new Array(this.family_count);
				var all_fx = [];
				var varsum = 0;
				var behsum = 0;
				var fxsum = 0;
				for (j = 0, lenj = t.families.length; j < lenj; j++)
				{
					f = t.families[j];
					t.family_var_map[f.family_index] = varsum;
					varsum += f.vars_count;
					t.family_beh_map[f.family_index] = behsum;
					behsum += f.behs_count;
					t.family_fx_map[f.family_index] = fxsum;
					fxsum += f.fx_count;
					for (k = 0, lenk = f.effect_types.length; k < lenk; k++)
						all_fx.push(cr.shallowCopy({}, f.effect_types[k]));
				}
				t.effect_types = all_fx.concat(t.effect_types);
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
					t.effect_types[j].index = j;
			}
		}
		for (i = 0, len = pm[5].length; i < len; i++)
		{
			m = pm[5][i];
			var layout = new cr.layout(this, m);
			cr.seal(layout);
			this.layouts[layout.name] = layout;
			this.layouts_by_index.push(layout);
		}
		for (i = 0, len = pm[6].length; i < len; i++)
		{
			m = pm[6][i];
			var sheet = new cr.eventsheet(this, m);
			cr.seal(sheet);
			this.eventsheets[sheet.name] = sheet;
			this.eventsheets_by_index.push(sheet);
		}
		for (i = 0, len = this.eventsheets_by_index.length; i < len; i++)
			this.eventsheets_by_index[i].postInit();
		for (i = 0, len = this.eventsheets_by_index.length; i < len; i++)
			this.eventsheets_by_index[i].updateDeepIncludes();
		for (i = 0, len = this.triggers_to_postinit.length; i < len; i++)
			this.triggers_to_postinit[i].postInit();
		this.triggers_to_postinit.length = 0;
		this.audio_to_preload = pm[7];
		this.files_subfolder = pm[8];
		this.pixel_rounding = pm[9];
		this.aspect_scale = 1.0;
		this.enableWebGL = pm[13];
		this.linearSampling = pm[14];
		this.alphaBackground = pm[15];
		this.versionstr = pm[16];
		this.useHighDpi = pm[17];
		this.orientations = pm[20];		// 0 = any, 1 = portrait, 2 = landscape
		this.autoLockOrientation = (this.orientations > 0);
		this.pauseOnBlur = pm[22];
		this.wantFullscreenScalingQuality = pm[23];		// false = low quality, true = high quality
		this.fullscreenScalingQuality = this.wantFullscreenScalingQuality;
		this.downscalingQuality = pm[24];	// 0 = low (mips off), 1 = medium (mips on, dense spritesheet), 2 = high (mips on, sparse spritesheet)
		this.preloadSounds = pm[25];		// 0 = no, 1 = yes
		this.projectName = pm[26];
		this.start_time = Date.now();
	};
	var anyImageHadError = false;
	Runtime.prototype.waitForImageLoad = function (img_)
	{
		img_.onerror = function (e)
		{
			img_.c2error = true;
			anyImageHadError = true;
			if (console && console.error)
				console.error("Error loading image '" + img_.src + "': ", e);
		};
		this.wait_for_textures.push(img_);
	};
	Runtime.prototype.findWaitingTexture = function (src_)
	{
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			if (this.wait_for_textures[i].cr_src === src_)
				return this.wait_for_textures[i];
		}
		return null;
	};
	var audio_preload_totalsize = 0;
	var audio_preload_started = false;
	Runtime.prototype.getready = function ()
	{
		if (!this.audioInstance)
			return;
		audio_preload_totalsize = this.audioInstance.setPreloadList(this.audio_to_preload);
	};
	Runtime.prototype.areAllTexturesAndSoundsLoaded = function ()
	{
		var totalsize = audio_preload_totalsize;
		var completedsize = 0;
		var audiocompletedsize = 0;
		var ret = true;
		var i, len, img;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			img = this.wait_for_textures[i];
			var filesize = img.cr_filesize;
			if (!filesize || filesize <= 0)
				filesize = 50000;
			totalsize += filesize;
			if ((img.complete || img["loaded"]) && !img.c2error)
				completedsize += filesize;
			else
				ret = false;    // not all textures loaded
		}
		if (ret && this.preloadSounds && this.audioInstance)
		{
			if (!audio_preload_started)
			{
				this.audioInstance.startPreloads();
				audio_preload_started = true;
			}
			audiocompletedsize = this.audioInstance.getPreloadedSize();
			completedsize += audiocompletedsize;
			if (audiocompletedsize < audio_preload_totalsize)
				ret = false;		// not done yet
		}
		if (totalsize == 0)
			this.progress = 0;
		else
			this.progress = (completedsize / totalsize);
		return ret;
	};
	Runtime.prototype.go = function ()
	{
		if (!this.ctx && !this.glwrap)
			return;
		var ctx = this.ctx || this.overlay_ctx;
		if (this.overlay_canvas)
			this.positionOverlayCanvas();
		this.progress = 0;
		this.last_progress = -1;
		if (this.areAllTexturesAndSoundsLoaded())
			this.go_loading_finished();
		else
		{
			var ms_elapsed = Date.now() - this.start_time;
			if (ctx)
			{
				var overlay_width = this.width;
				var overlay_height = this.height;
				var multiplier = this.devicePixelRatio;
				if (this.overlay_canvas)
				{
					overlay_width = this.cssWidth;
					overlay_height = this.cssHeight;
					multiplier = 1;
				}
				if (this.loaderstyle !== 3 && (this.isCocoonJs || (ms_elapsed >= 500 && this.last_progress != this.progress)))
				{
					ctx.clearRect(0, 0, overlay_width, overlay_height);
					var mx = overlay_width / 2;
					var my = overlay_height / 2;
					var haslogo = (this.loaderstyle === 0 && this.loaderlogo.complete);
					var hlw = 40 * multiplier;
					var hlh = 0;
					var logowidth = 80 * multiplier;
					var logoheight;
					if (haslogo)
					{
						logowidth = this.loaderlogo.width * multiplier;
						logoheight = this.loaderlogo.height * multiplier;
						hlw = logowidth / 2;
						hlh = logoheight / 2;
						ctx.drawImage(this.loaderlogo, cr.floor(mx - hlw), cr.floor(my - hlh), logowidth, logoheight);
					}
					if (this.loaderstyle <= 1)
					{
						my += hlh + (haslogo ? 12 * multiplier : 0);
						mx -= hlw;
						mx = cr.floor(mx) + 0.5;
						my = cr.floor(my) + 0.5;
						ctx.fillStyle = anyImageHadError ? "red" : "DodgerBlue";
						ctx.fillRect(mx, my, Math.floor(logowidth * this.progress), 6 * multiplier);
						ctx.strokeStyle = "black";
						ctx.strokeRect(mx, my, logowidth, 6 * multiplier);
						ctx.strokeStyle = "white";
						ctx.strokeRect(mx - 1 * multiplier, my - 1 * multiplier, logowidth + 2 * multiplier, 8 * multiplier);
					}
					else if (this.loaderstyle === 2)
					{
						ctx.font = (this.isEjecta ? "12pt ArialMT" : "12pt Arial");
						ctx.fillStyle = anyImageHadError ? "#f00" : "#999";
						ctx.textBaseLine = "middle";
						var percent_text = Math.round(this.progress * 100) + "%";
						var text_dim = ctx.measureText ? ctx.measureText(percent_text) : null;
						var text_width = text_dim ? text_dim.width : 0;
						ctx.fillText(percent_text, mx - (text_width / 2), my);
					}
				}
				this.last_progress = this.progress;
			}
			setTimeout((function (self) { return function () { self.go(); }; })(this), (this.isCocoonJs ? 10 : 100));
		}
	};
	Runtime.prototype.go_loading_finished = function ()
	{
		if (this.overlay_canvas)
		{
			this.canvas.parentNode.removeChild(this.overlay_canvas);
			this.overlay_ctx = null;
			this.overlay_canvas = null;
		}
		this.start_time = Date.now();
		this.last_fps_time = cr.performance_now();       // for counting framerate
		var i, len, t;
		if (this.uses_loader_layout)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (!t.is_family && !t.isOnLoaderLayout && t.plugin.is_world)
				{
					t.onCreate();
					cr.seal(t);
				}
			}
		}
		else
			this.isloading = false;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			this.layouts_by_index[i].createGlobalNonWorlds();
		}
		if (this.fullscreen_mode >= 2)
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
				this.aspect_scale = this.height / this.original_height;
			else
				this.aspect_scale = this.width / this.original_width;
		}
		if (this.first_layout)
			this.layouts[this.first_layout].startRunning();
		else
			this.layouts_by_index[0].startRunning();
;
		if (!this.uses_loader_layout)
		{
			this.loadingprogress = 1;
			this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
		}
		if (navigator["splashscreen"] && navigator["splashscreen"]["hide"])
			navigator["splashscreen"]["hide"]();
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onAppBegin)
				t.onAppBegin();
		}
		this.tick(false);
		if (this.isDirectCanvas)
			AppMobi["webview"]["execute"]("onGameReady();");
	};
	var raf = window["requestAnimationFrame"] ||
	  window["mozRequestAnimationFrame"]    ||
	  window["webkitRequestAnimationFrame"] ||
	  window["msRequestAnimationFrame"]     ||
	  window["oRequestAnimationFrame"];
	Runtime.prototype.tick = function (background_wake)
	{
		if (!this.running_layout)
			return;
		var logic_start = cr.performance_now();
		if (this.halfFramerateMode && this.ranLastRaf)
		{
			if (logic_start - this.lastRafTime < 29)
			{
				this.ranLastRaf = false;
				this.lastRafTime = logic_start;
				if (raf)
					this.raf_id = raf(this.tickFunc, this.canvas);
				else	// no idea if this works without raf/hi res timers but let's hope for the best
					this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
				return;		// skipped this frame
			}
		}
		this.ranLastRaf = true;
		this.lastRafTime = logic_start;
		var fsmode = this.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"]) && !this.isPhoneGap;
		if ((isfullscreen || this.isNodeFullscreen) && this.fullscreen_scaling > 0)
			fsmode = this.fullscreen_scaling;
		if (fsmode > 0 && (!this.isiOS || window.self !== window.top))
		{
			var curwidth = window.innerWidth;
			var curheight = window.innerHeight;
			if (this.lastWindowWidth !== curwidth || this.lastWindowHeight !== curheight)
			{
				this["setSize"](window_innerWidth(), window_innerHeight());
			}
		}
		if (!this.isDomFree)
		{
			if (isfullscreen)
			{
				if (!this.firstInFullscreen)
				{
					this.fullscreenOldMarginCss = jQuery(this.canvas).css("margin") || "0";
					this.firstInFullscreen = true;
				}
				if (!this.isChrome && !this.isNodeWebkit)
				{
					jQuery(this.canvas).css({
						"margin-left": "" + Math.floor((screen.width - (this.width / this.devicePixelRatio)) / 2) + "px",
						"margin-top": "" + Math.floor((screen.height - (this.height / this.devicePixelRatio)) / 2) + "px"
					});
				}
			}
			else
			{
				if (this.firstInFullscreen)
				{
					if (!this.isChrome && !this.isNodeWebkit)
					{
						jQuery(this.canvas).css("margin", this.fullscreenOldMarginCss);
					}
					this.fullscreenOldMarginCss = "";
					this.firstInFullscreen = false;
					if (this.fullscreen_mode === 0)
					{
						this["setSize"](Math.round(this.oldWidth / this.devicePixelRatio), Math.round(this.oldHeight / this.devicePixelRatio), true);
					}
				}
				else
				{
					this.oldWidth = this.width;
					this.oldHeight = this.height;
				}
			}
		}
		if (this.isloading)
		{
			var done = this.areAllTexturesAndSoundsLoaded();		// updates this.progress
			this.loadingprogress = this.progress;
			if (done)
			{
				this.isloading = false;
				this.progress = 1;
				this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
			}
		}
		this.logic();
		if ((this.redraw || this.isCocoonJs) && !this.is_WebGL_context_lost && !this.suspendDrawing && !background_wake)
		{
			this.redraw = false;
			if (this.glwrap)
				this.drawGL();
			else
				this.draw();
			if (this.snapshotCanvas)
			{
				if (this.canvas && this.canvas.toDataURL)
				{
					this.snapshotData = this.canvas.toDataURL(this.snapshotCanvas[0], this.snapshotCanvas[1]);
					this.trigger(cr.system_object.prototype.cnds.OnCanvasSnapshot, null);
				}
				this.snapshotCanvas = null;
			}
		}
		if (!this.hit_breakpoint)
		{
			this.tickcount++;
			this.execcount++;
			this.framecount++;
		}
		this.logictime += cr.performance_now() - logic_start;
		if (this.isSuspended || background_wake)
			return;
		if (raf)
			this.raf_id = raf(this.tickFunc, this.canvas);
		else
		{
			this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
		}
	};
	Runtime.prototype.logic = function ()
	{
		var i, leni, j, lenj, k, lenk, type, inst, binst;
		var cur_time = cr.performance_now();
		if (cur_time - this.last_fps_time >= 1000)  // every 1 second
		{
			this.last_fps_time += 1000;
			this.fps = this.framecount;
			this.framecount = 0;
			this.cpuutilisation = this.logictime;
			this.logictime = 0;
		}
		if (this.measuring_dt)
		{
			if (this.last_tick_time !== 0)
			{
				var ms_diff = cur_time - this.last_tick_time;
				if (ms_diff === 0 && !this.isDebug)
				{
					this.zeroDtCount++;
					if (this.zeroDtCout >= 10)
						this.measuring_dt = false;
					this.dt1 = 1.0 / 60.0;            // 60fps assumed (0.01666...)
				}
				else
				{
					this.dt1 = ms_diff / 1000.0; // dt measured in seconds
					if (this.dt1 > 0.5)
						this.dt1 = 0;
					else if (this.dt1 > 0.1)
						this.dt1 = 0.1;
				}
			}
			this.last_tick_time = cur_time;
		}
        this.dt = this.dt1 * this.timescale;
        this.kahanTime.add(this.dt);
		this.wallTime.add(this.dt1);
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen) && !this.isPhoneGap;
		if (this.fullscreen_mode >= 2 /* scale */ || (isfullscreen && this.fullscreen_scaling > 0))
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			var mode = this.fullscreen_mode;
			if (isfullscreen && this.fullscreen_scaling > 0)
				mode = this.fullscreen_scaling;
			if ((mode !== 2 && cur_aspect > orig_aspect) || (mode === 2 && cur_aspect < orig_aspect))
			{
				this.aspect_scale = this.height / this.original_height;
			}
			else
			{
				this.aspect_scale = this.width / this.original_width;
			}
			if (this.running_layout)
			{
				this.running_layout.scrollToX(this.running_layout.scrollX);
				this.running_layout.scrollToY(this.running_layout.scrollY);
			}
		}
		else
			this.aspect_scale = (this.isRetina ? this.devicePixelRatio : 1);
		this.ClearDeathRow();
		this.isInOnDestroy++;
		this.system.runWaits();		// prevent instance list changing
		this.isInOnDestroy--;
		this.ClearDeathRow();		// allow instance list changing
		this.isInOnDestroy++;
        var tickarr = this.objects_to_pretick.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].pretick();
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					inst.behavior_insts[k].tick();
				}
			}
		}
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.posttick)
						binst.posttick();
				}
			}
		}
        tickarr = this.objects_to_tick.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
		this.handleSaveLoad();		// save/load now if queued
		i = 0;
		while (this.changelayout && i++ < 10)
		{
			this.doChangeLayout(this.changelayout);
		}
        for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
            this.eventsheets_by_index[i].hasRun = false;
		if (this.running_layout.event_sheet)
			this.running_layout.event_sheet.run();
		this.registered_collisions.length = 0;
		this.layout_first_tick = false;
		this.isInOnDestroy++;		// prevent instance lists from being changed
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				var inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.tick2)
						binst.tick2();
				}
			}
		}
        tickarr = this.objects_to_tick2.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick2();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
	};
	Runtime.prototype.doChangeLayout = function (changeToLayout)
	{
;
		var prev_layout = this.running_layout;
		this.running_layout.stopRunning();
		var i, len, j, lenj, k, lenk, type, inst, binst;
		if (this.glwrap)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				type = this.types_by_index[i];
				if (type.is_family)
					continue;
				if (type.unloadTextures && (!type.global || type.instances.length === 0) && changeToLayout.initial_types.indexOf(type) === -1)
				{
					type.unloadTextures();
				}
			}
		}
		if (prev_layout == changeToLayout)
			this.system.waits.length = 0;
		changeToLayout.startRunning();
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (!type.global && !type.plugin.singleglobal)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (inst.onLayoutChange)
					inst.onLayoutChange();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.onLayoutChange)
							binst.onLayoutChange();
					}
				}
			}
		}
		this.redraw = true;
		this.layout_first_tick = true;
		this.ClearDeathRow();
	};
	Runtime.prototype.pretickMe = function (inst)
    {
        this.objects_to_pretick.add(inst);
    };
	Runtime.prototype.unpretickMe = function (inst)
	{
		this.objects_to_pretick.remove(inst);
	};
    Runtime.prototype.tickMe = function (inst)
    {
        this.objects_to_tick.add(inst);
    };
	Runtime.prototype.untickMe = function (inst)
	{
		this.objects_to_tick.remove(inst);
	};
	Runtime.prototype.tick2Me = function (inst)
    {
        this.objects_to_tick2.add(inst);
    };
	Runtime.prototype.untick2Me = function (inst)
	{
		this.objects_to_tick2.remove(inst);
	};
    Runtime.prototype.getDt = function (inst)
    {
        if (!inst || inst.my_timescale === -1.0)
            return this.dt;
        return this.dt1 * inst.my_timescale;
    };
	Runtime.prototype.draw = function ()
	{
		this.running_layout.draw(this.ctx);
		if (this.isDirectCanvas)
			this.ctx["present"]();
	};
	Runtime.prototype.drawGL = function ()
	{
		this.running_layout.drawGL(this.glwrap);
		this.glwrap.present();
	};
	Runtime.prototype.addDestroyCallback = function (f)
	{
		if (f)
			this.destroycallbacks.push(f);
	};
	Runtime.prototype.removeDestroyCallback = function (f)
	{
		cr.arrayFindRemove(this.destroycallbacks, f);
	};
	Runtime.prototype.getObjectByUID = function (uid_)
	{
;
		var uidstr = uid_.toString();
		if (this.objectsByUid.hasOwnProperty(uidstr))
			return this.objectsByUid[uidstr];
		else
			return null;
	};
	Runtime.prototype.DestroyInstance = function (inst)
	{
		var i, len;
		if (!this.deathRow.contains(inst))
		{
			this.deathRow.add(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					this.DestroyInstance(inst.siblings[i]);
				}
			}
			if (this.isInClearDeathRow)
				this.deathRow.values_cache.push(inst);
			this.isInOnDestroy++;		// support recursion
			this.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnDestroyed, inst);
			this.isInOnDestroy--;
		}
	};
	Runtime.prototype.ClearDeathRow = function ()
	{
		var inst, index, type, instances, binst;
		var i, j, k, leni, lenj, lenk;
		var w, f;
		this.isInClearDeathRow = true;
		for (i = 0, leni = this.createRow.length; i < leni; i++)
		{
			inst = this.createRow[i];
			type = inst.type;
			type.instances.push(inst);
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				type.families[j].instances.push(inst);
				type.families[j].stale_iids = true;
			}
		}
		this.createRow.length = 0;
		var arr = this.deathRow.valuesRef();	// get array of items from set
		for (i = 0; i < arr.length; i++)		// check array length every time in case it changes
		{
			inst = arr[i];
			type = inst.type;
			instances = type.instances;
			for (j = 0, lenj = this.destroycallbacks.length; j < lenj; j++)
				this.destroycallbacks[j](inst);
			cr.arrayFindRemove(instances, inst);
			if (instances.length === 0)
				type.any_instance_parallaxed = false;
			if (inst.collcells)
			{
				type.collision_grid.update(inst, inst.collcells, null);
			}
			if (inst.layer)
			{
				cr.arrayRemove(inst.layer.instances, inst.get_zindex());
				inst.layer.zindices_stale = true;
			}
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				cr.arrayFindRemove(type.families[j].instances, inst);
				type.families[j].stale_iids = true;
			}
			if (inst.behavior_insts)
			{
				for (j = 0, lenj = inst.behavior_insts.length; j < lenj; j++)
				{
					binst = inst.behavior_insts[j];
					if (binst.onDestroy)
						binst.onDestroy();
					binst.behavior.my_instances.remove(inst);
				}
			}
			this.objects_to_pretick.remove(inst);
            this.objects_to_tick.remove(inst);
			this.objects_to_tick2.remove(inst);
			for (j = 0, lenj = this.system.waits.length; j < lenj; j++)
			{
				w = this.system.waits[j];
				if (w.sols.hasOwnProperty(type.index))
					cr.arrayFindRemove(w.sols[type.index].insts, inst);
				if (!type.is_family)
				{
					for (k = 0, lenk = type.families.length; k < lenk; k++)
					{
						f = type.families[k];
						if (w.sols.hasOwnProperty(f.index))
							cr.arrayFindRemove(w.sols[f.index].insts, inst);
					}
				}
			}
			if (inst.onDestroy)
				inst.onDestroy();
			if (this.objectsByUid.hasOwnProperty(inst.uid.toString()))
				delete this.objectsByUid[inst.uid.toString()];
			this.objectcount--;
			if (type.deadCache.length < 64)
				type.deadCache.push(inst);
			type.stale_iids = true;
		}
		if (!this.deathRow.isEmpty())
			this.redraw = true;
		this.deathRow.clear();
		this.isInClearDeathRow = false;
	};
	Runtime.prototype.createInstance = function (type, layer, sx, sy)
	{
		if (type.is_family)
		{
			var i = cr.floor(Math.random() * type.members.length);
			return this.createInstance(type.members[i], layer, sx, sy);
		}
		if (!type.default_instance)
		{
			return null;
		}
		return this.createInstanceFromInit(type.default_instance, layer, false, sx, sy, false);
	};
	var all_behaviors = [];
	Runtime.prototype.createInstanceFromInit = function (initial_inst, layer, is_startup_instance, sx, sy, skip_siblings)
	{
		var i, len, j, lenj, p, effect_fallback, x, y;
		if (!initial_inst)
			return null;
		var type = this.types_by_index[initial_inst[1]];
;
;
		var is_world = type.plugin.is_world;
;
		if (this.isloading && is_world && !type.isOnLoaderLayout)
			return null;
		if (is_world && !this.glwrap && initial_inst[0][11] === 11)
			return null;
		var original_layer = layer;
		if (!is_world)
			layer = null;
		var inst;
		if (type.deadCache.length)
		{
			inst = type.deadCache.pop();
			inst.recycled = true;
			type.plugin.Instance.call(inst, type);
		}
		else
		{
			inst = new type.plugin.Instance(type);
			inst.recycled = false;
		}
		if (is_startup_instance && !skip_siblings)
			inst.uid = initial_inst[2];
		else
			inst.uid = this.next_uid++;
		this.objectsByUid[inst.uid.toString()] = inst;
		inst.puid = this.next_puid++;
		inst.iid = type.instances.length;
		for (i = 0, len = this.createRow.length; i < len; ++i)
		{
			if (this.createRow[i].type === type)
				inst.iid++;
		}
		inst.get_iid = cr.inst_get_iid;
		var initial_vars = initial_inst[3];
		if (inst.recycled)
		{
			cr.wipe(inst.extra);
		}
		else
		{
			inst.extra = {};
			if (typeof cr_is_preview !== "undefined")
			{
				inst.instance_var_names = [];
				inst.instance_var_names.length = initial_vars.length;
				for (i = 0, len = initial_vars.length; i < len; i++)
					inst.instance_var_names[i] = initial_vars[i][1];
			}
			inst.instance_vars = [];
			inst.instance_vars.length = initial_vars.length;
		}
		for (i = 0, len = initial_vars.length; i < len; i++)
			inst.instance_vars[i] = initial_vars[i][0];
		if (is_world)
		{
			var wm = initial_inst[0];
;
			inst.x = cr.is_undefined(sx) ? wm[0] : sx;
			inst.y = cr.is_undefined(sy) ? wm[1] : sy;
			inst.z = wm[2];
			inst.width = wm[3];
			inst.height = wm[4];
			inst.depth = wm[5];
			inst.angle = wm[6];
			inst.opacity = wm[7];
			inst.hotspotX = wm[8];
			inst.hotspotY = wm[9];
			inst.blend_mode = wm[10];
			effect_fallback = wm[11];
			if (!this.glwrap && type.effect_types.length)	// no WebGL renderer and shaders used
				inst.blend_mode = effect_fallback;			// use fallback blend mode - destroy mode was handled above
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			if (inst.recycled)
			{
				for (i = 0, len = wm[12].length; i < len; i++)
				{
					for (j = 0, lenj = wm[12][i].length; j < lenj; j++)
						inst.effect_params[i][j] = wm[12][i][j];
				}
				inst.bbox.set(0, 0, 0, 0);
				inst.collcells.set(0, 0, -1, -1);
				inst.bquad.set_from_rect(inst.bbox);
				inst.bbox_changed_callbacks.length = 0;
			}
			else
			{
				inst.effect_params = wm[12].slice(0);
				for (i = 0, len = inst.effect_params.length; i < len; i++)
					inst.effect_params[i] = wm[12][i].slice(0);
				inst.active_effect_types = [];
				inst.active_effect_flags = [];
				inst.active_effect_flags.length = type.effect_types.length;
				inst.bbox = new cr.rect(0, 0, 0, 0);
				inst.collcells = new cr.rect(0, 0, -1, -1);
				inst.bquad = new cr.quad();
				inst.bbox_changed_callbacks = [];
				inst.set_bbox_changed = cr.set_bbox_changed;
				inst.add_bbox_changed_callback = cr.add_bbox_changed_callback;
				inst.contains_pt = cr.inst_contains_pt;
				inst.update_bbox = cr.update_bbox;
				inst.update_collision_cell = cr.update_collision_cell;
				inst.get_zindex = cr.inst_get_zindex;
			}
			inst.tilemap_exists = false;
			inst.tilemap_width = 0;
			inst.tilemap_height = 0;
			inst.tilemap_data = null;
			if (wm.length === 14)
			{
				inst.tilemap_exists = true;
				inst.tilemap_width = wm[13][0];
				inst.tilemap_height = wm[13][1];
				inst.tilemap_data = wm[13][2];
			}
			for (i = 0, len = type.effect_types.length; i < len; i++)
				inst.active_effect_flags[i] = true;
			inst.updateActiveEffects = cr.inst_updateActiveEffects;
			inst.updateActiveEffects();
			inst.uses_shaders = !!inst.active_effect_types.length;
			inst.bbox_changed = true;
			inst.cell_changed = true;
			type.any_cell_changed = true;
			inst.visible = true;
            inst.my_timescale = -1.0;
			inst.layer = layer;
			inst.zindex = layer.instances.length;	// will be placed at top of current layer
			if (typeof inst.collision_poly === "undefined")
				inst.collision_poly = null;
			inst.collisionsEnabled = true;
			this.redraw = true;
		}
		inst.toString = cr.inst_toString;
		var initial_props, binst;
		all_behaviors.length = 0;
		for (i = 0, len = type.families.length; i < len; i++)
		{
			all_behaviors.push.apply(all_behaviors, type.families[i].behaviors);
		}
		all_behaviors.push.apply(all_behaviors, type.behaviors);
		if (inst.recycled)
		{
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				binst = inst.behavior_insts[i];
				binst.recycled = true;
				btype.behavior.Instance.call(binst, btype, inst);
				initial_props = initial_inst[4][i];
				for (j = 0, lenj = initial_props.length; j < lenj; j++)
					binst.properties[j] = initial_props[j];
				binst.onCreate();
				btype.behavior.my_instances.add(inst);
			}
		}
		else
		{
			inst.behavior_insts = [];
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				var binst = new btype.behavior.Instance(btype, inst);
				binst.recycled = false;
				binst.properties = initial_inst[4][i].slice(0);
				binst.onCreate();
				cr.seal(binst);
				inst.behavior_insts.push(binst);
				btype.behavior.my_instances.add(inst);
			}
		}
		initial_props = initial_inst[5];
		if (inst.recycled)
		{
			for (i = 0, len = initial_props.length; i < len; i++)
				inst.properties[i] = initial_props[i];
		}
		else
			inst.properties = initial_props.slice(0);
		this.createRow.push(inst);
		if (layer)
		{
;
			layer.instances.push(inst);
			if (layer.parallaxX !== 1 || layer.parallaxY !== 1)
				type.any_instance_parallaxed = true;
		}
		this.objectcount++;
		if (type.is_contained)
		{
			inst.is_contained = true;
			if (inst.recycled)
				inst.siblings.length = 0;
			else
				inst.siblings = [];			// note: should not include self in siblings
			if (!is_startup_instance && !skip_siblings)	// layout links initial instances
			{
				for (i = 0, len = type.container.length; i < len; i++)
				{
					if (type.container[i] === type)
						continue;
					if (!type.container[i].default_instance)
					{
						return null;
					}
					inst.siblings.push(this.createInstanceFromInit(type.container[i].default_instance, original_layer, false, is_world ? inst.x : sx, is_world ? inst.y : sy, true));
				}
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					inst.siblings[i].siblings.push(inst);
					for (j = 0; j < len; j++)
					{
						if (i !== j)
							inst.siblings[i].siblings.push(inst.siblings[j]);
					}
				}
			}
		}
		else
		{
			inst.is_contained = false;
			inst.siblings = null;
		}
		inst.onCreate();
		if (!inst.recycled)
			cr.seal(inst);
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].postCreate)
				inst.behavior_insts[i].postCreate();
		}
		return inst;
	};
	Runtime.prototype.getLayerByName = function (layer_name)
	{
		var i, len;
		for (i = 0, len = this.running_layout.layers.length; i < len; i++)
		{
			var layer = this.running_layout.layers[i];
			if (cr.equals_nocase(layer.name, layer_name))
				return layer;
		}
		return null;
	};
	Runtime.prototype.getLayerByNumber = function (index)
	{
		index = cr.floor(index);
		if (index < 0)
			index = 0;
		if (index >= this.running_layout.layers.length)
			index = this.running_layout.layers.length - 1;
		return this.running_layout.layers[index];
	};
	Runtime.prototype.getLayer = function (l)
	{
		if (cr.is_number(l))
			return this.getLayerByNumber(l);
		else
			return this.getLayerByName(l.toString());
	};
	Runtime.prototype.clearSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].getCurrentSol().select_all = true;
		}
	};
	Runtime.prototype.pushCleanSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCleanSol();
		}
	};
	Runtime.prototype.pushCopySol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCopySol();
		}
	};
	Runtime.prototype.popSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].popSol();
		}
	};
	Runtime.prototype.updateAllCells = function (type)
	{
		if (!type.any_cell_changed)
			return;		// all instances must already be up-to-date
		var i, len, instances = type.instances;
		for (i = 0, len = instances.length; i < len; ++i)
		{
			instances[i].update_collision_cell();
		}
		var createRow = this.createRow;
		for (i = 0, len = createRow.length; i < len; ++i)
		{
			if (createRow[i].type === type)
				createRow[i].update_collision_cell();
		}
		type.any_cell_changed = false;
	};
	Runtime.prototype.getCollisionCandidates = function (layer, rtype, bbox, candidates)
	{
		var i, len, t;
		var is_parallaxed = (layer ? (layer.parallaxX !== 1 || layer.parallaxY !== 1) : false);
		if (rtype.is_family)
		{
			for (i = 0, len = rtype.members.length; i < len; ++i)
			{
				t = rtype.members[i];
				if (is_parallaxed || t.any_instance_parallaxed)
				{
					cr.appendArray(candidates, t.instances);
				}
				else
				{
					this.updateAllCells(t);
					t.collision_grid.queryRange(bbox, candidates);
				}
			}
		}
		else
		{
			if (is_parallaxed || rtype.any_instance_parallaxed)
			{
				cr.appendArray(candidates, rtype.instances);
			}
			else
			{
				this.updateAllCells(rtype);
				rtype.collision_grid.queryRange(bbox, candidates);
			}
		}
	};
	Runtime.prototype.getTypesCollisionCandidates = function (layer, types, bbox, candidates)
	{
		var i, len;
		for (i = 0, len = types.length; i < len; ++i)
		{
			this.getCollisionCandidates(layer, types[i], bbox, candidates);
		}
	};
	Runtime.prototype.getSolidCollisionCandidates = function (layer, bbox, candidates)
	{
		var solid = this.getSolidBehavior();
		if (!solid)
			return null;
		this.getTypesCollisionCandidates(layer, solid.my_types, bbox, candidates);
	};
	Runtime.prototype.getJumpthruCollisionCandidates = function (layer, bbox, candidates)
	{
		var jumpthru = this.getJumpthruBehavior();
		if (!jumpthru)
			return null;
		this.getTypesCollisionCandidates(layer, jumpthru.my_types, bbox, candidates);
	};
	Runtime.prototype.testAndSelectCanvasPointOverlap = function (type, ptx, pty, inverted)
	{
		var sol = type.getCurrentSol();
		var i, j, inst, len;
		var lx, ly;
		if (sol.select_all)
		{
			if (!inverted)
			{
				sol.select_all = false;
				sol.instances.length = 0;   // clear contents
			}
			for (i = 0, len = type.instances.length; i < len; i++)
			{
				inst = type.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
						sol.instances.push(inst);
				}
			}
		}
		else
		{
			j = 0;
			for (i = 0, len = sol.instances.length; i < len; i++)
			{
				inst = sol.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
					{
						sol.instances[j] = sol.instances[i];
						j++;
					}
				}
			}
			if (!inverted)
				sol.instances.length = j;
		}
		type.applySolToContainer();
		if (inverted)
			return true;		// did not find anything overlapping
		else
			return sol.hasObjects();
	};
	Runtime.prototype.testOverlap = function (a, b)
	{
		if (!a || !b || a === b || !a.collisionsEnabled || !b.collisionsEnabled)
			return false;
		a.update_bbox();
		b.update_bbox();
		var layera = a.layer;
		var layerb = b.layer;
		var different_layers = (layera !== layerb && (layera.parallaxX !== layerb.parallaxX || layerb.parallaxY !== layerb.parallaxY || layera.scale !== layerb.scale || layera.angle !== layerb.angle || layera.zoomRate !== layerb.zoomRate));
		var i, len, i2, i21, x, y, haspolya, haspolyb, polya, polyb;
		if (!different_layers)	// same layers: easy check
		{
			if (!a.bbox.intersects_rect(b.bbox))
				return false;
			if (!a.bquad.intersects_quad(b.bquad))
				return false;
			if (a.tilemap_exists && b.tilemap_exists)
				return false;
			if (a.tilemap_exists)
				return this.testTilemapOverlap(a, b);
			if (b.tilemap_exists)
				return this.testTilemapOverlap(b, a);
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolya && !haspolyb)
				return true;
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				polya = a.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
				polya = this.temp_poly;
			}
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				polyb = b.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
				polyb = this.temp_poly;
			}
			return polya.intersects_poly(polyb, b.x - a.x, b.y - a.y);
		}
		else	// different layers: need to do full translated check
		{
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				this.temp_poly.set_from_poly(a.collision_poly);
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
			}
			polya = this.temp_poly;
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				this.temp_poly2.set_from_poly(b.collision_poly);
			}
			else
			{
				this.temp_poly2.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
			}
			polyb = this.temp_poly2;
			for (i = 0, len = polya.pts_count; i < len; i++)
			{
				i2 = i * 2;
				i21 = i2 + 1;
				x = polya.pts_cache[i2];
				y = polya.pts_cache[i21];
				polya.pts_cache[i2] = layera.layerToCanvas(x + a.x, y + a.y, true);
				polya.pts_cache[i21] = layera.layerToCanvas(x + a.x, y + a.y, false);
			}
			polya.update_bbox();
			for (i = 0, len = polyb.pts_count; i < len; i++)
			{
				i2 = i * 2;
				i21 = i2 + 1;
				x = polyb.pts_cache[i2];
				y = polyb.pts_cache[i21];
				polyb.pts_cache[i2] = layerb.layerToCanvas(x + b.x, y + b.y, true);
				polyb.pts_cache[i21] = layerb.layerToCanvas(x + b.x, y + b.y, false);
			}
			polyb.update_bbox();
			return polya.intersects_poly(polyb, 0, 0);
		}
	};
	var tmpQuad = new cr.quad();
	var tmpRect = new cr.rect(0, 0, 0, 0);
	var collrect_candidates = [];
	Runtime.prototype.testTilemapOverlap = function (tm, a)
	{
		var i, len, c, rc;
		var bbox = a.bbox;
		var tmx = tm.x;
		var tmy = tm.y;
		tm.getCollisionRectCandidates(bbox, collrect_candidates);
		var collrects = collrect_candidates;
		var haspolya = (a.collision_poly && !a.collision_poly.is_empty());
		for (i = 0, len = collrects.length; i < len; ++i)
		{
			c = collrects[i];
			rc = c.rc;
			if (bbox.intersects_rect_off(rc, tmx, tmy))
			{
				tmpQuad.set_from_rect(rc);
				tmpQuad.offset(tmx, tmy);
				if (tmpQuad.intersects_quad(a.bquad))
				{
					if (haspolya)
					{
						a.collision_poly.cache_poly(a.width, a.height, a.angle);
						if (c.poly)
						{
							if (c.poly.intersects_poly(a.collision_poly, a.x - (tmx + rc.left), a.y - (tmy + rc.top)))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
						else
						{
							this.temp_poly.set_from_quad(tmpQuad, 0, 0, rc.right - rc.left, rc.bottom - rc.top);
							if (this.temp_poly.intersects_poly(a.collision_poly, a.x, a.y))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
					}
					else
					{
						if (c.poly)
						{
							this.temp_poly.set_from_quad(a.bquad, 0, 0, a.width, a.height);
							if (c.poly.intersects_poly(this.temp_poly, -(tmx + rc.left), -(tmy + rc.top)))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
						else
						{
							collrect_candidates.length = 0;
							return true;
						}
					}
				}
			}
		}
		collrect_candidates.length = 0;
		return false;
	};
	Runtime.prototype.testRectOverlap = function (r, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		if (!b.bbox.intersects_rect(r))
			return false;
		if (b.tilemap_exists)
		{
			b.getCollisionRectCandidates(r, collrect_candidates);
			var collrects = collrect_candidates;
			var i, len, c, tilerc;
			var tmx = b.x;
			var tmy = b.y;
			for (i = 0, len = collrects.length; i < len; ++i)
			{
				c = collrects[i];
				tilerc = c.rc;
				if (r.intersects_rect_off(tilerc, tmx, tmy))
				{
					if (c.poly)
					{
						this.temp_poly.set_from_rect(r, 0, 0);
						if (c.poly.intersects_poly(this.temp_poly, -(tmx + tilerc.left), -(tmy + tilerc.top)))
						{
							collrect_candidates.length = 0;
							return true;
						}
					}
					else
					{
						collrect_candidates.length = 0;
						return true;
					}
				}
			}
			collrect_candidates.length = 0;
			return false;
		}
		else
		{
			tmpQuad.set_from_rect(r);
			if (!b.bquad.intersects_quad(tmpQuad))
				return false;
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolyb)
				return true;
			b.collision_poly.cache_poly(b.width, b.height, b.angle);
			tmpQuad.offset(-r.left, -r.top);
			this.temp_poly.set_from_quad(tmpQuad, 0, 0, 1, 1);
			return b.collision_poly.intersects_poly(this.temp_poly, r.left - b.x, r.top - b.y);
		}
	};
	Runtime.prototype.testSegmentOverlap = function (x1, y1, x2, y2, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		tmpRect.set(cr.min(x1, x2), cr.min(y1, y2), cr.max(x1, x2), cr.max(y1, y2));
		if (!b.bbox.intersects_rect(tmpRect))
			return false;
		if (b.tilemap_exists)
		{
			b.getCollisionRectCandidates(tmpRect, collrect_candidates);
			var collrects = collrect_candidates;
			var i, len, c, tilerc;
			var tmx = b.x;
			var tmy = b.y;
			for (i = 0, len = collrects.length; i < len; ++i)
			{
				c = collrects[i];
				tilerc = c.rc;
				if (tmpRect.intersects_rect_off(tilerc, tmx, tmy))
				{
					tmpQuad.set_from_rect(tilerc);
					tmpQuad.offset(tmx, tmy);
					if (tmpQuad.intersects_segment(x1, y1, x2, y2))
					{
						if (c.poly)
						{
							if (c.poly.intersects_segment(tmx + tilerc.left, tmy + tilerc.top, x1, y1, x2, y2))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
						else
						{
							collrect_candidates.length = 0;
							return true;
						}
					}
				}
			}
			collrect_candidates.length = 0;
			return false;
		}
		else
		{
			if (!b.bquad.intersects_segment(x1, y1, x2, y2))
				return false;
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolyb)
				return true;
			b.collision_poly.cache_poly(b.width, b.height, b.angle);
			return b.collision_poly.intersects_segment(b.x, b.y, x1, y1, x2, y2);
		}
	};
	Runtime.prototype.typeHasBehavior = function (t, b)
	{
		if (!b)
			return false;
		var i, len, j, lenj, f;
		for (i = 0, len = t.behaviors.length; i < len; i++)
		{
			if (t.behaviors[i].behavior instanceof b)
				return true;
		}
		if (!t.is_family)
		{
			for (i = 0, len = t.families.length; i < len; i++)
			{
				f = t.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (f.behaviors[j].behavior instanceof b)
						return true;
				}
			}
		}
		return false;
	};
	Runtime.prototype.typeHasNoSaveBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.NoSave);
	};
	Runtime.prototype.typeHasPersistBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.Persist);
	};
	Runtime.prototype.getSolidBehavior = function ()
	{
		return this.solidBehavior;
	};
	Runtime.prototype.getJumpthruBehavior = function ()
	{
		return this.jumpthruBehavior;
	};
	var candidates = [];
	Runtime.prototype.testOverlapSolid = function (inst)
	{
		var i, len, s;
		inst.update_bbox();
		this.getSolidCollisionCandidates(inst.layer, inst.bbox, candidates);
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			s = candidates[i];
			if (!s.extra["solidEnabled"])
				continue;
			if (this.testOverlap(inst, s))
			{
				candidates.length = 0;
				return s;
			}
		}
		candidates.length = 0;
		return null;
	};
	Runtime.prototype.testRectOverlapSolid = function (r)
	{
		var i, len, s;
		this.getSolidCollisionCandidates(null, r, candidates);
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			s = candidates[i];
			if (!s.extra["solidEnabled"])
				continue;
			if (this.testRectOverlap(r, s))
			{
				candidates.length = 0;
				return s;
			}
		}
		candidates.length = 0;
		return null;
	};
	var jumpthru_array_ret = [];
	Runtime.prototype.testOverlapJumpThru = function (inst, all)
	{
		var ret = null;
		if (all)
		{
			ret = jumpthru_array_ret;
			ret.length = 0;
		}
		inst.update_bbox();
		this.getJumpthruCollisionCandidates(inst.layer, inst.bbox, candidates);
		var i, len, j;
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			j = candidates[i];
			if (!j.extra["jumpthruEnabled"])
				continue;
			if (this.testOverlap(inst, j))
			{
				if (all)
					ret.push(j);
				else
				{
					candidates.length = 0;
					return j;
				}
			}
		}
		candidates.length = 0;
		return ret;
	};
	Runtime.prototype.pushOutSolid = function (inst, xdir, ydir, dist, include_jumpthrus, specific_jumpthru)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		var last_overlapped = null, secondlast_overlapped = null;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (last_overlapped)
					secondlast_overlapped = last_overlapped;
				if (!last_overlapped)
				{
					if (include_jumpthrus)
					{
						if (specific_jumpthru)
							last_overlapped = (this.testOverlap(inst, specific_jumpthru) ? specific_jumpthru : null);
						else
							last_overlapped = this.testOverlapJumpThru(inst);
						if (last_overlapped)
							secondlast_overlapped = last_overlapped;
					}
					if (!last_overlapped)
					{
						if (secondlast_overlapped)
							this.pushInFractional(inst, xdir, ydir, secondlast_overlapped, 16);
						return true;
					}
				}
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushOut = function (inst, xdir, ydir, dist, otherinst)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, otherinst))
				return true;
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushInFractional = function (inst, xdir, ydir, obj, limit)
	{
		var divisor = 2;
		var frac;
		var forward = false;
		var overlapping = false;
		var bestx = inst.x;
		var besty = inst.y;
		while (divisor <= limit)
		{
			frac = 1 / divisor;
			divisor *= 2;
			inst.x += xdir * frac * (forward ? 1 : -1);
			inst.y += ydir * frac * (forward ? 1 : -1);
			inst.set_bbox_changed();
			if (this.testOverlap(inst, obj))
			{
				forward = true;
				overlapping = true;
			}
			else
			{
				forward = false;
				overlapping = false;
				bestx = inst.x;
				besty = inst.y;
			}
		}
		if (overlapping)
		{
			inst.x = bestx;
			inst.y = besty;
			inst.set_bbox_changed();
		}
	};
	Runtime.prototype.pushOutSolidNearest = function (inst, max_dist_)
	{
		var max_dist = (cr.is_undefined(max_dist_) ? 100 : max_dist_);
		var dist = 0;
		var oldx = inst.x
		var oldy = inst.y;
		var dir = 0;
		var dx = 0, dy = 0;
		var last_overlapped = this.testOverlapSolid(inst);
		if (!last_overlapped)
			return true;		// already clear of solids
		while (dist <= max_dist)
		{
			switch (dir) {
			case 0:		dx = 0; dy = -1; dist++; break;
			case 1:		dx = 1; dy = -1; break;
			case 2:		dx = 1; dy = 0; break;
			case 3:		dx = 1; dy = 1; break;
			case 4:		dx = 0; dy = 1; break;
			case 5:		dx = -1; dy = 1; break;
			case 6:		dx = -1; dy = 0; break;
			case 7:		dx = -1; dy = -1; break;
			}
			dir = (dir + 1) % 8;
			inst.x = cr.floor(oldx + (dx * dist));
			inst.y = cr.floor(oldy + (dy * dist));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (!last_overlapped)
					return true;
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.registerCollision = function (a, b)
	{
		if (!a.collisionsEnabled || !b.collisionsEnabled)
			return;
		this.registered_collisions.push([a, b]);
	};
	Runtime.prototype.checkRegisteredCollision = function (a, b)
	{
		var i, len, x;
		for (i = 0, len = this.registered_collisions.length; i < len; i++)
		{
			x = this.registered_collisions[i];
			if ((x[0] == a && x[1] == b) || (x[0] == b && x[1] == a))
				return true;
		}
		return false;
	};
	Runtime.prototype.calculateSolidBounceAngle = function(inst, startx, starty, obj)
	{
		var objx = inst.x;
		var objy = inst.y;
		var radius = cr.max(10, cr.distanceTo(startx, starty, objx, objy));
		var startangle = cr.angleTo(startx, starty, objx, objy);
		var firstsolid = obj || this.testOverlapSolid(inst);
		if (!firstsolid)
			return cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		var i, curangle, anticlockwise_free_angle, clockwise_free_angle;
		var increment = cr.to_radians(5);	// 5 degree increments
		for (i = 1; i < 36; i++)
		{
			curangle = startangle - i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					anticlockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			anticlockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		for (i = 1; i < 36; i++)
		{
			curangle = startangle + i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					clockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			clockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		inst.x = objx;
		inst.y = objy;
		inst.set_bbox_changed();
		if (clockwise_free_angle === anticlockwise_free_angle)
			return clockwise_free_angle;
		var half_diff = cr.angleDiff(clockwise_free_angle, anticlockwise_free_angle) / 2;
		var normal;
		if (cr.angleClockwise(clockwise_free_angle, anticlockwise_free_angle))
		{
			normal = cr.clamp_angle(anticlockwise_free_angle + half_diff + cr.PI);
		}
		else
		{
			normal = cr.clamp_angle(clockwise_free_angle + half_diff);
		}
;
		var vx = Math.cos(startangle);
		var vy = Math.sin(startangle);
		var nx = Math.cos(normal);
		var ny = Math.sin(normal);
		var v_dot_n = vx * nx + vy * ny;
		var rx = vx - 2 * v_dot_n * nx;
		var ry = vy - 2 * v_dot_n * ny;
		return cr.angleTo(0, 0, rx, ry);
	};
	var triggerSheetIndex = -1;
	Runtime.prototype.trigger = function (method, inst, value /* for fast triggers */)
	{
;
		if (!this.running_layout)
			return false;
		var sheet = this.running_layout.event_sheet;
		if (!sheet)
			return false;     // no event sheet active; nothing to trigger
		var ret = false;
		var r, i, len;
		triggerSheetIndex++;
		var deep_includes = sheet.deep_includes;
		for (i = 0, len = deep_includes.length; i < len; ++i)
		{
			r = this.triggerOnSheet(method, inst, deep_includes[i], value);
			ret = ret || r;
		}
		r = this.triggerOnSheet(method, inst, sheet, value);
		ret = ret || r;
		triggerSheetIndex--;
		return ret;
    };
    Runtime.prototype.triggerOnSheet = function (method, inst, sheet, value)
    {
        var ret = false;
		var i, leni, r, families;
		if (!inst)
		{
			r = this.triggerOnSheetForTypeName(method, inst, "system", sheet, value);
			ret = ret || r;
		}
		else
		{
			r = this.triggerOnSheetForTypeName(method, inst, inst.type.name, sheet, value);
			ret = ret || r;
			families = inst.type.families;
			for (i = 0, leni = families.length; i < leni; ++i)
			{
				r = this.triggerOnSheetForTypeName(method, inst, families[i].name, sheet, value);
				ret = ret || r;
			}
		}
		return ret;             // true if anything got triggered
	};
	Runtime.prototype.triggerOnSheetForTypeName = function (method, inst, type_name, sheet, value)
	{
		var i, leni;
		var ret = false, ret2 = false;
		var trig, index;
		var fasttrigger = (typeof value !== "undefined");
		var triggers = (fasttrigger ? sheet.fasttriggers : sheet.triggers);
		var obj_entry = triggers[type_name];
		if (!obj_entry)
			return ret;
		var triggers_list = null;
		for (i = 0, leni = obj_entry.length; i < leni; ++i)
		{
			if (obj_entry[i].method == method)
			{
				triggers_list = obj_entry[i].evs;
				break;
			}
		}
		if (!triggers_list)
			return ret;
		var triggers_to_fire;
		if (fasttrigger)
		{
			triggers_to_fire = triggers_list[value];
		}
		else
		{
			triggers_to_fire = triggers_list;
		}
		if (!triggers_to_fire)
			return null;
		for (i = 0, leni = triggers_to_fire.length; i < leni; i++)
		{
			trig = triggers_to_fire[i][0];
			index = triggers_to_fire[i][1];
			ret2 = this.executeSingleTrigger(inst, type_name, trig, index);
			ret = ret || ret2;
		}
		return ret;
	};
	Runtime.prototype.executeSingleTrigger = function (inst, type_name, trig, index)
	{
		var i, leni;
		var ret = false;
		this.trigger_depth++;
		var current_event = this.getCurrentEventStack().current_event;
		if (current_event)
			this.pushCleanSol(current_event.solModifiersIncludingParents);
		var isrecursive = (this.trigger_depth > 1);		// calling trigger from inside another trigger
		this.pushCleanSol(trig.solModifiersIncludingParents);
		if (isrecursive)
			this.pushLocalVarStack();
		var event_stack = this.pushEventStack(trig);
		event_stack.current_event = trig;
		if (inst)
		{
			var sol = this.types[type_name].getCurrentSol();
			sol.select_all = false;
			sol.instances.length = 1;
			sol.instances[0] = inst;
			this.types[type_name].applySolToContainer();
		}
		var ok_to_run = true;
		if (trig.parent)
		{
			var temp_parents_arr = event_stack.temp_parents_arr;
			var cur_parent = trig.parent;
			while (cur_parent)
			{
				temp_parents_arr.push(cur_parent);
				cur_parent = cur_parent.parent;
			}
			temp_parents_arr.reverse();
			for (i = 0, leni = temp_parents_arr.length; i < leni; i++)
			{
				if (!temp_parents_arr[i].run_pretrigger())   // parent event failed
				{
					ok_to_run = false;
					break;
				}
			}
		}
		if (ok_to_run)
		{
			this.execcount++;
			if (trig.orblock)
				trig.run_orblocktrigger(index);
			else
				trig.run();
			ret = ret || event_stack.last_event_true;
		}
		this.popEventStack();
		if (isrecursive)
			this.popLocalVarStack();
		this.popSol(trig.solModifiersIncludingParents);
		if (current_event)
			this.popSol(current_event.solModifiersIncludingParents);
		if (this.isInOnDestroy === 0 && triggerSheetIndex === 0 && !this.isRunningEvents && (!this.deathRow.isEmpty() || this.createRow.length))
		{
			this.ClearDeathRow();
		}
		this.trigger_depth--;
		return ret;
	};
	Runtime.prototype.getCurrentCondition = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.conditions[evinfo.cndindex];
	};
	Runtime.prototype.getCurrentAction = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.actions[evinfo.actindex];
	};
	Runtime.prototype.pushLocalVarStack = function ()
	{
		this.localvar_stack_index++;
		if (this.localvar_stack_index >= this.localvar_stack.length)
			this.localvar_stack.push([]);
	};
	Runtime.prototype.popLocalVarStack = function ()
	{
;
		this.localvar_stack_index--;
	};
	Runtime.prototype.getCurrentLocalVarStack = function ()
	{
		return this.localvar_stack[this.localvar_stack_index];
	};
	Runtime.prototype.pushEventStack = function (cur_event)
	{
		this.event_stack_index++;
		if (this.event_stack_index >= this.event_stack.length)
			this.event_stack.push(new cr.eventStackFrame());
		var ret = this.getCurrentEventStack();
		ret.reset(cur_event);
		return ret;
	};
	Runtime.prototype.popEventStack = function ()
	{
;
		this.event_stack_index--;
	};
	Runtime.prototype.getCurrentEventStack = function ()
	{
		return this.event_stack[this.event_stack_index];
	};
	Runtime.prototype.pushLoopStack = function (name_)
	{
		this.loop_stack_index++;
		if (this.loop_stack_index >= this.loop_stack.length)
		{
			this.loop_stack.push(cr.seal({ name: name_, index: 0, stopped: false }));
		}
		var ret = this.getCurrentLoop();
		ret.name = name_;
		ret.index = 0;
		ret.stopped = false;
		return ret;
	};
	Runtime.prototype.popLoopStack = function ()
	{
;
		this.loop_stack_index--;
	};
	Runtime.prototype.getCurrentLoop = function ()
	{
		return this.loop_stack[this.loop_stack_index];
	};
	Runtime.prototype.getEventVariableByName = function (name, scope)
	{
		var i, leni, j, lenj, sheet, e;
		while (scope)
		{
			for (i = 0, leni = scope.subevents.length; i < leni; i++)
			{
				e = scope.subevents[i];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
			scope = scope.parent;
		}
		for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
		{
			sheet = this.eventsheets_by_index[i];
			for (j = 0, lenj = sheet.events.length; j < lenj; j++)
			{
				e = sheet.events[j];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
		}
		return null;
	};
	Runtime.prototype.getLayoutBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			if (this.layouts_by_index[i].sid === sid_)
				return this.layouts_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getObjectTypeBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			if (this.types_by_index[i].sid === sid_)
				return this.types_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getGroupBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			if (this.allGroups[i].sid === sid_)
				return this.allGroups[i];
		}
		return null;
	};
	function makeSaveDb(e)
	{
		var db = e.target.result;
		db.createObjectStore("saves", { keyPath: "slot" });
	};
	function IndexedDB_WriteSlot(slot_, data_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"], "readwrite");
			var objectStore = transaction.objectStore("saves");
			var putReq = objectStore.put({"slot": slot_, "data": data_ });
			putReq.onsuccess = oncomplete_;
		};
	};
	function IndexedDB_ReadSlot(slot_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"]);
			var objectStore = transaction.objectStore("saves");
			var readReq = objectStore.get(slot_);
			readReq.onsuccess = function (e)
			{
				if (readReq.result)
					oncomplete_(readReq.result["data"]);
				else
					oncomplete_(null);
			};
		};
	};
	Runtime.prototype.signalContinuousPreview = function ()
	{
		this.signalledContinuousPreview = true;
	};
	function doContinuousPreviewReload()
	{
		cr.logexport("Reloading for continuous preview");
		if (!!window["c2cocoonjs"])
		{
			CocoonJS["App"]["reload"]();
		}
		else
		{
			if (window.location.search.indexOf("continuous") > -1)
				window.location.reload(true);
			else
				window.location = window.location + "?continuous";
		}
	};
	Runtime.prototype.handleSaveLoad = function ()
	{
		var self = this;
		var savingToSlot = this.saveToSlot;
		var savingJson = this.lastSaveJson;
		var loadingFromSlot = this.loadFromSlot;
		var continuous = false;
		if (this.signalledContinuousPreview)
		{
			continuous = true;
			savingToSlot = "__c2_continuouspreview";
			this.signalledContinuousPreview = false;
		}
		if (savingToSlot.length)
		{
			this.ClearDeathRow();
			savingJson = this.saveToJSONString();
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_WriteSlot(savingToSlot, savingJson, function ()
				{
					cr.logexport("Saved state to IndexedDB storage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}, function (e)
				{
					try {
						localStorage.setItem("__c2save_" + savingToSlot, savingJson);
						cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
						self.lastSaveJson = savingJson;
						self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
						self.lastSaveJson = "";
						if (continuous)
							doContinuousPreviewReload();
					}
					catch (f)
					{
						cr.logexport("Failed to save game state: " + e + "; " + f);
					}
				});
			}
			else
			{
				try {
					localStorage.setItem("__c2save_" + savingToSlot, savingJson);
					cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					this.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}
				catch (e)
				{
					cr.logexport("Error saving to WebStorage: " + e);
				}
			}
			this.saveToSlot = "";
			this.loadFromSlot = "";
			this.loadFromJson = "";
		}
		if (loadingFromSlot.length)
		{
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_ReadSlot(loadingFromSlot, function (result_)
				{
					if (result_)
					{
						self.loadFromJson = result_;
						cr.logexport("Loaded state from IndexedDB storage (" + self.loadFromJson.length + " bytes)");
					}
					else
					{
						self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
						cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					}
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				}, function (e)
				{
					self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
					cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				});
			}
			else
			{
				this.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
				cr.logexport("Loaded state from WebStorage (" + this.loadFromJson.length + " bytes)");
				this.suspendDrawing = false;
				if (!self.loadFromJson.length)
					self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
			}
			this.loadFromSlot = "";
			this.saveToSlot = "";
		}
		if (this.loadFromJson.length)
		{
			this.ClearDeathRow();
			this.loadFromJSONString(this.loadFromJson);
			this.lastSaveJson = this.loadFromJson;
			this.trigger(cr.system_object.prototype.cnds.OnLoadComplete, null);
			this.lastSaveJson = "";
			this.loadFromJson = "";
		}
	};
	function CopyExtraObject(extra)
	{
		var p, ret = {};
		for (p in extra)
		{
			if (extra.hasOwnProperty(p))
			{
				if (extra[p] instanceof cr.ObjectSet)
					continue;
				if (extra[p] && typeof extra[p].c2userdata !== "undefined")
					continue;
				ret[p] = extra[p];
			}
		}
		return ret;
	};
	Runtime.prototype.saveToJSONString = function()
	{
		var i, len, j, lenj, type, layout, typeobj, g, c, a, v, p;
		var o = {
			"c2save":				true,
			"version":				1,
			"rt": {
				"time":				this.kahanTime.sum,
				"walltime":			this.wallTime.sum,
				"timescale":		this.timescale,
				"tickcount":		this.tickcount,
				"execcount":		this.execcount,
				"next_uid":			this.next_uid,
				"running_layout":	this.running_layout.sid,
				"start_time_offset": (Date.now() - this.start_time)
			},
			"types": {},
			"layouts": {},
			"events": {
				"groups": {},
				"cnds": {},
				"acts": {},
				"vars": {}
			}
		};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || this.typeHasNoSaveBehavior(type))
				continue;
			typeobj = {
				"instances": []
			};
			if (cr.hasAnyOwnProperty(type.extra))
				typeobj["ex"] = CopyExtraObject(type.extra);
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				typeobj["instances"].push(this.saveInstanceToJSON(type.instances[j]));
			}
			o["types"][type.sid.toString()] = typeobj;
		}
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			layout = this.layouts_by_index[i];
			o["layouts"][layout.sid.toString()] = layout.saveToJSON();
		}
		var ogroups = o["events"]["groups"];
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			g = this.allGroups[i];
			ogroups[g.sid.toString()] = this.groups_by_name[g.group_name].group_active;
		}
		var ocnds = o["events"]["cnds"];
		for (p in this.cndsBySid)
		{
			if (this.cndsBySid.hasOwnProperty(p))
			{
				c = this.cndsBySid[p];
				if (cr.hasAnyOwnProperty(c.extra))
					ocnds[p] = { "ex": CopyExtraObject(c.extra) };
			}
		}
		var oacts = o["events"]["acts"];
		for (p in this.actsBySid)
		{
			if (this.actsBySid.hasOwnProperty(p))
			{
				a = this.actsBySid[p];
				if (cr.hasAnyOwnProperty(a.extra))
					oacts[p] = { "ex": a.extra };
			}
		}
		var ovars = o["events"]["vars"];
		for (p in this.varsBySid)
		{
			if (this.varsBySid.hasOwnProperty(p))
			{
				v = this.varsBySid[p];
				if (!v.is_constant && (!v.parent || v.is_static))
					ovars[p] = v.data;
			}
		}
		o["system"] = this.system.saveToJSON();
		return JSON.stringify(o);
	};
	Runtime.prototype.refreshUidMap = function ()
	{
		var i, len, type, j, lenj, inst;
		this.objectsByUid = {};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				this.objectsByUid[inst.uid.toString()] = inst;
			}
		}
	};
	Runtime.prototype.loadFromJSONString = function (str)
	{
		var o = JSON.parse(str);
		if (!o["c2save"])
			return;		// probably not a c2 save state
		if (o["version"] > 1)
			return;		// from future version of c2; assume not compatible
		var rt = o["rt"];
		this.kahanTime.reset();
		this.kahanTime.sum = rt["time"];
		this.wallTime.reset();
		this.wallTime.sum = rt["walltime"] || 0;
		this.timescale = rt["timescale"];
		this.tickcount = rt["tickcount"];
		this.start_time = Date.now() - rt["start_time_offset"];
		var layout_sid = rt["running_layout"];
		if (layout_sid !== this.running_layout.sid)
		{
			var changeToLayout = this.getLayoutBySid(layout_sid);
			if (changeToLayout)
				this.doChangeLayout(changeToLayout);
			else
				return;		// layout that was saved on has gone missing (deleted?)
		}
		this.isLoadingState = true;
		var i, len, j, lenj, k, lenk, p, type, existing_insts, load_insts, inst, binst, layout, layer, g, iid, t;
		var otypes = o["types"];
		for (p in otypes)
		{
			if (otypes.hasOwnProperty(p))
			{
				type = this.getObjectTypeBySid(parseInt(p, 10));
				if (!type || type.is_family || this.typeHasNoSaveBehavior(type))
					continue;
				if (otypes[p]["ex"])
					type.extra = otypes[p]["ex"];
				else
					cr.wipe(type.extra);
				existing_insts = type.instances;
				load_insts = otypes[p]["instances"];
				for (i = 0, len = cr.min(existing_insts.length, load_insts.length); i < len; i++)
				{
					this.loadInstanceFromJSON(existing_insts[i], load_insts[i]);
				}
				for (i = load_insts.length, len = existing_insts.length; i < len; i++)
					this.DestroyInstance(existing_insts[i]);
				for (i = existing_insts.length, len = load_insts.length; i < len; i++)
				{
					layer = null;
					if (type.plugin.is_world)
					{
						layer = this.running_layout.getLayerBySid(load_insts[i]["w"]["l"]);
						if (!layer)
							continue;
					}
					inst = this.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
					this.loadInstanceFromJSON(inst, load_insts[i]);
				}
				type.stale_iids = true;
			}
		}
		this.ClearDeathRow();
		this.refreshUidMap();
		var olayouts = o["layouts"];
		for (p in olayouts)
		{
			if (olayouts.hasOwnProperty(p))
			{
				layout = this.getLayoutBySid(parseInt(p, 10));
				if (!layout)
					continue;		// must've gone missing
				layout.loadFromJSON(olayouts[p]);
			}
		}
		var ogroups = o["events"]["groups"];
		for (p in ogroups)
		{
			if (ogroups.hasOwnProperty(p))
			{
				g = this.getGroupBySid(parseInt(p, 10));
				if (g && this.groups_by_name[g.group_name])
					this.groups_by_name[g.group_name].group_active = ogroups[p];
			}
		}
		var ocnds = o["events"]["cnds"];
		for (p in ocnds)
		{
			if (ocnds.hasOwnProperty(p) && this.cndsBySid.hasOwnProperty(p))
			{
				this.cndsBySid[p].extra = ocnds[p]["ex"];
			}
		}
		var oacts = o["events"]["acts"];
		for (p in oacts)
		{
			if (oacts.hasOwnProperty(p) && this.actsBySid.hasOwnProperty(p))
			{
				this.actsBySid[p].extra = oacts[p]["ex"];
			}
		}
		var ovars = o["events"]["vars"];
		for (p in ovars)
		{
			if (ovars.hasOwnProperty(p) && this.varsBySid.hasOwnProperty(p))
			{
				this.varsBySid[p].data = ovars[p];
			}
		}
		this.next_uid = rt["next_uid"];
		this.isLoadingState = false;
		this.system.loadFromJSON(o["system"]);
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (type.is_contained)
				{
					iid = inst.get_iid();
					inst.siblings.length = 0;
					for (k = 0, lenk = type.container.length; k < lenk; k++)
					{
						t = type.container[k];
						if (type === t)
							continue;
;
						inst.siblings.push(t.instances[iid]);
					}
				}
				if (inst.afterLoad)
					inst.afterLoad();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.afterLoad)
							binst.afterLoad();
					}
				}
			}
		}
		this.redraw = true;
	};
	Runtime.prototype.saveInstanceToJSON = function(inst, state_only)
	{
		var i, len, world, behinst, et;
		var type = inst.type;
		var plugin = type.plugin;
		var o = {};
		if (state_only)
			o["c2"] = true;		// mark as known json data from Construct 2
		else
			o["uid"] = inst.uid;
		if (cr.hasAnyOwnProperty(inst.extra))
			o["ex"] = CopyExtraObject(inst.extra);
		if (inst.instance_vars && inst.instance_vars.length)
		{
			o["ivs"] = {};
			for (i = 0, len = inst.instance_vars.length; i < len; i++)
			{
				o["ivs"][inst.type.instvar_sids[i].toString()] = inst.instance_vars[i];
			}
		}
		if (plugin.is_world)
		{
			world = {
				"x": inst.x,
				"y": inst.y,
				"w": inst.width,
				"h": inst.height,
				"l": inst.layer.sid,
				"zi": inst.get_zindex()
			};
			if (inst.angle !== 0)
				world["a"] = inst.angle;
			if (inst.opacity !== 1)
				world["o"] = inst.opacity;
			if (inst.hotspotX !== 0.5)
				world["hX"] = inst.hotspotX;
			if (inst.hotspotY !== 0.5)
				world["hY"] = inst.hotspotY;
			if (inst.blend_mode !== 0)
				world["bm"] = inst.blend_mode;
			if (!inst.visible)
				world["v"] = inst.visible;
			if (!inst.collisionsEnabled)
				world["ce"] = inst.collisionsEnabled;
			if (inst.my_timescale !== -1)
				world["mts"] = inst.my_timescale;
			if (type.effect_types.length)
			{
				world["fx"] = [];
				for (i = 0, len = type.effect_types.length; i < len; i++)
				{
					et = type.effect_types[i];
					world["fx"].push({"name": et.name,
									  "active": inst.active_effect_flags[et.index],
									  "params": inst.effect_params[et.index] });
				}
			}
			o["w"] = world;
		}
		if (inst.behavior_insts && inst.behavior_insts.length)
		{
			o["behs"] = {};
			for (i = 0, len = inst.behavior_insts.length; i < len; i++)
			{
				behinst = inst.behavior_insts[i];
				if (behinst.saveToJSON)
					o["behs"][behinst.type.sid.toString()] = behinst.saveToJSON();
			}
		}
		if (inst.saveToJSON)
			o["data"] = inst.saveToJSON();
		return o;
	};
	Runtime.prototype.getInstanceVarIndexBySid = function (type, sid_)
	{
		var i, len;
		for (i = 0, len = type.instvar_sids.length; i < len; i++)
		{
			if (type.instvar_sids[i] === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.getBehaviorIndexBySid = function (inst, sid_)
	{
		var i, len;
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].type.sid === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.loadInstanceFromJSON = function(inst, o, state_only)
	{
		var p, i, len, iv, oivs, world, fxindex, obehs, behindex;
		var oldlayer;
		var type = inst.type;
		var plugin = type.plugin;
		if (state_only)
		{
			if (!o["c2"])
				return;
		}
		else
			inst.uid = o["uid"];
		if (o["ex"])
			inst.extra = o["ex"];
		else
			cr.wipe(inst.extra);
		oivs = o["ivs"];
		if (oivs)
		{
			for (p in oivs)
			{
				if (oivs.hasOwnProperty(p))
				{
					iv = this.getInstanceVarIndexBySid(type, parseInt(p, 10));
					if (iv < 0 || iv >= inst.instance_vars.length)
						continue;		// must've gone missing
					inst.instance_vars[iv] = oivs[p];
				}
			}
		}
		if (plugin.is_world)
		{
			world = o["w"];
			if (inst.layer.sid !== world["l"])
			{
				oldlayer = inst.layer;
				inst.layer = this.running_layout.getLayerBySid(world["l"]);
				if (inst.layer)
				{
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
					cr.arrayFindRemove(oldlayer.instances, inst);
					oldlayer.zindices_stale = true;
				}
				else
				{
					inst.layer = oldlayer;
					this.DestroyInstance(inst);
				}
			}
			inst.x = world["x"];
			inst.y = world["y"];
			inst.width = world["w"];
			inst.height = world["h"];
			inst.zindex = world["zi"];
			inst.angle = world.hasOwnProperty("a") ? world["a"] : 0;
			inst.opacity = world.hasOwnProperty("o") ? world["o"] : 1;
			inst.hotspotX = world.hasOwnProperty("hX") ? world["hX"] : 0.5;
			inst.hotspotY = world.hasOwnProperty("hY") ? world["hY"] : 0.5;
			inst.visible = world.hasOwnProperty("v") ? world["v"] : true;
			inst.collisionsEnabled = world.hasOwnProperty("ce") ? world["ce"] : true;
			inst.my_timescale = world.hasOwnProperty("mts") ? world["mts"] : -1;
			inst.blend_mode = world.hasOwnProperty("bm") ? world["bm"] : 0;;
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			inst.set_bbox_changed();
			if (world.hasOwnProperty("fx"))
			{
				for (i = 0, len = world["fx"].length; i < len; i++)
				{
					fxindex = type.getEffectIndexByName(world["fx"][i]["name"]);
					if (fxindex < 0)
						continue;		// must've gone missing
					inst.active_effect_flags[fxindex] = world["fx"][i]["active"];
					inst.effect_params[fxindex] = world["fx"][i]["params"];
				}
			}
			inst.updateActiveEffects();
		}
		obehs = o["behs"];
		if (obehs)
		{
			for (p in obehs)
			{
				if (obehs.hasOwnProperty(p))
				{
					behindex = this.getBehaviorIndexBySid(inst, parseInt(p, 10));
					if (behindex < 0)
						continue;		// must've gone missing
					inst.behavior_insts[behindex].loadFromJSON(obehs[p]);
				}
			}
		}
		if (o["data"])
			inst.loadFromJSON(o["data"]);
	};
	cr.runtime = Runtime;
	cr.createRuntime = function (canvasid)
	{
		return new Runtime(document.getElementById(canvasid));
	};
	cr.createDCRuntime = function (w, h)
	{
		return new Runtime({ "dc": true, "width": w, "height": h });
	};
	window["cr_createRuntime"] = cr.createRuntime;
	window["cr_createDCRuntime"] = cr.createDCRuntime;
	window["createCocoonJSRuntime"] = function ()
	{
		window["c2cocoonjs"] = true;
		var canvas = document.createElement("screencanvas") || document.createElement("canvas");
		canvas.screencanvas = true;
		document.body.appendChild(canvas);
		var rt = new Runtime(canvas);
		window["c2runtime"] = rt;
		window.addEventListener("orientationchange", function () {
			window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		});
		window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		return rt;
	};
	window["createEjectaRuntime"] = function ()
	{
		var canvas = document.getElementById("canvas");
		var rt = new Runtime(canvas);
		window["c2runtime"] = rt;
		window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		return rt;
	};
}());
window["cr_getC2Runtime"] = function()
{
	var canvas = document.getElementById("c2canvas");
	if (canvas)
		return canvas["c2runtime"];
	else if (window["c2runtime"])
		return window["c2runtime"];
	else
		return null;
}
window["cr_sizeCanvas"] = function(w, h)
{
	if (w === 0 || h === 0)
		return;
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSize"](w, h);
}
window["cr_setSuspended"] = function(s)
{
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSuspended"](s);
}
;
(function()
{
	function Layout(runtime, m)
	{
		this.runtime = runtime;
		this.event_sheet = null;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		this.scale = 1.0;
		this.angle = 0;
		this.first_visit = true;
		this.name = m[0];
		this.width = m[1];
		this.height = m[2];
		this.unbounded_scrolling = m[3];
		this.sheetname = m[4];
		this.sid = m[5];
		var lm = m[6];
		var i, len;
		this.layers = [];
		this.initial_types = [];
		for (i = 0, len = lm.length; i < len; i++)
		{
			var layer = new cr.layer(this, lm[i]);
			layer.number = i;
			cr.seal(layer);
			this.layers.push(layer);
		}
		var im = m[7];
		this.initial_nonworld = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_nonworld.push(inst);
			if (this.initial_types.indexOf(type) === -1)
				this.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[8].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[8][i][0],
				name: m[8][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[8][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
		this.persist_data = {};
	};
	Layout.prototype.saveObjectToPersist = function (inst)
	{
		var sidStr = inst.type.sid.toString();
		if (!this.persist_data.hasOwnProperty(sidStr))
			this.persist_data[sidStr] = [];
		var type_persist = this.persist_data[sidStr];
		type_persist.push(this.runtime.saveInstanceToJSON(inst));
	};
	Layout.prototype.hasOpaqueBottomLayer = function ()
	{
		var layer = this.layers[0];
		return !layer.transparent && layer.opacity === 1.0 && !layer.forceOwnTexture && layer.visible;
	};
	Layout.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layout.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	var created_instances = [];
	function sort_by_zindex(a, b)
	{
		return a.zindex - b.zindex;
	};
	var first_layout = true;
	Layout.prototype.startRunning = function ()
	{
		if (this.sheetname)
		{
			this.event_sheet = this.runtime.eventsheets[this.sheetname];
;
			this.event_sheet.updateDeepIncludes();
		}
		this.runtime.running_layout = this;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		var i, k, len, lenk, type, type_instances, inst, iid, t, s, p, q, type_data, layer;
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.is_family)
				continue;		// instances are only transferred for their real type
			type_instances = type.instances;
			for (k = 0, lenk = type_instances.length; k < lenk; k++)
			{
				inst = type_instances[k];
				if (inst.layer)
				{
					var num = inst.layer.number;
					if (num >= this.layers.length)
						num = this.layers.length - 1;
					inst.layer = this.layers[num];
					if (inst.layer.instances.indexOf(inst) === -1)
						inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
				}
			}
		}
		if (!first_layout)
		{
			for (i = 0, len = this.layers.length; i < len; ++i)
			{
				this.layers[i].instances.sort(sort_by_zindex);
			}
		}
		var layer;
		created_instances.length = 0;
		this.boundScrolling();
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			layer.createInitialInstances();		// fills created_instances
			layer.disableAngle = true;
			var px = layer.canvasToLayer(0, 0, true, true);
			var py = layer.canvasToLayer(0, 0, false, true);
			layer.disableAngle = false;
			if (this.runtime.pixel_rounding)
			{
				px = Math.round(px);
				py = Math.round(py);
			}
			layer.rotateViewport(px, py, null);
		}
		var uids_changed = false;
		if (!this.first_visit)
		{
			for (p in this.persist_data)
			{
				if (this.persist_data.hasOwnProperty(p))
				{
					type = this.runtime.getObjectTypeBySid(parseInt(p, 10));
					if (!type || type.is_family || !this.runtime.typeHasPersistBehavior(type))
						continue;
					type_data = this.persist_data[p];
					for (i = 0, len = type_data.length; i < len; i++)
					{
						layer = null;
						if (type.plugin.is_world)
						{
							layer = this.getLayerBySid(type_data[i]["w"]["l"]);
							if (!layer)
								continue;
						}
						inst = this.runtime.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
						this.runtime.loadInstanceFromJSON(inst, type_data[i]);
						uids_changed = true;
						created_instances.push(inst);
					}
					type_data.length = 0;
				}
			}
			for (i = 0, len = this.layers.length; i < len; i++)
			{
				this.layers[i].instances.sort(sort_by_zindex);
				this.layers[i].zindices_stale = true;		// in case of duplicates/holes
			}
		}
		if (uids_changed)
		{
			this.runtime.ClearDeathRow();
			this.runtime.refreshUidMap();
		}
		for (i = 0; i < created_instances.length; i++)
		{
			inst = created_instances[i];
			if (!inst.type.is_contained)
				continue;
			iid = inst.get_iid();
			for (k = 0, lenk = inst.type.container.length; k < lenk; k++)
			{
				t = inst.type.container[k];
				if (inst.type === t)
					continue;
				if (t.instances.length > iid)
					inst.siblings.push(t.instances[iid]);
				else
				{
					if (!t.default_instance)
					{
					}
					else
					{
						s = this.runtime.createInstanceFromInit(t.default_instance, inst.layer, true, inst.x, inst.y, true);
						this.runtime.ClearDeathRow();
						t.updateIIDs();
						inst.siblings.push(s);
						created_instances.push(s);		// come back around and link up its own instances too
					}
				}
			}
		}
		for (i = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			inst = this.runtime.createInstanceFromInit(this.initial_nonworld[i], null, true);
;
		}
		this.runtime.changelayout = null;
		this.runtime.ClearDeathRow();
		if (this.runtime.ctx && !this.runtime.isDomFree)
		{
			for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
			{
				t = this.runtime.types_by_index[i];
				if (t.is_family || !t.instances.length || !t.preloadCanvas2D)
					continue;
				t.preloadCanvas2D(this.runtime.ctx);
			}
		}
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout start: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		for (i = 0, len = created_instances.length; i < len; i++)
		{
			inst = created_instances[i];
			this.runtime.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnCreated, inst);
		}
		created_instances.length = 0;
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutStart, null);
		this.first_visit = false;
	};
	Layout.prototype.createGlobalNonWorlds = function ()
	{
		var i, k, len, initial_inst, inst, type;
		for (i = 0, k = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			initial_inst = this.initial_nonworld[i];
			type = this.runtime.types_by_index[initial_inst[1]];
			if (type.global)
				inst = this.runtime.createInstanceFromInit(initial_inst, null, true);
			else
			{
				this.initial_nonworld[k] = initial_inst;
				k++;
			}
		}
		this.initial_nonworld.length = k;
	};
	Layout.prototype.stopRunning = function ()
	{
;
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout end: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutEnd, null);
		this.runtime.system.waits.length = 0;
		var i, leni, j, lenj;
		var layer_instances, inst, type;
		for (i = 0, leni = this.layers.length; i < leni; i++)
		{
			this.layers[i].updateZIndices();
			layer_instances = this.layers[i].instances;
			for (j = 0, lenj = layer_instances.length; j < lenj; j++)
			{
				inst = layer_instances[j];
				if (!inst.type.global)
				{
					if (this.runtime.typeHasPersistBehavior(inst.type))
						this.saveObjectToPersist(inst);
				}
			}
		}
		for (i = 0, leni = this.layers.length; i < leni; i++)
		{
			layer_instances = this.layers[i].instances;
			for (j = 0, lenj = layer_instances.length; j < lenj; j++)
			{
				inst = layer_instances[j];
				if (!inst.type.global)
				{
					this.runtime.DestroyInstance(inst);
				}
			}
			this.runtime.ClearDeathRow();
			layer_instances.length = 0;
			this.layers[i].zindices_stale = true;
		}
		for (i = 0, leni = this.runtime.types_by_index.length; i < leni; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.global || type.plugin.is_world || type.plugin.singleglobal || type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
				this.runtime.DestroyInstance(type.instances[j]);
			this.runtime.ClearDeathRow();
		}
		first_layout = false;
	};
	Layout.prototype.draw = function (ctx)
	{
		var layout_canvas;
		var layout_ctx = ctx;
		var ctx_changed = false;
		var render_offscreen = !this.runtime.fullscreenScalingQuality;
		if (render_offscreen)
		{
			if (!this.runtime.layout_canvas)
			{
				this.runtime.layout_canvas = document.createElement("canvas");
				layout_canvas = this.runtime.layout_canvas;
				layout_canvas.width = this.runtime.draw_width;
				layout_canvas.height = this.runtime.draw_height;
				this.runtime.layout_ctx = layout_canvas.getContext("2d");
				ctx_changed = true;
			}
			layout_canvas = this.runtime.layout_canvas;
			layout_ctx = this.runtime.layout_ctx;
			if (layout_canvas.width !== this.runtime.draw_width)
			{
				layout_canvas.width = this.runtime.draw_width;
				ctx_changed = true;
			}
			if (layout_canvas.height !== this.runtime.draw_height)
			{
				layout_canvas.height = this.runtime.draw_height;
				ctx_changed = true;
			}
			if (ctx_changed)
			{
				layout_ctx["webkitImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["mozImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["msImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["imageSmoothingEnabled"] = this.runtime.linearSampling;
			}
		}
		layout_ctx.globalAlpha = 1;
		layout_ctx.globalCompositeOperation = "source-over";
		if (this.runtime.alphaBackground && !this.hasOpaqueBottomLayer())
			layout_ctx.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		var i, len, l;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.visible && l.opacity > 0 && l.blend_mode !== 11)
				l.draw(layout_ctx);
		}
		if (render_offscreen)
		{
			ctx.drawImage(layout_canvas, 0, 0, this.runtime.width, this.runtime.height);
		}
	};
	Layout.prototype.drawGL = function (glw)
	{
		var render_to_texture = (this.active_effect_types.length > 0 ||
								 this.runtime.uses_background_blending ||
								 !this.runtime.fullscreenScalingQuality);
		if (render_to_texture)
		{
			if (!this.runtime.layout_tex)
			{
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			if (this.runtime.layout_tex.c2width !== this.runtime.draw_width || this.runtime.layout_tex.c2height !== this.runtime.draw_height)
			{
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layout_tex);
			if (!this.runtime.fullscreenScalingQuality)
			{
				glw.setSize(this.runtime.draw_width, this.runtime.draw_height);
			}
		}
		else
		{
			if (this.runtime.layout_tex)
			{
				glw.setRenderingToTexture(null);
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = null;
			}
		}
		if (this.runtime.alphaBackground && !this.hasOpaqueBottomLayer())
			glw.clear(0, 0, 0, 0);
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].visible && this.layers[i].opacity > 0)
				this.layers[i].drawGL(glw);
		}
		if (render_to_texture)
		{
			if (this.active_effect_types.length === 0 ||
				(this.active_effect_types.length === 1 && this.runtime.fullscreenScalingQuality))
			{
				if (this.active_effect_types.length === 1)
				{
					var etindex = this.active_effect_types[0].index;
					glw.switchProgram(this.active_effect_types[0].shaderindex);
					glw.setProgramParameters(null,								// backTex
											 1.0 / this.runtime.draw_width,		// pixelWidth
											 1.0 / this.runtime.draw_height,	// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.scale,						// layerScale
											 this.angle,						// layerAngle
											 0.0, 0.0,							// viewOrigin
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(this.active_effect_types[0].shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				if (!this.runtime.fullscreenScalingQuality)
				{
					glw.setSize(this.runtime.width, this.runtime.height);
				}
				glw.setRenderingToTexture(null);				// to backbuffer
				glw.setOpacity(1);
				glw.setTexture(this.runtime.layout_tex);
				glw.setAlphaBlend();
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.width / 2;
				var halfh = this.runtime.height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.renderEffectChain(glw, null, null, null);
			}
		}
	};
	Layout.prototype.getRenderTarget = function()
	{
		return (this.active_effect_types.length > 0 ||
				this.runtime.uses_background_blending ||
				!this.runtime.fullscreenScalingQuality) ? this.runtime.layout_tex : null;
	};
	Layout.prototype.getMinLayerScale = function ()
	{
		var m = this.layers[0].getScale();
		var i, len, l;
		for (i = 1, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.parallaxX === 0 && l.parallaxY === 0)
				continue;
			if (l.getScale() < m)
				m = l.getScale();
		}
		return m;
	};
	Layout.prototype.scrollToX = function (x)
	{
		if (!this.unbounded_scrolling)
		{
			var widthBoundary = (this.runtime.draw_width * (1 / this.getMinLayerScale()) / 2);
			if (x > this.width - widthBoundary)
				x = this.width - widthBoundary;
			if (x < widthBoundary)
				x = widthBoundary;
		}
		if (this.scrollX !== x)
		{
			this.scrollX = x;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.scrollToY = function (y)
	{
		if (!this.unbounded_scrolling)
		{
			var heightBoundary = (this.runtime.draw_height * (1 / this.getMinLayerScale()) / 2);
			if (y > this.height - heightBoundary)
				y = this.height - heightBoundary;
			if (y < heightBoundary)
				y = heightBoundary;
		}
		if (this.scrollY !== y)
		{
			this.scrollY = y;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.boundScrolling = function ()
	{
		this.scrollToX(this.scrollX);
		this.scrollToY(this.scrollY);
	};
	Layout.prototype.renderEffectChain = function (glw, layer, inst, rendertarget)
	{
		var active_effect_types = inst ?
							inst.active_effect_types :
							layer ?
								layer.active_effect_types :
								this.active_effect_types;
		var layerScale = 1, layerAngle = 0, viewOriginLeft = 0, viewOriginTop = 0;
		if (inst)
		{
			layerScale = inst.layer.getScale();
			layerAngle = inst.layer.getAngle();
			viewOriginLeft = inst.layer.viewLeft;
			viewOriginTop = inst.layer.viewTop;
		}
		else if (layer)
		{
			layerScale = layer.getScale();
			layerAngle = layer.getAngle();
			viewOriginLeft = layer.viewLeft;
			viewOriginTop = layer.viewTop;
		}
		var fx_tex = this.runtime.fx_tex;
		var i, len, last, temp, fx_index = 0, other_fx_index = 1;
		var y, h;
		var windowWidth = this.runtime.draw_width;
		var windowHeight = this.runtime.draw_height;
		var halfw = windowWidth / 2;
		var halfh = windowHeight / 2;
		var rcTex = layer ? layer.rcTex : this.rcTex;
		var rcTex2 = layer ? layer.rcTex2 : this.rcTex2;
		var screenleft = 0, clearleft = 0;
		var screentop = 0, cleartop = 0;
		var screenright = windowWidth, clearright = windowWidth;
		var screenbottom = windowHeight, clearbottom = windowHeight;
		var boxExtendHorizontal = 0;
		var boxExtendVertical = 0;
		var inst_layer_angle = inst ? inst.layer.getAngle() : 0;
		if (inst)
		{
			for (i = 0, len = active_effect_types.length; i < len; i++)
			{
				boxExtendHorizontal += glw.getProgramBoxExtendHorizontal(active_effect_types[i].shaderindex);
				boxExtendVertical += glw.getProgramBoxExtendVertical(active_effect_types[i].shaderindex);
			}
			var bbox = inst.bbox;
			screenleft = layer.layerToCanvas(bbox.left, bbox.top, true, true);
			screentop = layer.layerToCanvas(bbox.left, bbox.top, false, true);
			screenright = layer.layerToCanvas(bbox.right, bbox.bottom, true, true);
			screenbottom = layer.layerToCanvas(bbox.right, bbox.bottom, false, true);
			if (inst_layer_angle !== 0)
			{
				var screentrx = layer.layerToCanvas(bbox.right, bbox.top, true, true);
				var screentry = layer.layerToCanvas(bbox.right, bbox.top, false, true);
				var screenblx = layer.layerToCanvas(bbox.left, bbox.bottom, true, true);
				var screenbly = layer.layerToCanvas(bbox.left, bbox.bottom, false, true);
				temp = Math.min(screenleft, screenright, screentrx, screenblx);
				screenright = Math.max(screenleft, screenright, screentrx, screenblx);
				screenleft = temp;
				temp = Math.min(screentop, screenbottom, screentry, screenbly);
				screenbottom = Math.max(screentop, screenbottom, screentry, screenbly);
				screentop = temp;
			}
			screenleft -= boxExtendHorizontal;
			screentop -= boxExtendVertical;
			screenright += boxExtendHorizontal;
			screenbottom += boxExtendVertical;
			rcTex2.left = screenleft / windowWidth;
			rcTex2.top = 1 - screentop / windowHeight;
			rcTex2.right = screenright / windowWidth;
			rcTex2.bottom = 1 - screenbottom / windowHeight;
			clearleft = screenleft = cr.floor(screenleft);
			cleartop = screentop = cr.floor(screentop);
			clearright = screenright = cr.ceil(screenright);
			clearbottom = screenbottom = cr.ceil(screenbottom);
			clearleft -= boxExtendHorizontal;
			cleartop -= boxExtendVertical;
			clearright += boxExtendHorizontal;
			clearbottom += boxExtendVertical;
			if (screenleft < 0)					screenleft = 0;
			if (screentop < 0)					screentop = 0;
			if (screenright > windowWidth)		screenright = windowWidth;
			if (screenbottom > windowHeight)	screenbottom = windowHeight;
			if (clearleft < 0)					clearleft = 0;
			if (cleartop < 0)					cleartop = 0;
			if (clearright > windowWidth)		clearright = windowWidth;
			if (clearbottom > windowHeight)		clearbottom = windowHeight;
			rcTex.left = screenleft / windowWidth;
			rcTex.top = 1 - screentop / windowHeight;
			rcTex.right = screenright / windowWidth;
			rcTex.bottom = 1 - screenbottom / windowHeight;
		}
		else
		{
			rcTex.left = rcTex2.left = 0;
			rcTex.top = rcTex2.top = 0;
			rcTex.right = rcTex2.right = 1;
			rcTex.bottom = rcTex2.bottom = 1;
		}
		var pre_draw = (inst && (((inst.angle || inst_layer_angle) && glw.programUsesDest(active_effect_types[0].shaderindex)) || boxExtendHorizontal !== 0 || boxExtendVertical !== 0 || inst.opacity !== 1 || inst.type.plugin.must_predraw)) || (layer && !inst && layer.opacity !== 1);
		glw.setAlphaBlend();
		if (pre_draw)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(0);
			glw.setRenderingToTexture(fx_tex[fx_index]);
			h = clearbottom - cleartop;
			y = (windowHeight - cleartop) - h;
			glw.clearRect(clearleft, y, clearright - clearleft, h);
			if (inst)
			{
				inst.drawGL(glw);
			}
			else
			{
				glw.setTexture(this.runtime.layer_tex);
				glw.setOpacity(layer.opacity);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			}
			rcTex2.left = rcTex2.top = 0;
			rcTex2.right = rcTex2.bottom = 1;
			if (inst)
			{
				temp = rcTex.top;
				rcTex.top = rcTex.bottom;
				rcTex.bottom = temp;
			}
			fx_index = 1;
			other_fx_index = 0;
		}
		glw.setOpacity(1);
		var last = active_effect_types.length - 1;
		var post_draw = glw.programUsesCrossSampling(active_effect_types[last].shaderindex) ||
						(!layer && !inst && !this.runtime.fullscreenScalingQuality);
		var etindex = 0;
		for (i = 0, len = active_effect_types.length; i < len; i++)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(active_effect_types[i].shaderindex);
			etindex = active_effect_types[i].index;
			if (glw.programIsAnimated(active_effect_types[i].shaderindex))
				this.runtime.redraw = true;
			if (i == 0 && !pre_draw)
			{
				glw.setRenderingToTexture(fx_tex[fx_index]);
				h = clearbottom - cleartop;
				y = (windowHeight - cleartop) - h;
				glw.clearRect(clearleft, y, clearright - clearleft, h);
				if (inst)
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / inst.width,				// pixelWidth
											 1.0 / inst.height,				// pixelHeight
											 rcTex2.left, rcTex2.top,		// destStart
											 rcTex2.right, rcTex2.bottom,	// destEnd
											 layerScale,
											 layerAngle,
											 viewOriginLeft, viewOriginTop,
											 inst.effect_params[etindex]);	// fx params
					inst.drawGL(glw);
				}
				else
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / windowWidth,				// pixelWidth
											 1.0 / windowHeight,			// pixelHeight
											 0.0, 0.0,						// destStart
											 1.0, 1.0,						// destEnd
											 layerScale,
											 layerAngle,
											 viewOriginLeft, viewOriginTop,
											 layer ?						// fx params
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
					glw.setTexture(layer ? this.runtime.layer_tex : this.runtime.layout_tex);
					glw.resetModelView();
					glw.translate(-halfw, -halfh);
					glw.updateModelView();
					glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				}
				rcTex2.left = rcTex2.top = 0;
				rcTex2.right = rcTex2.bottom = 1;
				if (inst && !post_draw)
				{
					temp = screenbottom;
					screenbottom = screentop;
					screentop = temp;
				}
			}
			else
			{
				glw.setProgramParameters(rendertarget,						// backTex
										 1.0 / windowWidth,					// pixelWidth
										 1.0 / windowHeight,				// pixelHeight
										 rcTex2.left, rcTex2.top,			// destStart
										 rcTex2.right, rcTex2.bottom,		// destEnd
										 layerScale,
										 layerAngle,
										 viewOriginLeft, viewOriginTop,
										 inst ?								// fx params
											inst.effect_params[etindex] :
											layer ?
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
				glw.setTexture(null);
				if (i === last && !post_draw)
				{
					if (inst)
						glw.setBlend(inst.srcBlend, inst.destBlend);
					else if (layer)
						glw.setBlend(layer.srcBlend, layer.destBlend);
					glw.setRenderingToTexture(rendertarget);
				}
				else
				{
					glw.setRenderingToTexture(fx_tex[fx_index]);
					h = clearbottom - cleartop;
					y = (windowHeight - cleartop) - h;
					glw.clearRect(clearleft, y, clearright - clearleft, h);
				}
				glw.setTexture(fx_tex[other_fx_index]);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				if (i === last && !post_draw)
					glw.setTexture(null);
			}
			fx_index = (fx_index === 0 ? 1 : 0);
			other_fx_index = (fx_index === 0 ? 1 : 0);		// will be opposite to fx_index since it was just assigned
		}
		if (post_draw)
		{
			glw.switchProgram(0);
			if (inst)
				glw.setBlend(inst.srcBlend, inst.destBlend);
			else if (layer)
				glw.setBlend(layer.srcBlend, layer.destBlend);
			else
			{
				if (!this.runtime.fullscreenScalingQuality)
				{
					glw.setSize(this.runtime.width, this.runtime.height);
					halfw = this.runtime.width / 2;
					halfh = this.runtime.height / 2;
					screenleft = 0;
					screentop = 0;
					screenright = this.runtime.width;
					screenbottom = this.runtime.height;
				}
			}
			glw.setRenderingToTexture(rendertarget);
			glw.setTexture(fx_tex[other_fx_index]);
			glw.resetModelView();
			glw.translate(-halfw, -halfh);
			glw.updateModelView();
			if (inst && active_effect_types.length === 1 && !pre_draw)
				glw.quadTex(screenleft, screentop, screenright, screentop, screenright, screenbottom, screenleft, screenbottom, rcTex);
			else
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			glw.setTexture(null);
		}
	};
	Layout.prototype.getLayerBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].sid === sid_)
				return this.layers[i];
		}
		return null;
	};
	Layout.prototype.saveToJSON = function ()
	{
		var i, len, layer, et;
		var o = {
			"sx": this.scrollX,
			"sy": this.scrollY,
			"s": this.scale,
			"a": this.angle,
			"w": this.width,
			"h": this.height,
			"fv": this.first_visit,			// added r127
			"persist": this.persist_data,
			"fx": [],
			"layers": {}
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			o["layers"][layer.sid.toString()] = layer.saveToJSON();
		}
		return o;
	};
	Layout.prototype.loadFromJSON = function (o)
	{
		var i, len, fx, p, layer;
		this.scrollX = o["sx"];
		this.scrollY = o["sy"];
		this.scale = o["s"];
		this.angle = o["a"];
		this.width = o["w"];
		this.height = o["h"];
		this.persist_data = o["persist"];
		if (typeof o["fv"] !== "undefined")
			this.first_visit = o["fv"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		var olayers = o["layers"];
		for (p in olayers)
		{
			if (olayers.hasOwnProperty(p))
			{
				layer = this.getLayerBySid(parseInt(p, 10));
				if (!layer)
					continue;		// must've gone missing
				layer.loadFromJSON(olayers[p]);
			}
		}
	};
	cr.layout = Layout;
	function Layer(layout, m)
	{
		this.layout = layout;
		this.runtime = layout.runtime;
		this.instances = [];        // running instances
		this.scale = 1.0;
		this.angle = 0;
		this.disableAngle = false;
		this.tmprect = new cr.rect(0, 0, 0, 0);
		this.tmpquad = new cr.quad();
		this.viewLeft = 0;
		this.viewRight = 0;
		this.viewTop = 0;
		this.viewBottom = 0;
		this.zindices_stale = false;
		this.name = m[0];
		this.index = m[1];
		this.sid = m[2];
		this.visible = m[3];		// initially visible
		this.background_color = m[4];
		this.transparent = m[5];
		this.parallaxX = m[6];
		this.parallaxY = m[7];
		this.opacity = m[8];
		this.forceOwnTexture = m[9];
		this.zoomRate = m[10];
		this.blend_mode = m[11];
		this.effect_fallback = m[12];
		this.compositeOp = "source-over";
		this.srcBlend = 0;
		this.destBlend = 0;
		this.render_offscreen = false;
		var im = m[13];
		var i, len;
		this.initial_instances = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
			{
				type.default_instance = inst;
				type.default_layerindex = this.index;
			}
			this.initial_instances.push(inst);
			if (this.layout.initial_types.indexOf(type) === -1)
				this.layout.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[14].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[14][i][0],
				name: m[14][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[14][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
	};
	Layer.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layer.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	Layer.prototype.createInitialInstances = function ()
	{
		var i, k, len, inst, initial_inst, type, keep, hasPersistBehavior;
		for (i = 0, k = 0, len = this.initial_instances.length; i < len; i++)
		{
			initial_inst = this.initial_instances[i];
			type = this.runtime.types_by_index[initial_inst[1]];
;
			hasPersistBehavior = this.runtime.typeHasPersistBehavior(type);
			keep = true;
			if (!hasPersistBehavior || this.layout.first_visit)
			{
				inst = this.runtime.createInstanceFromInit(initial_inst, this, true);
;
				created_instances.push(inst);
				if (inst.type.global)
					keep = false;
			}
			if (keep)
			{
				this.initial_instances[k] = this.initial_instances[i];
				k++;
			}
		}
		this.initial_instances.length = k;
		this.runtime.ClearDeathRow();		// flushes creation row so IIDs will be correct
		if (!this.runtime.glwrap && this.effect_types.length)	// no WebGL renderer and shaders used
			this.blend_mode = this.effect_fallback;				// use fallback blend mode
		this.compositeOp = cr.effectToCompositeOp(this.blend_mode);
		if (this.runtime.gl)
			cr.setGLBlend(this, this.blend_mode, this.runtime.gl);
	};
	Layer.prototype.updateZIndices = function ()
	{
		if (!this.zindices_stale)
			return;
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
;
;
			this.instances[i].zindex = i;
		}
		this.zindices_stale = false;
	};
	Layer.prototype.getScale = function (include_aspect)
	{
		return this.getNormalScale() * (this.runtime.fullscreenScalingQuality || include_aspect ? this.runtime.aspect_scale : 1);
	};
	Layer.prototype.getNormalScale = function ()
	{
		return ((this.scale * this.layout.scale) - 1) * this.zoomRate + 1;
	};
	Layer.prototype.getAngle = function ()
	{
		if (this.disableAngle)
			return 0;
		return cr.clamp_angle(this.layout.angle + this.angle);
	};
	Layer.prototype.draw = function (ctx)
	{
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.blend_mode !== 0);
		var layer_canvas = this.runtime.canvas;
		var layer_ctx = ctx;
		var ctx_changed = false;
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_canvas)
			{
				this.runtime.layer_canvas = document.createElement("canvas");
;
				layer_canvas = this.runtime.layer_canvas;
				layer_canvas.width = this.runtime.draw_width;
				layer_canvas.height = this.runtime.draw_height;
				this.runtime.layer_ctx = layer_canvas.getContext("2d");
;
				ctx_changed = true;
			}
			layer_canvas = this.runtime.layer_canvas;
			layer_ctx = this.runtime.layer_ctx;
			if (layer_canvas.width !== this.runtime.draw_width)
			{
				layer_canvas.width = this.runtime.draw_width;
				ctx_changed = true;
			}
			if (layer_canvas.height !== this.runtime.draw_height)
			{
				layer_canvas.height = this.runtime.draw_height;
				ctx_changed = true;
			}
			if (ctx_changed)
			{
				layer_ctx["webkitImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["mozImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["msImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["imageSmoothingEnabled"] = this.runtime.linearSampling;
			}
			if (this.transparent)
				layer_ctx.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		}
		layer_ctx.globalAlpha = 1;
		layer_ctx.globalCompositeOperation = "source-over";
		if (!this.transparent)
		{
			layer_ctx.fillStyle = "rgb(" + this.background_color[0] + "," + this.background_color[1] + "," + this.background_color[2] + ")";
			layer_ctx.fillRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		}
		layer_ctx.save();
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true, true);
		var py = this.canvasToLayer(0, 0, false, true);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = Math.round(px);
			py = Math.round(py);
		}
		this.rotateViewport(px, py, layer_ctx);
		var myscale = this.getScale();
		layer_ctx.scale(myscale, myscale);
		layer_ctx.translate(-px, -py);
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			layer_ctx.globalCompositeOperation = inst.compositeOp;
			inst.draw(layer_ctx);
		}
		layer_ctx.restore();
		if (this.render_offscreen)
		{
			ctx.globalCompositeOperation = this.compositeOp;
			ctx.globalAlpha = this.opacity;
			ctx.drawImage(layer_canvas, 0, 0);
		}
	};
	Layer.prototype.rotateViewport = function (px, py, ctx)
	{
		var myscale = this.getScale();
		this.viewLeft = px;
		this.viewTop = py;
		this.viewRight = px + (this.runtime.draw_width * (1 / myscale));
		this.viewBottom = py + (this.runtime.draw_height * (1 / myscale));
		var myAngle = this.getAngle();
		if (myAngle !== 0)
		{
			if (ctx)
			{
				ctx.translate(this.runtime.draw_width / 2, this.runtime.draw_height / 2);
				ctx.rotate(-myAngle);
				ctx.translate(this.runtime.draw_width / -2, this.runtime.draw_height / -2);
			}
			this.tmprect.set(this.viewLeft, this.viewTop, this.viewRight, this.viewBottom);
			this.tmprect.offset((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
			this.tmpquad.set_from_rotated_rect(this.tmprect, myAngle);
			this.tmpquad.bounding_box(this.tmprect);
			this.tmprect.offset((this.viewLeft + this.viewRight) / 2, (this.viewTop + this.viewBottom) / 2);
			this.viewLeft = this.tmprect.left;
			this.viewTop = this.tmprect.top;
			this.viewRight = this.tmprect.right;
			this.viewBottom = this.tmprect.bottom;
		}
	}
	Layer.prototype.drawGL = function (glw)
	{
		var windowWidth = this.runtime.draw_width;
		var windowHeight = this.runtime.draw_height;
		var shaderindex = 0;
		var etindex = 0;
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.active_effect_types.length > 0 || this.blend_mode !== 0);
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_tex)
			{
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			if (this.runtime.layer_tex.c2width !== this.runtime.draw_width || this.runtime.layer_tex.c2height !== this.runtime.draw_height)
			{
				glw.deleteTexture(this.runtime.layer_tex);
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layer_tex);
			if (this.transparent)
				glw.clear(0, 0, 0, 0);
		}
		if (!this.transparent)
		{
			glw.clear(this.background_color[0] / 255, this.background_color[1] / 255, this.background_color[2] / 255, 1);
		}
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true, true);
		var py = this.canvasToLayer(0, 0, false, true);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = Math.round(px);
			py = Math.round(py);
		}
		this.rotateViewport(px, py, null);
		var myscale = this.getScale();
		glw.resetModelView();
		glw.scale(myscale, myscale);
		glw.rotateZ(-this.getAngle());
		glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
		glw.updateModelView();
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			if (inst.uses_shaders)
			{
				shaderindex = inst.active_effect_types[0].shaderindex;
				etindex = inst.active_effect_types[0].index;
				if (inst.active_effect_types.length === 1 && !glw.programUsesCrossSampling(shaderindex) &&
					!glw.programExtendsBox(shaderindex) && ((!inst.angle && !inst.layer.getAngle()) || !glw.programUsesDest(shaderindex)) &&
					inst.opacity === 1 && !inst.type.plugin.must_predraw)
				{
					glw.switchProgram(shaderindex);
					glw.setBlend(inst.srcBlend, inst.destBlend);
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
					var destStartX = 0, destStartY = 0, destEndX = 0, destEndY = 0;
					if (glw.programUsesDest(shaderindex))
					{
						var bbox = inst.bbox;
						var screenleft = this.layerToCanvas(bbox.left, bbox.top, true, true);
						var screentop = this.layerToCanvas(bbox.left, bbox.top, false, true);
						var screenright = this.layerToCanvas(bbox.right, bbox.bottom, true, true);
						var screenbottom = this.layerToCanvas(bbox.right, bbox.bottom, false, true);
						destStartX = screenleft / windowWidth;
						destStartY = 1 - screentop / windowHeight;
						destEndX = screenright / windowWidth;
						destEndY = 1 - screenbottom / windowHeight;
					}
					glw.setProgramParameters(this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget(), // backTex
											 1.0 / inst.width,			// pixelWidth
											 1.0 / inst.height,			// pixelHeight
											 destStartX, destStartY,
											 destEndX, destEndY,
											 this.getScale(),
											 this.getAngle(),
											 this.viewLeft, this.viewTop,
											 inst.effect_params[etindex]);
					inst.drawGL(glw);
				}
				else
				{
					this.layout.renderEffectChain(glw, this, inst, this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget());
					glw.resetModelView();
					glw.scale(myscale, myscale);
					glw.rotateZ(-this.getAngle());
					glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
					glw.updateModelView();
				}
			}
			else
			{
				glw.switchProgram(0);		// un-set any previously set shader
				glw.setBlend(inst.srcBlend, inst.destBlend);
				inst.drawGL(glw);
			}
		}
		if (this.render_offscreen)
		{
			shaderindex = this.active_effect_types.length ? this.active_effect_types[0].shaderindex : 0;
			etindex = this.active_effect_types.length ? this.active_effect_types[0].index : 0;
			if (this.active_effect_types.length === 0 || (this.active_effect_types.length === 1 &&
				!glw.programUsesCrossSampling(shaderindex) && this.opacity === 1))
			{
				if (this.active_effect_types.length === 1)
				{
					glw.switchProgram(shaderindex);
					glw.setProgramParameters(this.layout.getRenderTarget(),		// backTex
											 1.0 / this.runtime.draw_width,		// pixelWidth
											 1.0 / this.runtime.draw_height,	// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.getScale(),					// layerScale
											 this.getAngle(),
											 this.viewLeft, this.viewTop,
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				glw.setRenderingToTexture(this.layout.getRenderTarget());
				glw.setOpacity(this.opacity);
				glw.setTexture(this.runtime.layer_tex);
				glw.setBlend(this.srcBlend, this.destBlend);
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.draw_width / 2;
				var halfh = this.runtime.draw_height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.layout.renderEffectChain(glw, this, null, this.layout.getRenderTarget());
			}
		}
	};
	Layer.prototype.canvasToLayer = function (ptx, pty, getx, using_draw_area)
	{
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina)
		{
			ptx *= multiplier;
			pty *= multiplier;
		}
		var ox = this.runtime.parallax_x_origin;
		var oy = this.runtime.parallax_y_origin;
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale(!using_draw_area);
		if (using_draw_area)
		{
			x -= (this.runtime.draw_width * invScale) / 2;
			y -= (this.runtime.draw_height * invScale) / 2;
		}
		else
		{
			x -= (this.runtime.width * invScale) / 2;
			y -= (this.runtime.height * invScale) / 2;
		}
		x += ptx * invScale;
		y += pty * invScale;
		var a = this.getAngle();
		if (a !== 0)
		{
			x -= this.layout.scrollX;
			y -= this.layout.scrollY;
			var cosa = Math.cos(a);
			var sina = Math.sin(a);
			var x_temp = (x * cosa) - (y * sina);
			y = (y * cosa) + (x * sina);
			x = x_temp;
			x += this.layout.scrollX;
			y += this.layout.scrollY;
		}
		return getx ? x : y;
	};
	Layer.prototype.layerToCanvas = function (ptx, pty, getx, using_draw_area)
	{
		var a = this.getAngle();
		if (a !== 0)
		{
			ptx -= this.layout.scrollX;
			pty -= this.layout.scrollY;
			var cosa = Math.cos(-a);
			var sina = Math.sin(-a);
			var x_temp = (ptx * cosa) - (pty * sina);
			pty = (pty * cosa) + (ptx * sina);
			ptx = x_temp;
			ptx += this.layout.scrollX;
			pty += this.layout.scrollY;
		}
		var ox = this.runtime.parallax_x_origin;
		var oy = this.runtime.parallax_y_origin;
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale(!using_draw_area);
		if (using_draw_area)
		{
			x -= (this.runtime.draw_width * invScale) / 2;
			y -= (this.runtime.draw_height * invScale) / 2;
		}
		else
		{
			x -= (this.runtime.width * invScale) / 2;
			y -= (this.runtime.height * invScale) / 2;
		}
		x = (ptx - x) / invScale;
		y = (pty - y) / invScale;
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina && !using_draw_area)
		{
			x /= multiplier;
			y /= multiplier;
		}
		return getx ? x : y;
	};
	Layer.prototype.rotatePt = function (x_, y_, getx)
	{
		if (this.getAngle() === 0)
			return getx ? x_ : y_;
		var nx = this.layerToCanvas(x_, y_, true);
		var ny = this.layerToCanvas(x_, y_, false);
		this.disableAngle = true;
		var px = this.canvasToLayer(nx, ny, true);
		var py = this.canvasToLayer(nx, ny, true);
		this.disableAngle = false;
		return getx ? px : py;
	};
	Layer.prototype.saveToJSON = function ()
	{
		var i, len, et;
		var o = {
			"s": this.scale,
			"a": this.angle,
			"vl": this.viewLeft,
			"vt": this.viewTop,
			"vr": this.viewRight,
			"vb": this.viewBottom,
			"v": this.visible,
			"bc": this.background_color,
			"t": this.transparent,
			"px": this.parallaxX,
			"py": this.parallaxY,
			"o": this.opacity,
			"zr": this.zoomRate,
			"fx": [],
			"instances": []
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		return o;
	};
	Layer.prototype.loadFromJSON = function (o)
	{
		var i, len, p, inst, fx;
		this.scale = o["s"];
		this.angle = o["a"];
		this.viewLeft = o["vl"];
		this.viewTop = o["vt"];
		this.viewRight = o["vr"];
		this.viewBottom = o["vb"];
		this.visible = o["v"];
		this.background_color = o["bc"];
		this.transparent = o["t"];
		this.parallaxX = o["px"];
		this.parallaxY = o["py"];
		this.opacity = o["o"];
		this.zoomRate = o["zr"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		this.instances.sort(sort_by_zindex);
		this.zindices_stale = true;
	};
	cr.layer = Layer;
}());
;
(function()
{
	var allUniqueSolModifiers = [];
	function testSolsMatch(arr1, arr2)
	{
		var i, len = arr1.length;
		switch (len) {
		case 0:
			return true;
		case 1:
			return arr1[0] === arr2[0];
		case 2:
			return arr1[0] === arr2[0] && arr1[1] === arr2[1];
		default:
			for (i = 0; i < len; i++)
			{
				if (arr1[i] !== arr2[i])
					return false;
			}
			return true;
		}
	};
	function solArraySorter(t1, t2)
	{
		return t1.index - t2.index;
	};
	function findMatchingSolModifier(arr)
	{
		var i, len, u, temp, subarr;
		if (arr.length === 2)
		{
			if (arr[0].index > arr[1].index)
			{
				temp = arr[0];
				arr[0] = arr[1];
				arr[1] = temp;
			}
		}
		else if (arr.length > 2)
			arr.sort(solArraySorter);		// so testSolsMatch compares in same order
		if (arr.length >= allUniqueSolModifiers.length)
			allUniqueSolModifiers.length = arr.length + 1;
		if (!allUniqueSolModifiers[arr.length])
			allUniqueSolModifiers[arr.length] = [];
		subarr = allUniqueSolModifiers[arr.length];
		for (i = 0, len = subarr.length; i < len; i++)
		{
			u = subarr[i];
			if (testSolsMatch(arr, u))
				return u;
		}
		subarr.push(arr);
		return arr;
	};
	function EventSheet(runtime, m)
	{
		this.runtime = runtime;
		this.triggers = {};
		this.fasttriggers = {};
        this.hasRun = false;
        this.includes = new cr.ObjectSet(); 	// all event sheets included by this sheet, at first-level indirection only
		this.deep_includes = [];				// all includes from this sheet recursively, in trigger order
		this.already_included_sheets = [];		// used while building deep_includes
		this.name = m[0];
		var em = m[1];		// events model
		this.events = [];       // triggers won't make it to this array
		var i, len;
		for (i = 0, len = em.length; i < len; i++)
			this.init_event(em[i], null, this.events);
	};
    EventSheet.prototype.toString = function ()
    {
        return this.name;
    };
	EventSheet.prototype.init_event = function (m, parent, nontriggers)
	{
		switch (m[0]) {
		case 0:	// event block
		{
			var block = new cr.eventblock(this, parent, m);
			cr.seal(block);
			if (block.orblock)
			{
				nontriggers.push(block);
				var i, len;
				for (i = 0, len = block.conditions.length; i < len; i++)
				{
					if (block.conditions[i].trigger)
						this.init_trigger(block, i);
				}
			}
			else
			{
				if (block.is_trigger())
					this.init_trigger(block, 0);
				else
					nontriggers.push(block);
			}
			break;
		}
		case 1: // variable
		{
			var v = new cr.eventvariable(this, parent, m);
			cr.seal(v);
			nontriggers.push(v);
			break;
		}
        case 2:	// include
        {
            var inc = new cr.eventinclude(this, parent, m);
			cr.seal(inc);
            nontriggers.push(inc);
			break;
        }
		default:
;
		}
	};
	EventSheet.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			this.events[i].postInit(i < len - 1 && this.events[i + 1].is_else_block);
		}
	};
	EventSheet.prototype.updateDeepIncludes = function ()
	{
		this.deep_includes.length = 0;
		this.already_included_sheets.length = 0;
		this.addDeepIncludes(this);
		this.already_included_sheets.length = 0;
	};
	EventSheet.prototype.addDeepIncludes = function (root_sheet)
	{
		var i, len, inc, sheet;
		var deep_includes = root_sheet.deep_includes;
		var already_included_sheets = root_sheet.already_included_sheets;
		var arr = this.includes.valuesRef();
		for (i = 0, len = arr.length; i < len; ++i)
		{
			inc = arr[i];
			sheet = inc.include_sheet;
			if (!inc.isActive() || root_sheet === sheet || already_included_sheets.indexOf(sheet) > -1)
				continue;
			already_included_sheets.push(sheet);
			sheet.addDeepIncludes(root_sheet);
			deep_includes.push(sheet);
		}
	};
	EventSheet.prototype.run = function (from_include)
	{
		if (!this.runtime.resuming_breakpoint)
		{
			this.hasRun = true;
			if (!from_include)
				this.runtime.isRunningEvents = true;
		}
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			var ev = this.events[i];
			ev.run();
				this.runtime.clearSol(ev.solModifiers);
				if (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length)
					this.runtime.ClearDeathRow();
		}
			if (!from_include)
				this.runtime.isRunningEvents = false;
	};
	function isPerformanceSensitiveTrigger(method)
	{
		if (cr.plugins_.Sprite && method === cr.plugins_.Sprite.prototype.cnds.OnFrameChanged)
		{
			return true;
		}
		return false;
	};
	EventSheet.prototype.init_trigger = function (trig, index)
	{
		if (!trig.orblock)
			this.runtime.triggers_to_postinit.push(trig);	// needs to be postInit'd later
		var i, len;
		var cnd = trig.conditions[index];
		var type_name;
		if (cnd.type)
			type_name = cnd.type.name;
		else
			type_name = "system";
		var fasttrigger = cnd.fasttrigger;
		var triggers = (fasttrigger ? this.fasttriggers : this.triggers);
		if (!triggers[type_name])
			triggers[type_name] = [];
		var obj_entry = triggers[type_name];
		var method = cnd.func;
		if (fasttrigger)
		{
			if (!cnd.parameters.length)				// no parameters
				return;
			var firstparam = cnd.parameters[0];
			if (firstparam.type !== 1 ||			// not a string param
				firstparam.expression.type !== 2)	// not a string literal node
			{
				return;
			}
			var fastevs;
			var firstvalue = firstparam.expression.value.toLowerCase();
			var i, len;
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					fastevs = obj_entry[i].evs;
					if (!fastevs[firstvalue])
						fastevs[firstvalue] = [[trig, index]];
					else
						fastevs[firstvalue].push([trig, index]);
					return;
				}
			}
			fastevs = {};
			fastevs[firstvalue] = [[trig, index]];
			obj_entry.push({ method: method, evs: fastevs });
		}
		else
		{
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					obj_entry[i].evs.push([trig, index]);
					return;
				}
			}
			if (isPerformanceSensitiveTrigger(method))
				obj_entry.unshift({ method: method, evs: [[trig, index]]});
			else
				obj_entry.push({ method: method, evs: [[trig, index]]});
		}
	};
	cr.eventsheet = EventSheet;
	function Selection(type)
	{
		this.type = type;
		this.instances = [];        // subset of picked instances
		this.else_instances = [];	// subset of unpicked instances
		this.select_all = true;
	};
	Selection.prototype.hasObjects = function ()
	{
		if (this.select_all)
			return this.type.instances.length;
		else
			return this.instances.length;
	};
	Selection.prototype.getObjects = function ()
	{
		if (this.select_all)
			return this.type.instances;
		else
			return this.instances;
	};
	/*
	Selection.prototype.ensure_picked = function (inst, skip_siblings)
	{
		var i, len;
		var orblock = inst.runtime.getCurrentEventStack().current_event.orblock;
		if (this.select_all)
		{
			this.select_all = false;
			if (orblock)
			{
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				cr.arrayFindRemove(this.else_instances, inst);
			}
			this.instances.length = 1;
			this.instances[0] = inst;
		}
		else
		{
			if (orblock)
			{
				i = this.else_instances.indexOf(inst);
				if (i !== -1)
				{
					this.instances.push(this.else_instances[i]);
					this.else_instances.splice(i, 1);
				}
			}
			else
			{
				if (this.instances.indexOf(inst) === -1)
					this.instances.push(inst);
			}
		}
		if (!skip_siblings)
		{
		}
	};
	*/
	Selection.prototype.pick_one = function (inst)
	{
		if (!inst)
			return;
		if (inst.runtime.getCurrentEventStack().current_event.orblock)
		{
			if (this.select_all)
			{
				this.instances.length = 0;
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				this.select_all = false;
			}
			var i = this.else_instances.indexOf(inst);
			if (i !== -1)
			{
				this.instances.push(this.else_instances[i]);
				this.else_instances.splice(i, 1);
			}
		}
		else
		{
			this.select_all = false;
			this.instances.length = 1;
			this.instances[0] = inst;
		}
	};
	cr.selection = Selection;
	function EventBlock(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.solModifiersIncludingParents = [];
		this.solWriterAfterCnds = false;	// block does not change SOL after running its conditions
		this.group = false;					// is group of events
		this.initially_activated = false;	// if a group, is active on startup
		this.toplevelevent = false;			// is an event block parented only by a top-level group
		this.toplevelgroup = false;			// is parented only by other groups or is top-level (i.e. not in a subevent)
		this.has_else_block = false;		// is followed by else
;
		this.conditions = [];
		this.actions = [];
		this.subevents = [];
		this.group_name = "";
		this.group = false;
		this.initially_activated = false;
		this.group_active = false;
		this.contained_includes = null;
        if (m[1])
        {
			this.group_name = m[1][1].toLowerCase();
			this.group = true;
			this.initially_activated = !!m[1][0];
			this.contained_includes = [];
			this.group_active = this.initially_activated;
			this.runtime.allGroups.push(this);
            this.runtime.groups_by_name[this.group_name] = this;
        }
		this.orblock = m[2];
		this.sid = m[4];
		if (!this.group)
			this.runtime.blocksBySid[this.sid.toString()] = this;
		var i, len;
		var cm = m[5];
		for (i = 0, len = cm.length; i < len; i++)
		{
			var cnd = new cr.condition(this, cm[i]);
			cnd.index = i;
			cr.seal(cnd);
			this.conditions.push(cnd);
			/*
			if (cnd.is_logical())
				this.is_logical = true;
			if (cnd.type && !cnd.type.plugin.singleglobal && this.cndReferences.indexOf(cnd.type) === -1)
				this.cndReferences.push(cnd.type);
			*/
			this.addSolModifier(cnd.type);
		}
		var am = m[6];
		for (i = 0, len = am.length; i < len; i++)
		{
			var act = new cr.action(this, am[i]);
			act.index = i;
			cr.seal(act);
			this.actions.push(act);
		}
		if (m.length === 8)
		{
			var em = m[7];
			for (i = 0, len = em.length; i < len; i++)
				this.sheet.init_event(em[i], this, this.subevents);
		}
		this.is_else_block = false;
		if (this.conditions.length)
		{
			this.is_else_block = (this.conditions[0].type == null && this.conditions[0].func == cr.system_object.prototype.cnds.Else);
		}
	};
	window["_c2hh_"] = "1D959B0AEB9E312A703352A9469C4528FA56871E";
	EventBlock.prototype.postInit = function (hasElse/*, prevBlock_*/)
	{
		var i, len;
		var p = this.parent;
		if (this.group)
		{
			this.toplevelgroup = true;
			while (p)
			{
				if (!p.group)
				{
					this.toplevelgroup = false;
					break;
				}
				p = p.parent;
			}
		}
		this.toplevelevent = !this.is_trigger() && (!this.parent || (this.parent.group && this.parent.toplevelgroup));
		this.has_else_block = !!hasElse;
		this.solModifiersIncludingParents = this.solModifiers.slice(0);
		p = this.parent;
		while (p)
		{
			for (i = 0, len = p.solModifiers.length; i < len; i++)
				this.addParentSolModifier(p.solModifiers[i]);
			p = p.parent;
		}
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
		this.solModifiersIncludingParents = findMatchingSolModifier(this.solModifiersIncludingParents);
		var i, len/*, s*/;
		for (i = 0, len = this.conditions.length; i < len; i++)
			this.conditions[i].postInit();
		for (i = 0, len = this.actions.length; i < len; i++)
			this.actions[i].postInit();
		for (i = 0, len = this.subevents.length; i < len; i++)
		{
			this.subevents[i].postInit(i < len - 1 && this.subevents[i + 1].is_else_block);
		}
		/*
		if (this.is_else_block && this.prev_block)
		{
			for (i = 0, len = this.prev_block.solModifiers.length; i < len; i++)
			{
				s = this.prev_block.solModifiers[i];
				if (this.solModifiers.indexOf(s) === -1)
					this.solModifiers.push(s);
			}
		}
		*/
	};
	EventBlock.prototype.setGroupActive = function (a)
	{
		if (this.group_active === !!a)
			return;		// same state
		this.group_active = !!a;
		var i, len;
		for (i = 0, len = this.contained_includes.length; i < len; ++i)
		{
			this.contained_includes[i].updateActive();
		}
		if (len > 0 && this.runtime.running_layout.event_sheet)
			this.runtime.running_layout.event_sheet.updateDeepIncludes();
	};
	function addSolModifierToList(type, arr)
	{
		var i, len, t;
		if (!type)
			return;
		if (arr.indexOf(type) === -1)
			arr.push(type);
		if (type.is_contained)
		{
			for (i = 0, len = type.container.length; i < len; i++)
			{
				t = type.container[i];
				if (type === t)
					continue;		// already handled
				if (arr.indexOf(t) === -1)
					arr.push(t);
			}
		}
	};
	EventBlock.prototype.addSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiers);
	};
	EventBlock.prototype.addParentSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiersIncludingParents);
	};
	EventBlock.prototype.setSolWriterAfterCnds = function ()
	{
		this.solWriterAfterCnds = true;
		if (this.parent)
			this.parent.setSolWriterAfterCnds();
	};
	EventBlock.prototype.is_trigger = function ()
	{
		if (!this.conditions.length)    // no conditions
			return false;
		else
			return this.conditions[0].trigger;
	};
	EventBlock.prototype.run = function ()
	{
		var i, len, any_true = false, cnd_result;
		var runtime = this.runtime;
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		var conditions = this.conditions;
			if (!this.is_else_block)
				evinfo.else_branch_ran = false;
		if (this.orblock)
		{
			if (conditions.length === 0)
				any_true = true;		// be sure to run if empty block
				evinfo.cndindex = 0
			for (len = conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (conditions[evinfo.cndindex].trigger)		// skip triggers when running OR block
					continue;
				cnd_result = conditions[evinfo.cndindex].run();
				if (cnd_result)			// make sure all conditions run and run if any were true
					any_true = true;
			}
			evinfo.last_event_true = any_true;
			if (any_true)
				this.run_actions_and_subevents();
		}
		else
		{
				evinfo.cndindex = 0
			for (len = conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				cnd_result = conditions[evinfo.cndindex].run();
				if (!cnd_result)    // condition failed
				{
					evinfo.last_event_true = false;
					if (this.toplevelevent && (!runtime.deathRow.isEmpty() || runtime.createRow.length))
						runtime.ClearDeathRow();
					return;		// bail out now
				}
			}
			evinfo.last_event_true = true;
			this.run_actions_and_subevents();
		}
		this.end_run(evinfo);
	};
	EventBlock.prototype.end_run = function (evinfo)
	{
		if (evinfo.last_event_true && this.has_else_block)
			evinfo.else_branch_ran = true;
		if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
			this.runtime.ClearDeathRow();
	};
	EventBlock.prototype.run_orblocktrigger = function (index)
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		if (this.conditions[index].run())
		{
			this.run_actions_and_subevents();
			this.runtime.getCurrentEventStack().last_event_true = true;
		}
	};
	EventBlock.prototype.run_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (evinfo.actindex = 0, len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.resume_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.run_subevents = function ()
	{
		if (!this.subevents.length)
			return;
		var i, len, subev, pushpop/*, skipped_pop = false, pop_modifiers = null*/;
		var last = this.subevents.length - 1;
			this.runtime.pushEventStack(this);
		if (this.solWriterAfterCnds)
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				subev = this.subevents[i];
					pushpop = (!this.toplevelgroup || (!this.group && i < last));
					if (pushpop)
						this.runtime.pushCopySol(subev.solModifiers);
				subev.run();
					if (pushpop)
						this.runtime.popSol(subev.solModifiers);
					else
						this.runtime.clearSol(subev.solModifiers);
			}
		}
		else
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				this.subevents[i].run();
			}
		}
			this.runtime.popEventStack();
	};
	EventBlock.prototype.run_pretrigger = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		var any_true = false;
		var i, len;
		for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
		{
;
			if (this.conditions[evinfo.cndindex].run())
				any_true = true;
			else if (!this.orblock)			// condition failed (let OR blocks run all conditions anyway)
				return false;               // bail out
		}
		return this.orblock ? any_true : true;
	};
	EventBlock.prototype.retrigger = function ()
	{
		this.runtime.execcount++;
		var prevcndindex = this.runtime.getCurrentEventStack().cndindex;
		var len;
		var evinfo = this.runtime.pushEventStack(this);
		if (!this.orblock)
		{
			for (evinfo.cndindex = prevcndindex + 1, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (!this.conditions[evinfo.cndindex].run())    // condition failed
				{
					this.runtime.popEventStack();               // moving up level of recursion
					return false;                               // bail out
				}
			}
		}
		this.run_actions_and_subevents();
		this.runtime.popEventStack();
		return true;		// ran an iteration
	};
	EventBlock.prototype.isFirstConditionOfType = function (cnd)
	{
		var cndindex = cnd.index;
		if (cndindex === 0)
			return true;
		--cndindex;
		for ( ; cndindex >= 0; --cndindex)
		{
			if (this.conditions[cndindex].type === cnd.type)
				return false;
		}
		return true;
	};
	cr.eventblock = EventBlock;
	function Condition(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.anyParamVariesPerInstance = false;
		this.func = m[1];
;
		this.trigger = (m[3] > 0);
		this.fasttrigger = (m[3] === 2);
		this.looping = m[4];
		this.inverted = m[5];
		this.isstatic = m[6];
		this.sid = m[7];
		this.runtime.cndsBySid[this.sid.toString()] = this;
		if (m[0] === -1)		// system object
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			if (this.isstatic)
				this.run = this.run_static;
			else
				this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
			if (this.block.parent)
				this.block.parent.setSolWriterAfterCnds();
		}
		if (this.fasttrigger)
			this.run = this.run_true;
		if (m.length === 10)
		{
			var i, len;
			var em = m[9];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Condition.prototype.postInit = function ()
	{
		var i, len, p;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			p = this.parameters[i];
			p.postInit();
			if (p.variesPerInstance)
				this.anyParamVariesPerInstance = true;
		}
	};
	/*
	Condition.prototype.is_logical = function ()
	{
		return !this.type || this.type.plugin.singleglobal;
	};
	*/
	Condition.prototype.run_true = function ()
	{
		return true;
	};
	Condition.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return cr.xor(this.func.apply(this.runtime.system, this.results), this.inverted);
	};
	Condition.prototype.run_static = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		var ret = this.func.apply(this.behaviortype ? this.behaviortype : this.type, this.results);
		this.type.applySolToContainer();
		return ret;
	};
	Condition.prototype.run_object = function ()
	{
		var i, j, k, leni, lenj, p, ret, met, inst, s, sol2;
		var type = this.type;
		var sol = type.getCurrentSol();
		var is_orblock = this.block.orblock && !this.trigger;		// triggers in OR blocks need to work normally
		var offset = 0;
		var is_contained = type.is_contained;
		var is_family = type.is_family;
		var family_index = type.family_index;
		var beh_index = this.beh_index;
		var is_beh = (beh_index > -1);
		var params_vary = this.anyParamVariesPerInstance;
		var parameters = this.parameters;
		var results = this.results;
		var inverted = this.inverted;
		var func = this.func;
		var arr, container;
		if (params_vary)
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
			{
				p = parameters[j];
				if (!p.variesPerInstance)
					results[j] = p.get(0);
			}
		}
		else
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
				results[j] = parameters[j].get(0);
		}
		if (sol.select_all) {
			sol.instances.length = 0;       // clear contents
			sol.else_instances.length = 0;
			arr = type.instances;
			for (i = 0, leni = arr.length; i < leni; ++i)
			{
				inst = arr[i];
;
				if (params_vary)
				{
					for (j = 0, lenj = parameters.length; j < lenj; ++j)
					{
						p = parameters[j];
						if (p.variesPerInstance)
							results[j] = p.get(i);        // default SOL index is current object
					}
				}
				if (is_beh)
				{
					offset = 0;
					if (is_family)
					{
						offset = inst.type.family_beh_map[family_index];
					}
					ret = func.apply(inst.behavior_insts[beh_index + offset], results);
				}
				else
					ret = func.apply(inst, results);
				met = cr.xor(ret, inverted);
				if (met)
					sol.instances.push(inst);
				else if (is_orblock)					// in OR blocks, keep the instances not meeting the condition for subsequent testing
					sol.else_instances.push(inst);
			}
			if (type.finish)
				type.finish(true);
			sol.select_all = false;
			type.applySolToContainer();
			return sol.hasObjects();
		}
		else {
			k = 0;
			var using_else_instances = (is_orblock && !this.block.isFirstConditionOfType(this));
			arr = (using_else_instances ? sol.else_instances : sol.instances);
			var any_true = false;
			for (i = 0, leni = arr.length; i < leni; ++i)
			{
				inst = arr[i];
;
				if (params_vary)
				{
					for (j = 0, lenj = parameters.length; j < lenj; ++j)
					{
						p = parameters[j];
						if (p.variesPerInstance)
							results[j] = p.get(i);        // default SOL index is current object
					}
				}
				if (is_beh)
				{
					offset = 0;
					if (is_family)
					{
						offset = inst.type.family_beh_map[family_index];
					}
					ret = func.apply(inst.behavior_insts[beh_index + offset], results);
				}
				else
					ret = func.apply(inst, results);
				if (cr.xor(ret, inverted))
				{
					any_true = true;
					if (using_else_instances)
					{
						sol.instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances.push(s);
							}
						}
					}
					else
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances[k] = s;
							}
						}
						k++;
					}
				}
				else
				{
					if (using_else_instances)
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances[k] = s;
							}
						}
						k++;
					}
					else if (is_orblock)
					{
						sol.else_instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances.push(s);
							}
						}
					}
				}
			}
			arr.length = k;
			if (is_contained)
			{
				container = type.container;
				for (i = 0, leni = container.length; i < leni; i++)
				{
					sol2 = container[i].getCurrentSol();
					if (using_else_instances)
						sol2.else_instances.length = k;
					else
						sol2.instances.length = k;
				}
			}
			var pick_in_finish = any_true;		// don't pick in finish() if we're only doing the logic test below
			if (using_else_instances && !any_true)
			{
				for (i = 0, leni = sol.instances.length; i < leni; i++)
				{
					inst = sol.instances[i];
					if (params_vary)
					{
						for (j = 0, lenj = parameters.length; j < lenj; j++)
						{
							p = parameters[j];
							if (p.variesPerInstance)
								results[j] = p.get(i);
						}
					}
					if (is_beh)
						ret = func.apply(inst.behavior_insts[beh_index], results);
					else
						ret = func.apply(inst, results);
					if (cr.xor(ret, inverted))
					{
						any_true = true;
						break;		// got our flag, don't need to test any more
					}
				}
			}
			if (type.finish)
				type.finish(pick_in_finish || is_orblock);
			return is_orblock ? any_true : sol.hasObjects();
		}
	};
	cr.condition = Condition;
	function Action(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.anyParamVariesPerInstance = false;
		this.func = m[1];
;
		if (m[0] === -1)	// system
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
		}
		this.sid = m[3];
		this.runtime.actsBySid[this.sid.toString()] = this;
		if (m.length === 6)
		{
			var i, len;
			var em = m[5];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Action.prototype.postInit = function ()
	{
		var i, len, p;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			p = this.parameters[i];
			p.postInit();
			if (p.variesPerInstance)
				this.anyParamVariesPerInstance = true;
		}
	};
	Action.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return this.func.apply(this.runtime.system, this.results);
	};
	Action.prototype.run_object = function ()
	{
		var instances = this.type.getCurrentSol().getObjects();
		var is_family = this.type.is_family;
		var family_index = this.type.family_index;
		var beh_index = this.beh_index;
		var is_beh = (beh_index > -1);
		var params_vary = this.anyParamVariesPerInstance;
		var parameters = this.parameters;
		var results = this.results;
		var func = this.func;
		var i, j, leni, lenj, p, inst, offset;
		if (params_vary)
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
			{
				p = parameters[j];
				if (!p.variesPerInstance)
					results[j] = p.get(0);
			}
		}
		else
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
				results[j] = parameters[j].get(0);
		}
		for (i = 0, leni = instances.length; i < leni; ++i)
		{
			inst = instances[i];
			if (params_vary)
			{
				for (j = 0, lenj = parameters.length; j < lenj; ++j)
				{
					p = parameters[j];
					if (p.variesPerInstance)
						results[j] = p.get(i);    // pass i to use as default SOL index
				}
			}
			if (is_beh)
			{
				offset = 0;
				if (is_family)
				{
					offset = inst.type.family_beh_map[family_index];
				}
				func.apply(inst.behavior_insts[beh_index + offset], results);
			}
			else
				func.apply(inst, results);
		}
		return false;
	};
	cr.action = Action;
	var tempValues = [];
	var tempValuesPtr = -1;
	function Parameter(owner, m)
	{
		this.owner = owner;
		this.block = owner.block;
		this.sheet = owner.sheet;
		this.runtime = owner.runtime;
		this.type = m[0];
		this.expression = null;
		this.solindex = 0;
		this.get = null;
		this.combosel = 0;
		this.layout = null;
		this.key = 0;
		this.object = null;
		this.index = 0;
		this.varname = null;
		this.eventvar = null;
		this.fileinfo = null;
		this.subparams = null;
		this.variadicret = null;
		this.subparams = null;
		this.variadicret = null;
		this.variesPerInstance = false;
		var i, len, param;
		switch (m[0])
		{
			case 0:		// number
			case 7:		// any
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp;
				break;
			case 1:		// string
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp_str;
				break;
			case 5:		// layer
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_layer;
				break;
			case 3:		// combo
			case 8:		// cmp
				this.combosel = m[1];
				this.get = this.get_combosel;
				break;
			case 6:		// layout
				this.layout = this.runtime.layouts[m[1]];
;
				this.get = this.get_layout;
				break;
			case 9:		// keyb
				this.key = m[1];
				this.get = this.get_key;
				break;
			case 4:		// object
				this.object = this.runtime.types_by_index[m[1]];
;
				this.get = this.get_object;
				this.block.addSolModifier(this.object);
				if (this.owner instanceof cr.action)
					this.block.setSolWriterAfterCnds();
				else if (this.block.parent)
					this.block.parent.setSolWriterAfterCnds();
				break;
			case 10:	// instvar
				this.index = m[1];
				if (owner.type.is_family)
				{
					this.get = this.get_familyvar;
					this.variesPerInstance = true;
				}
				else
					this.get = this.get_instvar;
				break;
			case 11:	// eventvar
				this.varname = m[1];
				this.eventvar = null;
				this.get = this.get_eventvar;
				break;
			case 2:		// audiofile	["name", ismusic]
			case 12:	// fileinfo		"name"
				this.fileinfo = m[1];
				this.get = this.get_audiofile;
				break;
			case 13:	// variadic
				this.get = this.get_variadic;
				this.subparams = [];
				this.variadicret = [];
				for (i = 1, len = m.length; i < len; i++)
				{
					param = new cr.parameter(this.owner, m[i]);
					cr.seal(param);
					this.subparams.push(param);
					this.variadicret.push(0);
				}
				break;
			default:
;
		}
	};
	Parameter.prototype.postInit = function ()
	{
		var i, len;
		if (this.type === 11)		// eventvar
		{
			this.eventvar = this.runtime.getEventVariableByName(this.varname, this.block.parent);
;
		}
		else if (this.type === 13)	// variadic, postInit all sub-params
		{
			for (i = 0, len = this.subparams.length; i < len; i++)
				this.subparams[i].postInit();
		}
		if (this.expression)
			this.expression.postInit();
	};
	Parameter.prototype.maybeVaryForType = function (t)
	{
		if (this.variesPerInstance)
			return;				// already varies per instance, no need to check again
		if (!t)
			return;				// never vary for system type
		if (!t.plugin.singleglobal)
		{
			this.variesPerInstance = true;
			return;
		}
	};
	Parameter.prototype.setVaries = function ()
	{
		this.variesPerInstance = true;
	};
	Parameter.prototype.pushTempValue = function ()
	{
		tempValuesPtr++;
		if (tempValues.length === tempValuesPtr)
			tempValues.push(new cr.expvalue());
		return tempValues[tempValuesPtr];
	};
	Parameter.prototype.popTempValue = function ()
	{
		tempValuesPtr--;
	};
	Parameter.prototype.get_exp = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		return temp.data;      			// return actual JS value, not expvalue
	};
	Parameter.prototype.get_exp_str = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (cr.is_string(temp.data))
			return temp.data;
		else
			return "";
	};
	Parameter.prototype.get_object = function ()
	{
		return this.object;
	};
	Parameter.prototype.get_combosel = function ()
	{
		return this.combosel;
	};
	Parameter.prototype.get_layer = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (temp.is_number())
			return this.runtime.getLayerByNumber(temp.data);
		else
			return this.runtime.getLayerByName(temp.data);
	}
	Parameter.prototype.get_layout = function ()
	{
		return this.layout;
	};
	Parameter.prototype.get_key = function ()
	{
		return this.key;
	};
	Parameter.prototype.get_instvar = function ()
	{
		return this.index;
	};
	Parameter.prototype.get_familyvar = function (solindex_)
	{
		var solindex = solindex_ || 0;
		var familytype = this.owner.type;
		var realtype = null;
		var sol = familytype.getCurrentSol();
		var objs = sol.getObjects();
		if (objs.length)
			realtype = objs[solindex % objs.length].type;
		else if (sol.else_instances.length)
			realtype = sol.else_instances[solindex % sol.else_instances.length].type;
		else if (familytype.instances.length)
			realtype = familytype.instances[solindex % familytype.instances.length].type;
		else
			return 0;
		return this.index + realtype.family_var_map[familytype.family_index];
	};
	Parameter.prototype.get_eventvar = function ()
	{
		return this.eventvar;
	};
	Parameter.prototype.get_audiofile = function ()
	{
		return this.fileinfo;
	};
	Parameter.prototype.get_variadic = function ()
	{
		var i, len;
		for (i = 0, len = this.subparams.length; i < len; i++)
		{
			this.variadicret[i] = this.subparams[i].get();
		}
		return this.variadicret;
	};
	cr.parameter = Parameter;
	function EventVariable(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.name = m[1];
		this.vartype = m[2];
		this.initial = m[3];
		this.is_static = !!m[4];
		this.is_constant = !!m[5];
		this.sid = m[6];
		this.runtime.varsBySid[this.sid.toString()] = this;
		this.data = this.initial;	// note: also stored in event stack frame for local nonstatic nonconst vars
		if (this.parent)			// local var
		{
			if (this.is_static || this.is_constant)
				this.localIndex = -1;
			else
				this.localIndex = this.runtime.stackLocalCount++;
			this.runtime.all_local_vars.push(this);
		}
		else						// global var
		{
			this.localIndex = -1;
			this.runtime.all_global_vars.push(this);
		}
	};
	EventVariable.prototype.postInit = function ()
	{
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventVariable.prototype.setValue = function (x)
	{
;
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs)
			this.data = x;
		else	// local nonstatic variable: use event stack to keep value at this level of recursion
		{
			if (this.localIndex >= lvs.length)
				lvs.length = this.localIndex + 1;
			lvs[this.localIndex] = x;
		}
	};
	EventVariable.prototype.getValue = function ()
	{
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs || this.is_constant)
			return this.data;
		else	// local nonstatic variable
		{
			if (this.localIndex >= lvs.length)
			{
;
				return this.initial;
			}
			if (typeof lvs[this.localIndex] === "undefined")
			{
;
				return this.initial;
			}
			return lvs[this.localIndex];
		}
	};
	EventVariable.prototype.run = function ()
	{
			if (this.parent && !this.is_static && !this.is_constant)
				this.setValue(this.initial);
	};
	cr.eventvariable = EventVariable;
	function EventInclude(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.include_sheet = null;		// determined in postInit
		this.include_sheet_name = m[1];
		this.active = true;
	};
	EventInclude.prototype.toString = function ()
	{
		return "include:" + this.include_sheet.toString();
	};
	EventInclude.prototype.postInit = function ()
	{
        this.include_sheet = this.runtime.eventsheets[this.include_sheet_name];
;
;
        this.sheet.includes.add(this);
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
		var p = this.parent;
		while (p)
		{
			if (p.group)
				p.contained_includes.push(this);
			p = p.parent;
		}
		this.updateActive();
	};
	EventInclude.prototype.run = function ()
	{
			if (this.parent)
				this.runtime.pushCleanSol(this.runtime.types_by_index);
        if (!this.include_sheet.hasRun)
            this.include_sheet.run(true);			// from include
			if (this.parent)
				this.runtime.popSol(this.runtime.types_by_index);
	};
	EventInclude.prototype.updateActive = function ()
	{
		var p = this.parent;
		while (p)
		{
			if (p.group && !p.group_active)
			{
				this.active = false;
				return;
			}
			p = p.parent;
		}
		this.active = true;
	};
	EventInclude.prototype.isActive = function ()
	{
		return this.active;
	};
	cr.eventinclude = EventInclude;
	function EventStackFrame()
	{
		this.temp_parents_arr = [];
		this.reset(null);
		cr.seal(this);
	};
	EventStackFrame.prototype.reset = function (cur_event)
	{
		this.current_event = cur_event;
		this.cndindex = 0;
		this.actindex = 0;
		this.temp_parents_arr.length = 0;
		this.last_event_true = false;
		this.else_branch_ran = false;
		this.any_true_state = false;
	};
	EventStackFrame.prototype.isModifierAfterCnds = function ()
	{
		if (this.current_event.solWriterAfterCnds)
			return true;
		if (this.cndindex < this.current_event.conditions.length - 1)
			return !!this.current_event.solModifiers.length;
		return false;
	};
	cr.eventStackFrame = EventStackFrame;
}());
(function()
{
	function ExpNode(owner_, m)
	{
		this.owner = owner_;
		this.runtime = owner_.runtime;
		this.type = m[0];
;
		this.get = [this.eval_int,
					this.eval_float,
					this.eval_string,
					this.eval_unaryminus,
					this.eval_add,
					this.eval_subtract,
					this.eval_multiply,
					this.eval_divide,
					this.eval_mod,
					this.eval_power,
					this.eval_and,
					this.eval_or,
					this.eval_equal,
					this.eval_notequal,
					this.eval_less,
					this.eval_lessequal,
					this.eval_greater,
					this.eval_greaterequal,
					this.eval_conditional,
					this.eval_system_exp,
					this.eval_object_behavior_exp,
					this.eval_instvar_exp,
					this.eval_object_behavior_exp,
					this.eval_eventvar_exp][this.type];
		var paramsModel = null;
		this.value = null;
		this.first = null;
		this.second = null;
		this.third = null;
		this.func = null;
		this.results = null;
		this.parameters = null;
		this.object_type = null;
		this.beh_index = -1;
		this.instance_expr = null;
		this.varindex = -1;
		this.behavior_type = null;
		this.varname = null;
		this.eventvar = null;
		this.return_string = false;
		switch (this.type) {
		case 0:		// int
		case 1:		// float
		case 2:		// string
			this.value = m[1];
			break;
		case 3:		// unaryminus
			this.first = new cr.expNode(owner_, m[1]);
			break;
		case 18:	// conditional
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
			this.third = new cr.expNode(owner_, m[3]);
			break;
		case 19:	// system_exp
			this.func = m[1];
;
			if (this.func === cr.system_object.prototype.exps.random
			 || this.func === cr.system_object.prototype.exps.choose)
			{
				this.owner.setVaries();
			}
			this.results = [];
			this.parameters = [];
			if (m.length === 3)
			{
				paramsModel = m[2];
				this.results.length = paramsModel.length + 1;	// must also fit 'ret'
			}
			else
				this.results.length = 1;      // to fit 'ret'
			break;
		case 20:	// object_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.beh_index = -1;
			this.func = m[2];
			this.return_string = m[3];
			if (cr.plugins_.Function && this.func === cr.plugins_.Function.prototype.exps.Call)
			{
				this.owner.setVaries();
			}
			if (m[4])
				this.instance_expr = new cr.expNode(owner_, m[4]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 6)
			{
				paramsModel = m[5];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 21:		// instvar_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.return_string = m[2];
			if (m[3])
				this.instance_expr = new cr.expNode(owner_, m[3]);
			else
				this.instance_expr = null;
			this.varindex = m[4];
			break;
		case 22:		// behavior_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.behavior_type = this.object_type.getBehaviorByName(m[2]);
;
			this.beh_index = this.object_type.getBehaviorIndexByName(m[2]);
			this.func = m[3];
			this.return_string = m[4];
			if (m[5])
				this.instance_expr = new cr.expNode(owner_, m[5]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 7)
			{
				paramsModel = m[6];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 23:		// eventvar_exp
			this.varname = m[1];
			this.eventvar = null;	// assigned in postInit
			break;
		}
		this.owner.maybeVaryForType(this.object_type);
		if (this.type >= 4 && this.type <= 17)
		{
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
		}
		if (paramsModel)
		{
			var i, len;
			for (i = 0, len = paramsModel.length; i < len; i++)
				this.parameters.push(new cr.expNode(owner_, paramsModel[i]));
		}
		cr.seal(this);
	};
	ExpNode.prototype.postInit = function ()
	{
		if (this.type === 23)	// eventvar_exp
		{
			this.eventvar = this.owner.runtime.getEventVariableByName(this.varname, this.owner.block.parent);
;
		}
		if (this.first)
			this.first.postInit();
		if (this.second)
			this.second.postInit();
		if (this.third)
			this.third.postInit();
		if (this.instance_expr)
			this.instance_expr.postInit();
		if (this.parameters)
		{
			var i, len;
			for (i = 0, len = this.parameters.length; i < len; i++)
				this.parameters[i].postInit();
		}
	};
	ExpNode.prototype.eval_system_exp = function (ret)
	{
		this.results[0] = ret;
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		this.owner.popTempValue();
		this.func.apply(this.runtime.system, this.results);
	};
	ExpNode.prototype.eval_object_behavior_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		this.results[0] = ret;
		ret.object_class = this.object_type;		// so expression can access family type if need be
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++) {
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		var index = this.owner.solindex;
		if (this.instance_expr) {
			this.instance_expr.get(temp);
			if (temp.is_number()) {
				index = temp.data;
				instances = this.object_type.instances;    // pick from all instances, not SOL
			}
		}
		this.owner.popTempValue();
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var returned_val;
		var inst = instances[index];
		if (this.beh_index > -1)
		{
			var offset = 0;
			if (this.object_type.is_family)
			{
				offset = inst.type.family_beh_map[this.object_type.family_index];
			}
			returned_val = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
		}
		else
			returned_val = this.func.apply(inst, this.results);
;
	};
	ExpNode.prototype.eval_instvar_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		var index = this.owner.solindex;
		if (this.instance_expr)
		{
			var temp = this.owner.pushTempValue();
			this.instance_expr.get(temp);
			if (temp.is_number())
			{
				index = temp.data;
				var type_instances = this.object_type.instances;
				index %= type_instances.length;     // wraparound
				if (index < 0)                      // offset
					index += type_instances.length;
				var to_ret = type_instances[index].instance_vars[this.varindex];
				if (cr.is_string(to_ret))
					ret.set_string(to_ret);
				else
					ret.set_float(to_ret);
				this.owner.popTempValue();
				return;         // done
			}
			this.owner.popTempValue();
		}
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var inst = instances[index];
		var offset = 0;
		if (this.object_type.is_family)
		{
			offset = inst.type.family_var_map[this.object_type.family_index];
		}
		var to_ret = inst.instance_vars[this.varindex + offset];
		if (cr.is_string(to_ret))
			ret.set_string(to_ret);
		else
			ret.set_float(to_ret);
	};
	ExpNode.prototype.eval_int = function (ret)
	{
		ret.type = cr.exptype.Integer;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_float = function (ret)
	{
		ret.type = cr.exptype.Float;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_string = function (ret)
	{
		ret.type = cr.exptype.String;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_unaryminus = function (ret)
	{
		this.first.get(ret);                // retrieve operand
		if (ret.is_number())
			ret.data = -ret.data;
	};
	ExpNode.prototype.eval_add = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data += temp.data;          // both operands numbers: add
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_subtract = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data -= temp.data;          // both operands numbers: subtract
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_multiply = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data *= temp.data;          // both operands numbers: multiply
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_divide = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data /= temp.data;          // both operands numbers: divide
			ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_mod = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data %= temp.data;          // both operands numbers: modulo
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_power = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data = Math.pow(ret.data, temp.data);   // both operands numbers: raise to power
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_and = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number())
		{
			if (temp.is_string())
			{
				ret.set_string(ret.data.toString() + temp.data);
			}
			else
			{
				if (ret.data && temp.data)
					ret.set_int(1);
				else
					ret.set_int(0);
			}
		}
		else if (ret.is_string())
		{
			if (temp.is_string())
				ret.data += temp.data;
			else
			{
				ret.data += (Math.round(temp.data * 1e10) / 1e10).toString();
			}
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_or = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			if (ret.data || temp.data)
				ret.set_int(1);
			else
				ret.set_int(0);
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_conditional = function (ret)
	{
		this.first.get(ret);                // condition operand
		if (ret.data)                       // is true
			this.second.get(ret);           // evaluate second operand to ret
		else
			this.third.get(ret);            // evaluate third operand to ret
	};
	ExpNode.prototype.eval_equal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data === temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_notequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data !== temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_less = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data < temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_lessequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data <= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greater = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data > temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greaterequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data >= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_eventvar_exp = function (ret)
	{
		var val = this.eventvar.getValue();
		if (cr.is_number(val))
			ret.set_float(val);
		else
			ret.set_string(val);
	};
	cr.expNode = ExpNode;
	function ExpValue(type, data)
	{
		this.type = type || cr.exptype.Integer;
		this.data = data || 0;
		this.object_class = null;
;
;
;
		if (this.type == cr.exptype.Integer)
			this.data = Math.floor(this.data);
		cr.seal(this);
	};
	ExpValue.prototype.is_int = function ()
	{
		return this.type === cr.exptype.Integer;
	};
	ExpValue.prototype.is_float = function ()
	{
		return this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_number = function ()
	{
		return this.type === cr.exptype.Integer || this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_string = function ()
	{
		return this.type === cr.exptype.String;
	};
	ExpValue.prototype.make_int = function ()
	{
		if (!this.is_int())
		{
			if (this.is_float())
				this.data = Math.floor(this.data);      // truncate float
			else if (this.is_string())
				this.data = parseInt(this.data, 10);
			this.type = cr.exptype.Integer;
		}
	};
	ExpValue.prototype.make_float = function ()
	{
		if (!this.is_float())
		{
			if (this.is_string())
				this.data = parseFloat(this.data);
			this.type = cr.exptype.Float;
		}
	};
	ExpValue.prototype.make_string = function ()
	{
		if (!this.is_string())
		{
			this.data = this.data.toString();
			this.type = cr.exptype.String;
		}
	};
	ExpValue.prototype.set_int = function (val)
	{
;
		this.type = cr.exptype.Integer;
		this.data = Math.floor(val);
	};
	ExpValue.prototype.set_float = function (val)
	{
;
		this.type = cr.exptype.Float;
		this.data = val;
	};
	ExpValue.prototype.set_string = function (val)
	{
;
		this.type = cr.exptype.String;
		this.data = val;
	};
	ExpValue.prototype.set_any = function (val)
	{
		if (cr.is_number(val))
		{
			this.type = cr.exptype.Float;
			this.data = val;
		}
		else if (cr.is_string(val))
		{
			this.type = cr.exptype.String;
			this.data = val.toString();
		}
		else
		{
			this.type = cr.exptype.Integer;
			this.data = 0;
		}
	};
	cr.expvalue = ExpValue;
	cr.exptype = {
		Integer: 0,     // emulated; no native integer support in javascript
		Float: 1,
		String: 2
	};
}());
;
cr.system_object = function (runtime)
{
    this.runtime = runtime;
	this.waits = [];
};
cr.system_object.prototype.saveToJSON = function ()
{
	var o = {};
	var i, len, j, lenj, p, w, t, sobj;
	o["waits"] = [];
	var owaits = o["waits"];
	var waitobj;
	for (i = 0, len = this.waits.length; i < len; i++)
	{
		w = this.waits[i];
		waitobj = {
			"t": w.time,
			"st": w.signaltag,
			"s": w.signalled,
			"ev": w.ev.sid,
			"sm": [],
			"sols": {}
		};
		if (w.ev.actions[w.actindex])
			waitobj["act"] = w.ev.actions[w.actindex].sid;
		for (j = 0, lenj = w.solModifiers.length; j < lenj; j++)
			waitobj["sm"].push(w.solModifiers[j].sid);
		for (p in w.sols)
		{
			if (w.sols.hasOwnProperty(p))
			{
				t = this.runtime.types_by_index[parseInt(p, 10)];
;
				sobj = {
					"sa": w.sols[p].sa,
					"insts": []
				};
				for (j = 0, lenj = w.sols[p].insts.length; j < lenj; j++)
					sobj["insts"].push(w.sols[p].insts[j].uid);
				waitobj["sols"][t.sid.toString()] = sobj;
			}
		}
		owaits.push(waitobj);
	}
	return o;
};
cr.system_object.prototype.loadFromJSON = function (o)
{
	var owaits = o["waits"];
	var i, len, j, lenj, p, w, addWait, e, aindex, t, savedsol, nusol, inst;
	this.waits.length = 0;
	for (i = 0, len = owaits.length; i < len; i++)
	{
		w = owaits[i];
		e = this.runtime.blocksBySid[w["ev"].toString()];
		if (!e)
			continue;	// event must've gone missing
		aindex = -1;
		for (j = 0, lenj = e.actions.length; j < lenj; j++)
		{
			if (e.actions[j].sid === w["act"])
			{
				aindex = j;
				break;
			}
		}
		if (aindex === -1)
			continue;	// action must've gone missing
		addWait = {};
		addWait.sols = {};
		addWait.solModifiers = [];
		addWait.deleteme = false;
		addWait.time = w["t"];
		addWait.signaltag = w["st"] || "";
		addWait.signalled = !!w["s"];
		addWait.ev = e;
		addWait.actindex = aindex;
		for (j = 0, lenj = w["sm"].length; j < lenj; j++)
		{
			t = this.runtime.getObjectTypeBySid(w["sm"][j]);
			if (t)
				addWait.solModifiers.push(t);
		}
		for (p in w["sols"])
		{
			if (w["sols"].hasOwnProperty(p))
			{
				t = this.runtime.getObjectTypeBySid(parseInt(p, 10));
				if (!t)
					continue;		// type must've been deleted
				savedsol = w["sols"][p];
				nusol = {
					sa: savedsol["sa"],
					insts: []
				};
				for (j = 0, lenj = savedsol["insts"].length; j < lenj; j++)
				{
					inst = this.runtime.getObjectByUID(savedsol["insts"][j]);
					if (inst)
						nusol.insts.push(inst);
				}
				addWait.sols[t.index.toString()] = nusol;
			}
		}
		this.waits.push(addWait);
	}
};
(function ()
{
	var sysProto = cr.system_object.prototype;
	function SysCnds() {};
    SysCnds.prototype.EveryTick = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutStart = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutEnd = function()
    {
        return true;
    };
    SysCnds.prototype.Compare = function(x, cmp, y)
    {
        return cr.do_cmp(x, cmp, y);
    };
    SysCnds.prototype.CompareTime = function (cmp, t)
    {
        var elapsed = this.runtime.kahanTime.sum;
        if (cmp === 0)
        {
            var cnd = this.runtime.getCurrentCondition();
            if (!cnd.extra["CompareTime_executed"])
            {
                if (elapsed >= t)
                {
                    cnd.extra["CompareTime_executed"] = true;
                    return true;
                }
            }
            return false;
        }
        return cr.do_cmp(elapsed, cmp, t);
    };
    SysCnds.prototype.LayerVisible = function (layer)
    {
        if (!layer)
            return false;
        else
            return layer.visible;
    };
	SysCnds.prototype.LayerCmpOpacity = function (layer, cmp, opacity_)
	{
		if (!layer)
			return false;
		return cr.do_cmp(layer.opacity * 100, cmp, opacity_);
	};
    SysCnds.prototype.Repeat = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				current_loop.index = i;
				current_event.retrigger();
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	SysCnds.prototype.While = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				if (!current_event.retrigger())		// one of the other conditions returned false
					current_loop.stopped = true;	// break
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				current_loop.index = i;
				if (!current_event.retrigger())
					current_loop.stopped = true;
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
    SysCnds.prototype.For = function (name, start, end)
    {
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack(name);
        var i;
		if (end < start)
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
		else
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	var foreach_instancestack = [];
	var foreach_instanceptr = -1;
    SysCnds.prototype.ForEach = function (obj)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i, len, j, lenj, inst, s, sol2;
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	function foreach_sortinstances(a, b)
	{
		var va = a.extra["c2_feo_val"];
		var vb = b.extra["c2_feo_val"];
		if (cr.is_number(va) && cr.is_number(vb))
			return va - vb;
		else
		{
			va = "" + va;
			vb = "" + vb;
			if (va < vb)
				return -1;
			else if (va > vb)
				return 1;
			else
				return 0;
		}
	};
	SysCnds.prototype.ForEachOrdered = function (obj, exp, order)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var current_condition = this.runtime.getCurrentCondition();
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
		var i, len, j, lenj, inst, s, sol2;
		for (i = 0, len = instances.length; i < len; i++)
		{
			instances[i].extra["c2_feo_val"] = current_condition.parameters[1].get(i);
		}
		instances.sort(foreach_sortinstances);
		if (order === 1)
			instances.reverse();
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	SysCnds.prototype.PickByComparison = function (obj_, exp_, cmp_, val_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			val_ = current_condition.parameters[3].get(i);
			if (cr.do_cmp(exp_, cmp_, val_))
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
	SysCnds.prototype.PickByEvaluate = function (obj_, exp_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			if (exp_)
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
    SysCnds.prototype.TriggerOnce = function ()
    {
        var cndextra = this.runtime.getCurrentCondition().extra;
		if (typeof cndextra["TriggerOnce_lastTick"] === "undefined")
			cndextra["TriggerOnce_lastTick"] = -1;
        var last_tick = cndextra["TriggerOnce_lastTick"];
        var cur_tick = this.runtime.tickcount;
        cndextra["TriggerOnce_lastTick"] = cur_tick;
        return this.runtime.layout_first_tick || last_tick !== cur_tick - 1;
    };
    SysCnds.prototype.Every = function (seconds)
    {
        var cnd = this.runtime.getCurrentCondition();
        var last_time = cnd.extra["Every_lastTime"] || 0;
        var cur_time = this.runtime.kahanTime.sum;
		if (typeof cnd.extra["Every_seconds"] === "undefined")
			cnd.extra["Every_seconds"] = seconds;
		var this_seconds = cnd.extra["Every_seconds"];
        if (cur_time >= last_time + this_seconds)
        {
            cnd.extra["Every_lastTime"] = last_time + this_seconds;
			if (cur_time >= cnd.extra["Every_lastTime"] + 0.04)
			{
				cnd.extra["Every_lastTime"] = cur_time;
			}
			cnd.extra["Every_seconds"] = seconds;
            return true;
        }
		else if (cur_time < last_time - 0.1)
		{
			cnd.extra["Every_lastTime"] = cur_time;
		}
		return false;
    };
    SysCnds.prototype.PickNth = function (obj, index)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		index = cr.floor(index);
        if (index < 0 || index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.PickRandom = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		var index = cr.floor(Math.random() * instances.length);
        if (index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.CompareVar = function (v, cmp, val)
    {
        return cr.do_cmp(v.getValue(), cmp, val);
    };
    SysCnds.prototype.IsGroupActive = function (group)
    {
		var g = this.runtime.groups_by_name[group.toLowerCase()];
        return g && g.group_active;
    };
	SysCnds.prototype.IsPreview = function ()
	{
		return typeof cr_is_preview !== "undefined";
	};
	SysCnds.prototype.PickAll = function (obj)
    {
        if (!obj)
            return false;
		if (!obj.instances.length)
			return false;
        var sol = obj.getCurrentSol();
        sol.select_all = true;
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.IsMobile = function ()
	{
		return this.runtime.isMobile;
	};
	SysCnds.prototype.CompareBetween = function (x, a, b)
	{
		return x >= a && x <= b;
	};
	SysCnds.prototype.Else = function ()
	{
		var current_frame = this.runtime.getCurrentEventStack();
		if (current_frame.else_branch_ran)
			return false;		// another event in this else-if chain has run
		else
			return !current_frame.last_event_true;
		/*
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var prev_event = current_event.prev_block;
		if (!prev_event)
			return false;
		if (prev_event.is_logical)
			return !this.runtime.last_event_true;
		var i, len, j, lenj, s, sol, temp, inst, any_picked = false;
		for (i = 0, len = prev_event.cndReferences.length; i < len; i++)
		{
			s = prev_event.cndReferences[i];
			sol = s.getCurrentSol();
			if (sol.select_all || sol.instances.length === s.instances.length)
			{
				sol.select_all = false;
				sol.instances.length = 0;
			}
			else
			{
				if (sol.instances.length === 1 && sol.else_instances.length === 0 && s.instances.length >= 2)
				{
					inst = sol.instances[0];
					sol.instances.length = 0;
					for (j = 0, lenj = s.instances.length; j < lenj; j++)
					{
						if (s.instances[j] != inst)
							sol.instances.push(s.instances[j]);
					}
					any_picked = true;
				}
				else
				{
					temp = sol.instances;
					sol.instances = sol.else_instances;
					sol.else_instances = temp;
					any_picked = true;
				}
			}
		}
		return any_picked;
		*/
	};
	SysCnds.prototype.OnLoadFinished = function ()
	{
		return true;
	};
	SysCnds.prototype.OnCanvasSnapshot = function ()
	{
		return true;
	};
	SysCnds.prototype.EffectsSupported = function ()
	{
		return !!this.runtime.glwrap;
	};
	SysCnds.prototype.OnSaveComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadFailed = function ()
	{
		return true;
	};
	SysCnds.prototype.ObjectUIDExists = function (u)
	{
		return !!this.runtime.getObjectByUID(u);
	};
	SysCnds.prototype.IsOnPlatform = function (p)
	{
		var rt = this.runtime;
		switch (p) {
		case 0:		// HTML5 website
			return !rt.isDomFree && !rt.isNodeWebkit && !rt.isPhoneGap && !rt.isCrosswalk && !rt.isWinJS && !rt.isWindowsPhone8 && !rt.isBlackberry10 && !rt.isAmazonWebApp;
		case 1:		// iOS
			return rt.isiOS;
		case 2:		// Android
			return rt.isAndroid;
		case 3:		// Windows 8
			return rt.isWindows8App;
		case 4:		// Windows Phone 8
			return rt.isWindowsPhone8;
		case 5:		// Blackberry 10
			return rt.isBlackberry10;
		case 6:		// Tizen
			return rt.isTizen;
		case 7:		// CocoonJS
			return rt.isCocoonJs;
		case 8:		// PhoneGap
			return rt.isPhoneGap;
		case 9:	// Scirra Arcade
			return rt.isArcade;
		case 10:	// node-webkit
			return rt.isNodeWebkit;
		case 11:	// crosswalk
			return rt.isCrosswalk;
		case 12:	// amazon webapp
			return rt.isAmazonWebApp;
		default:	// should not be possible
			return false;
		}
	};
	var cacheRegex = null;
	var lastRegex = "";
	var lastFlags = "";
	function getRegex(regex_, flags_)
	{
		if (!cacheRegex || regex_ !== lastRegex || flags_ !== lastFlags)
		{
			cacheRegex = new RegExp(regex_, flags_);
			lastRegex = regex_;
			lastFlags = flags_;
		}
		cacheRegex.lastIndex = 0;		// reset
		return cacheRegex;
	};
	SysCnds.prototype.RegexTest = function (str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		return regex.test(str_);
	};
	var tmp_arr = [];
	SysCnds.prototype.PickOverlappingPoint = function (obj_, x_, y_)
	{
		if (!obj_)
            return false;
        var sol = obj_.getCurrentSol();
        var instances = sol.getObjects();
		var current_event = this.runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		var cnd = this.runtime.getCurrentCondition();
		var i, len, inst, pick;
		if (sol.select_all)
		{
			cr.shallowAssignArray(tmp_arr, instances);
			sol.else_instances.length = 0;
			sol.select_all = false;
			sol.instances.length = 0;
		}
		else
		{
			if (orblock)
			{
				cr.shallowAssignArray(tmp_arr, sol.else_instances);
				sol.else_instances.length = 0;
			}
			else
			{
				cr.shallowAssignArray(tmp_arr, instances);
				sol.instances.length = 0;
			}
		}
		for (i = 0, len = tmp_arr.length; i < len; ++i)
		{
			inst = tmp_arr[i];
			inst.update_bbox();
			pick = cr.xor(inst.contains_pt(x_, y_), cnd.inverted);
			if (pick)
				sol.instances.push(inst);
			else
				sol.else_instances.push(inst);
		}
		obj_.applySolToContainer();
		return cr.xor(!!sol.instances.length, cnd.inverted);
	};
	sysProto.cnds = new SysCnds();
    function SysActs() {};
    SysActs.prototype.GoToLayout = function (to)
    {
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
        this.runtime.changelayout = to;
    };
	SysActs.prototype.NextPrevLayout = function (prev)
    {
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
		var index = this.runtime.layouts_by_index.indexOf(this.runtime.running_layout);
		if (prev && index === 0)
			return;		// cannot go to previous layout from first layout
		if (!prev && index === this.runtime.layouts_by_index.length - 1)
			return;		// cannot go to next layout from last layout
		var to = this.runtime.layouts_by_index[index + (prev ? -1 : 1)];
;
        this.runtime.changelayout = to;
    };
    SysActs.prototype.CreateObject = function (obj, layer, x, y)
    {
        if (!layer || !obj)
            return;
        var inst = this.runtime.createInstance(obj, layer, x, y);
		if (!inst)
			return;
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
        var sol = obj.getCurrentSol();
        sol.select_all = false;
		sol.instances.length = 1;
		sol.instances[0] = inst;
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				sol = s.type.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = s;
			}
		}
    };
    SysActs.prototype.SetLayerVisible = function (layer, visible_)
    {
        if (!layer)
            return;
		if (layer.visible !== visible_)
		{
			layer.visible = visible_;
			this.runtime.redraw = true;
		}
    };
	SysActs.prototype.SetLayerOpacity = function (layer, opacity_)
	{
		if (!layer)
			return;
		opacity_ = cr.clamp(opacity_ / 100, 0, 1);
		if (layer.opacity !== opacity_)
		{
			layer.opacity = opacity_;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayerScaleRate = function (layer, sr)
	{
		if (!layer)
			return;
		if (layer.zoomRate !== sr)
		{
			layer.zoomRate = sr;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayoutScale = function (s)
	{
		if (!this.runtime.running_layout)
			return;
		if (this.runtime.running_layout.scale !== s)
		{
			this.runtime.running_layout.scale = s;
			this.runtime.running_layout.boundScrolling();
			this.runtime.redraw = true;
		}
	};
    SysActs.prototype.ScrollX = function(x)
    {
        this.runtime.running_layout.scrollToX(x);
    };
    SysActs.prototype.ScrollY = function(y)
    {
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.Scroll = function(x, y)
    {
        this.runtime.running_layout.scrollToX(x);
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.ScrollToObject = function(obj)
    {
        var inst = obj.getFirstPicked();
        if (inst)
        {
            this.runtime.running_layout.scrollToX(inst.x);
            this.runtime.running_layout.scrollToY(inst.y);
        }
    };
	SysActs.prototype.SetVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(x);
			else
				v.setValue(parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(x.toString());
	};
	SysActs.prototype.AddVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() + x);
			else
				v.setValue(v.getValue() + parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(v.getValue() + x.toString());
	};
	SysActs.prototype.SubVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() - x);
			else
				v.setValue(v.getValue() - parseFloat(x));
		}
	};
    SysActs.prototype.SetGroupActive = function (group, active)
    {
		var g = this.runtime.groups_by_name[group.toLowerCase()];
		if (!g)
			return;
		switch (active) {
		case 0:
			g.setGroupActive(false);
			break;
		case 1:
			g.setGroupActive(true);
			break;
		case 2:
			g.setGroupActive(!g.group_active);
			break;
		}
    };
    SysActs.prototype.SetTimescale = function (ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        this.runtime.timescale = ts;
    };
    SysActs.prototype.SetObjectTimescale = function (obj, ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        if (!obj)
            return;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = ts;
        }
    };
    SysActs.prototype.RestoreObjectTimescale = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = -1.0;
        }
    };
	var waitobjrecycle = [];
	function allocWaitObject()
	{
		var w;
		if (waitobjrecycle.length)
			w = waitobjrecycle.pop();
		else
		{
			w = {};
			w.sols = {};
			w.solModifiers = [];
		}
		w.deleteme = false;
		return w;
	};
	function freeWaitObject(w)
	{
		cr.wipe(w.sols);
		w.solModifiers.length = 0;
		waitobjrecycle.push(w);
	};
	var solstateobjects = [];
	function allocSolStateObject()
	{
		var s;
		if (solstateobjects.length)
			s = solstateobjects.pop();
		else
		{
			s = {};
			s.insts = [];
		}
		s.sa = false;
		return s;
	};
	function freeSolStateObject(s)
	{
		s.insts.length = 0;
		solstateobjects.push(s);
	};
	SysActs.prototype.Wait = function (seconds)
	{
		if (seconds < 0)
			return;
		var i, len, s, t, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		var waitobj = allocWaitObject();
		waitobj.time = this.runtime.kahanTime.sum + seconds;
		waitobj.signaltag = "";
		waitobj.signalled = false;
		waitobj.ev = evinfo.current_event;
		waitobj.actindex = evinfo.actindex + 1;	// pointing at next action
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			t = this.runtime.types_by_index[i];
			s = t.getCurrentSol();
			if (s.select_all && evinfo.current_event.solModifiers.indexOf(t) === -1)
				continue;
			waitobj.solModifiers.push(t);
			ss = allocSolStateObject();
			ss.sa = s.select_all;
			cr.shallowAssignArray(ss.insts, s.instances);
			waitobj.sols[i.toString()] = ss;
		}
		this.waits.push(waitobj);
		return true;
	};
	SysActs.prototype.WaitForSignal = function (tag)
	{
		var i, len, s, t, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		var waitobj = allocWaitObject();
		waitobj.time = -1;
		waitobj.signaltag = tag.toLowerCase();
		waitobj.signalled = false;
		waitobj.ev = evinfo.current_event;
		waitobj.actindex = evinfo.actindex + 1;	// pointing at next action
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			t = this.runtime.types_by_index[i];
			s = t.getCurrentSol();
			if (s.select_all && evinfo.current_event.solModifiers.indexOf(t) === -1)
				continue;
			waitobj.solModifiers.push(t);
			ss = allocSolStateObject();
			ss.sa = s.select_all;
			cr.shallowAssignArray(ss.insts, s.instances);
			waitobj.sols[i.toString()] = ss;
		}
		this.waits.push(waitobj);
		return true;
	};
	SysActs.prototype.Signal = function (tag)
	{
		var lowertag = tag.toLowerCase();
		var i, len, w;
		for (i = 0, len = this.waits.length; i < len; ++i)
		{
			w = this.waits[i];
			if (w.time !== -1)
				continue;					// timer wait, ignore
			if (w.signaltag === lowertag)	// waiting for this signal
				w.signalled = true;			// will run on next check
		}
	};
	SysActs.prototype.SetLayerScale = function (layer, scale)
    {
        if (!layer)
            return;
		if (layer.scale === scale)
			return;
        layer.scale = scale;
        this.runtime.redraw = true;
    };
	SysActs.prototype.ResetGlobals = function ()
	{
		var i, len, g;
		for (i = 0, len = this.runtime.all_global_vars.length; i < len; i++)
		{
			g = this.runtime.all_global_vars[i];
			g.data = g.initial;
		}
	};
	SysActs.prototype.SetLayoutAngle = function (a)
	{
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (this.runtime.running_layout)
		{
			if (this.runtime.running_layout.angle !== a)
			{
				this.runtime.running_layout.angle = a;
				this.runtime.redraw = true;
			}
		}
	};
	SysActs.prototype.SetLayerAngle = function (layer, a)
    {
        if (!layer)
            return;
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (layer.angle === a)
			return;
        layer.angle = a;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerParallax = function (layer, px, py)
    {
        if (!layer)
            return;
		if (layer.parallaxX === px / 100 && layer.parallaxY === py / 100)
			return;
        layer.parallaxX = px / 100;
		layer.parallaxY = py / 100;
		if (layer.parallaxX !== 1 || layer.parallaxY !== 1)
		{
			var i, len, instances = layer.instances;
			for (i = 0, len = instances.length; i < len; ++i)
			{
				instances[i].type.any_instance_parallaxed = true;
			}
		}
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerBackground = function (layer, c)
    {
        if (!layer)
            return;
		var r = cr.GetRValue(c);
		var g = cr.GetGValue(c);
		var b = cr.GetBValue(c);
		if (layer.background_color[0] === r && layer.background_color[1] === g && layer.background_color[2] === b)
			return;
        layer.background_color[0] = r;
		layer.background_color[1] = g;
		layer.background_color[2] = b;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerTransparent = function (layer, t)
    {
        if (!layer)
            return;
		if (!!t === !!layer.transparent)
			return;
		layer.transparent = !!t;
        this.runtime.redraw = true;
    };
	SysActs.prototype.StopLoop = function ()
	{
		if (this.runtime.loop_stack_index < 0)
			return;		// no loop currently running
		this.runtime.getCurrentLoop().stopped = true;
	};
	SysActs.prototype.GoToLayoutByName = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to different layout
;
		var l;
		for (l in this.runtime.layouts)
		{
			if (this.runtime.layouts.hasOwnProperty(l) && cr.equals_nocase(l, layoutname))
			{
				this.runtime.changelayout = this.runtime.layouts[l];
				return;
			}
		}
	};
	SysActs.prototype.RestartLayout = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot restart loader layouts
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
		if (!this.runtime.running_layout)
			return;
		this.runtime.changelayout = this.runtime.running_layout;
		var i, len, g;
		for (i = 0, len = this.runtime.allGroups.length; i < len; i++)
		{
			g = this.runtime.allGroups[i];
			g.setGroupActive(g.initially_activated);
		}
	};
	SysActs.prototype.SnapshotCanvas = function (format_, quality_)
	{
		this.runtime.snapshotCanvas = [format_ === 0 ? "image/png" : "image/jpeg", quality_ / 100];
		this.runtime.redraw = true;		// force redraw so snapshot is always taken
	};
	SysActs.prototype.SetCanvasSize = function (w, h)
	{
		if (w <= 0 || h <= 0)
			return;
		var mode = this.runtime.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.runtime.isNodeFullscreen);
		if (isfullscreen && this.runtime.fullscreen_scaling > 0)
			mode = this.runtime.fullscreen_scaling;
		if (mode === 0)
		{
			this.runtime["setSize"](w, h, true);
		}
		else
		{
			this.runtime.original_width = w;
			this.runtime.original_height = h;
			this.runtime["setSize"](this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, true);
		}
	};
	SysActs.prototype.SetLayoutEffectEnabled = function (enable_, effectname_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		this.runtime.running_layout.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectEnabled = function (layer, enable_, effectname_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		layer.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayoutEffectParam = function (effectname_, index_, value_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = this.runtime.running_layout.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectParam = function (layer, effectname_, index_, value_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = layer.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SaveState = function (slot_)
	{
		this.runtime.saveToSlot = slot_;
	};
	SysActs.prototype.LoadState = function (slot_)
	{
		this.runtime.loadFromSlot = slot_;
	};
	SysActs.prototype.LoadStateJSON = function (jsonstr_)
	{
		this.runtime.loadFromJson = jsonstr_;
	};
	SysActs.prototype.SetHalfFramerateMode = function (set_)
	{
		this.runtime.halfFramerateMode = (set_ !== 0);
	};
	SysActs.prototype.SetFullscreenQuality = function (q)
	{
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.isNodeFullscreen);
		if (!isfullscreen && this.runtime.fullscreen_mode === 0)
			return;
		this.runtime.wantFullscreenScalingQuality = (q !== 0);
		this.runtime["setSize"](this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, true);
	};
	sysProto.acts = new SysActs();
    function SysExps() {};
    SysExps.prototype["int"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_int(parseInt(x, 10));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_int(x);
    };
    SysExps.prototype["float"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_float(parseFloat(x));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_float(x);
    };
    SysExps.prototype.str = function(ret, x)
    {
        if (cr.is_string(x))
            ret.set_string(x);
        else
            ret.set_string(x.toString());
    };
    SysExps.prototype.len = function(ret, x)
    {
        ret.set_int(x.length || 0);
    };
    SysExps.prototype.random = function (ret, a, b)
    {
        if (b === undefined)
        {
            ret.set_float(Math.random() * a);
        }
        else
        {
            ret.set_float(Math.random() * (b - a) + a);
        }
    };
    SysExps.prototype.sqrt = function(ret, x)
    {
        ret.set_float(Math.sqrt(x));
    };
    SysExps.prototype.abs = function(ret, x)
    {
        ret.set_float(Math.abs(x));
    };
    SysExps.prototype.round = function(ret, x)
    {
        ret.set_int(Math.round(x));
    };
    SysExps.prototype.floor = function(ret, x)
    {
        ret.set_int(Math.floor(x));
    };
    SysExps.prototype.ceil = function(ret, x)
    {
        ret.set_int(Math.ceil(x));
    };
    SysExps.prototype.sin = function(ret, x)
    {
        ret.set_float(Math.sin(cr.to_radians(x)));
    };
    SysExps.prototype.cos = function(ret, x)
    {
        ret.set_float(Math.cos(cr.to_radians(x)));
    };
    SysExps.prototype.tan = function(ret, x)
    {
        ret.set_float(Math.tan(cr.to_radians(x)));
    };
    SysExps.prototype.asin = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.asin(x)));
    };
    SysExps.prototype.acos = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.acos(x)));
    };
    SysExps.prototype.atan = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.atan(x)));
    };
    SysExps.prototype.exp = function(ret, x)
    {
        ret.set_float(Math.exp(x));
    };
    SysExps.prototype.ln = function(ret, x)
    {
        ret.set_float(Math.log(x));
    };
    SysExps.prototype.log10 = function(ret, x)
    {
        ret.set_float(Math.log(x) / Math.LN10);
    };
    SysExps.prototype.max = function(ret)
    {
		var max_ = arguments[1];
		if (typeof max_ !== "number")
			max_ = 0;
		var i, len, a;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			a = arguments[i];
			if (typeof a !== "number")
				continue;		// ignore non-numeric types
			if (max_ < a)
				max_ = a;
		}
		ret.set_float(max_);
    };
    SysExps.prototype.min = function(ret)
    {
        var min_ = arguments[1];
		if (typeof min_ !== "number")
			min_ = 0;
		var i, len, a;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			a = arguments[i];
			if (typeof a !== "number")
				continue;		// ignore non-numeric types
			if (min_ > a)
				min_ = a;
		}
		ret.set_float(min_);
    };
    SysExps.prototype.dt = function(ret)
    {
        ret.set_float(this.runtime.dt);
    };
    SysExps.prototype.timescale = function(ret)
    {
        ret.set_float(this.runtime.timescale);
    };
    SysExps.prototype.wallclocktime = function(ret)
    {
        ret.set_float((Date.now() - this.runtime.start_time) / 1000.0);
    };
    SysExps.prototype.time = function(ret)
    {
        ret.set_float(this.runtime.kahanTime.sum);
    };
    SysExps.prototype.tickcount = function(ret)
    {
        ret.set_int(this.runtime.tickcount);
    };
    SysExps.prototype.objectcount = function(ret)
    {
        ret.set_int(this.runtime.objectcount);
    };
    SysExps.prototype.fps = function(ret)
    {
        ret.set_int(this.runtime.fps);
    };
    SysExps.prototype.loopindex = function(ret, name_)
    {
		var loop, i, len;
        if (!this.runtime.loop_stack.length)
        {
            ret.set_int(0);
            return;
        }
        if (name_)
        {
            for (i = 0, len = this.runtime.loop_stack.length; i < len; i++)
            {
                loop = this.runtime.loop_stack[i];
                if (loop.name === name_)
                {
                    ret.set_int(loop.index);
                    return;
                }
            }
            ret.set_int(0);
        }
        else
        {
			loop = this.runtime.getCurrentLoop();
			ret.set_int(loop ? loop.index : -1);
        }
    };
    SysExps.prototype.distance = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.distanceTo(x1, y1, x2, y2));
    };
    SysExps.prototype.angle = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.to_degrees(cr.angleTo(x1, y1, x2, y2)));
    };
    SysExps.prototype.scrollx = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollX);
    };
    SysExps.prototype.scrolly = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollY);
    };
    SysExps.prototype.newline = function(ret)
    {
        ret.set_string("\n");
    };
    SysExps.prototype.lerp = function(ret, a, b, x)
    {
        ret.set_float(cr.lerp(a, b, x));
    };
	SysExps.prototype.qarp = function(ret, a, b, c, x)
    {
        ret.set_float(cr.qarp(a, b, c, x));
    };
	SysExps.prototype.cubic = function(ret, a, b, c, d, x)
    {
        ret.set_float(cr.cubic(a, b, c, d, x));
    };
	SysExps.prototype.cosp = function(ret, a, b, x)
    {
        ret.set_float(cr.cosp(a, b, x));
    };
    SysExps.prototype.windowwidth = function(ret)
    {
        ret.set_int(this.runtime.width);
    };
    SysExps.prototype.windowheight = function(ret)
    {
        ret.set_int(this.runtime.height);
    };
	SysExps.prototype.uppercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toUpperCase() : "");
	};
	SysExps.prototype.lowercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toLowerCase() : "");
	};
	SysExps.prototype.clamp = function(ret, x, l, u)
	{
		if (x < l)
			ret.set_float(l);
		else if (x > u)
			ret.set_float(u);
		else
			ret.set_float(x);
	};
	SysExps.prototype.layerscale = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.scale);
	};
	SysExps.prototype.layeropacity = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.opacity * 100);
	};
	SysExps.prototype.layerscalerate = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.zoomRate);
	};
	SysExps.prototype.layerparallaxx = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxX * 100);
	};
	SysExps.prototype.layerparallaxy = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxY * 100);
	};
	SysExps.prototype.layoutscale = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_float(this.runtime.running_layout.scale);
		else
			ret.set_float(0);
	};
	SysExps.prototype.layoutangle = function (ret)
	{
		ret.set_float(cr.to_degrees(this.runtime.running_layout.angle));
	};
	SysExps.prototype.layerangle = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(cr.to_degrees(layer.angle));
	};
	SysExps.prototype.layoutwidth = function (ret)
	{
		ret.set_int(this.runtime.running_layout.width);
	};
	SysExps.prototype.layoutheight = function (ret)
	{
		ret.set_int(this.runtime.running_layout.height);
	};
	SysExps.prototype.find = function (ret, text, searchstr)
	{
		if (cr.is_string(text) && cr.is_string(searchstr))
			ret.set_int(text.search(new RegExp(cr.regexp_escape(searchstr), "i")));
		else
			ret.set_int(-1);
	};
	SysExps.prototype.left = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(0, n) : "");
	};
	SysExps.prototype.right = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(text.length - n) : "");
	};
	SysExps.prototype.mid = function (ret, text, index_, length_)
	{
		ret.set_string(cr.is_string(text) ? text.substr(index_, length_) : "");
	};
	SysExps.prototype.tokenat = function (ret, text, index_, sep)
	{
		if (cr.is_string(text) && cr.is_string(sep))
		{
			var arr = text.split(sep);
			var i = cr.floor(index_);
			if (i < 0 || i >= arr.length)
				ret.set_string("");
			else
				ret.set_string(arr[i]);
		}
		else
			ret.set_string("");
	};
	SysExps.prototype.tokencount = function (ret, text, sep)
	{
		if (cr.is_string(text) && text.length)
			ret.set_int(text.split(sep).length);
		else
			ret.set_int(0);
	};
	SysExps.prototype.replace = function (ret, text, find_, replace_)
	{
		if (cr.is_string(text) && cr.is_string(find_) && cr.is_string(replace_))
			ret.set_string(text.replace(new RegExp(cr.regexp_escape(find_), "gi"), replace_));
		else
			ret.set_string(cr.is_string(text) ? text : "");
	};
	SysExps.prototype.trim = function (ret, text)
	{
		ret.set_string(cr.is_string(text) ? text.trim() : "");
	};
	SysExps.prototype.pi = function (ret)
	{
		ret.set_float(cr.PI);
	};
	SysExps.prototype.layoutname = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_string(this.runtime.running_layout.name);
		else
			ret.set_string("");
	};
	SysExps.prototype.renderer = function (ret)
	{
		ret.set_string(this.runtime.gl ? "webgl" : "canvas2d");
	};
	SysExps.prototype.anglediff = function (ret, a, b)
	{
		ret.set_float(cr.to_degrees(cr.angleDiff(cr.to_radians(a), cr.to_radians(b))));
	};
	SysExps.prototype.choose = function (ret)
	{
		var index = cr.floor(Math.random() * (arguments.length - 1));
		ret.set_any(arguments[index + 1]);
	};
	SysExps.prototype.rgb = function (ret, r, g, b)
	{
		ret.set_int(cr.RGB(r, g, b));
	};
	SysExps.prototype.projectversion = function (ret)
	{
		ret.set_string(this.runtime.versionstr);
	};
	SysExps.prototype.projectname = function (ret)
	{
		ret.set_string(this.runtime.projectName);
	};
	SysExps.prototype.anglelerp = function (ret, a, b, x)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		var diff = cr.angleDiff(a, b);
		if (cr.angleClockwise(b, a))
		{
			ret.set_float(cr.to_clamped_degrees(a + diff * x));
		}
		else
		{
			ret.set_float(cr.to_clamped_degrees(a - diff * x));
		}
	};
	SysExps.prototype.anglerotate = function (ret, a, b, c)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		c = cr.to_radians(c);
		ret.set_float(cr.to_clamped_degrees(cr.angleRotate(a, b, c)));
	};
	SysExps.prototype.zeropad = function (ret, n, d)
	{
		var s = (n < 0 ? "-" : "");
		if (n < 0) n = -n;
		var zeroes = d - n.toString().length;
		for (var i = 0; i < zeroes; i++)
			s += "0";
		ret.set_string(s + n.toString());
	};
	SysExps.prototype.cpuutilisation = function (ret)
	{
		ret.set_float(this.runtime.cpuutilisation / 1000);
	};
	SysExps.prototype.viewportleft = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewLeft : 0);
	};
	SysExps.prototype.viewporttop = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewTop : 0);
	};
	SysExps.prototype.viewportright = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewRight : 0);
	};
	SysExps.prototype.viewportbottom = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewBottom : 0);
	};
	SysExps.prototype.loadingprogress = function (ret)
	{
		ret.set_float(this.runtime.loadingprogress);
	};
	SysExps.prototype.unlerp = function(ret, a, b, y)
    {
        ret.set_float(cr.unlerp(a, b, y));
    };
	SysExps.prototype.canvassnapshot = function (ret)
	{
		ret.set_string(this.runtime.snapshotData);
	};
	SysExps.prototype.urlencode = function (ret, s)
	{
		ret.set_string(encodeURIComponent(s));
	};
	SysExps.prototype.urldecode = function (ret, s)
	{
		ret.set_string(decodeURIComponent(s));
	};
	SysExps.prototype.canvastolayerx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, true) : 0);
	};
	SysExps.prototype.canvastolayery = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, false) : 0);
	};
	SysExps.prototype.layertocanvasx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, true) : 0);
	};
	SysExps.prototype.layertocanvasy = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, false) : 0);
	};
	SysExps.prototype.savestatejson = function (ret)
	{
		ret.set_string(this.runtime.lastSaveJson);
	};
	SysExps.prototype.imagememoryusage = function (ret)
	{
		if (this.runtime.glwrap)
			ret.set_float(Math.round(100 * this.runtime.glwrap.estimateVRAM() / (1024 * 1024)) / 100);
		else
			ret.set_float(0);
	};
	SysExps.prototype.regexsearch = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_int(str_ ? str_.search(regex) : -1);
	};
	SysExps.prototype.regexreplace = function (ret, str_, regex_, flags_, replace_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_string(str_ ? str_.replace(regex, replace_) : "");
	};
	var regexMatches = [];
	var lastMatchesStr = "";
	var lastMatchesRegex = "";
	var lastMatchesFlags = "";
	function updateRegexMatches(str_, regex_, flags_)
	{
		if (str_ === lastMatchesStr && regex_ === lastMatchesRegex && flags_ === lastMatchesFlags)
			return;
		var regex = getRegex(regex_, flags_);
		regexMatches = str_.match(regex);
		lastMatchesStr = str_;
		lastMatchesRegex = regex_;
		lastMatchesFlags = flags_;
	};
	SysExps.prototype.regexmatchcount = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		ret.set_int(regexMatches ? regexMatches.length : 0);
	};
	SysExps.prototype.regexmatchat = function (ret, str_, regex_, flags_, index_)
	{
		index_ = Math.floor(index_);
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		if (!regexMatches || index_ < 0 || index_ >= regexMatches.length)
			ret.set_string("");
		else
			ret.set_string(regexMatches[index_]);
	};
	SysExps.prototype.infinity = function (ret)
	{
		ret.set_float(Infinity);
	};
	SysExps.prototype.setbit = function (ret, n, b, v)
	{
		n = n | 0;
		b = b | 0;
		v = (v !== 0 ? 1 : 0);
		ret.set_int((n & ~(1 << b)) | (v << b));
	};
	SysExps.prototype.togglebit = function (ret, n, b)
	{
		n = n | 0;
		b = b | 0;
		ret.set_int(n ^ (1 << b));
	};
	SysExps.prototype.getbit = function (ret, n, b)
	{
		n = n | 0;
		b = b | 0;
		ret.set_int((n & (1 << b)) ? 1 : 0);
	};
	SysExps.prototype.originalwindowwidth = function (ret)
	{
		ret.set_int(this.runtime.original_width);
	};
	SysExps.prototype.originalwindowheight = function (ret)
	{
		ret.set_int(this.runtime.original_height);
	};
	sysProto.exps = new SysExps();
	sysProto.runWaits = function ()
	{
		var i, j, len, w, k, s, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		for (i = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			if (w.time === -1)		// signalled wait
			{
				if (!w.signalled)
					continue;		// not yet signalled
			}
			else					// timer wait
			{
				if (w.time > this.runtime.kahanTime.sum)
					continue;		// timer not yet expired
			}
			evinfo.current_event = w.ev;
			evinfo.actindex = w.actindex;
			evinfo.cndindex = 0;
			for (k in w.sols)
			{
				if (w.sols.hasOwnProperty(k))
				{
					s = this.runtime.types_by_index[parseInt(k, 10)].getCurrentSol();
					ss = w.sols[k];
					s.select_all = ss.sa;
					cr.shallowAssignArray(s.instances, ss.insts);
					freeSolStateObject(ss);
				}
			}
			w.ev.resume_actions_and_subevents();
			this.runtime.clearSol(w.solModifiers);
			w.deleteme = true;
		}
		for (i = 0, j = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			this.waits[j] = w;
			if (w.deleteme)
				freeWaitObject(w);
			else
				j++;
		}
		this.waits.length = j;
	};
}());
;
(function () {
	cr.add_common_aces = function (m)
	{
		var pluginProto = m[0].prototype;
		var singleglobal_ = m[1];
		var position_aces = m[3];
		var size_aces = m[4];
		var angle_aces = m[5];
		var appearance_aces = m[6];
		var zorder_aces = m[7];
		var effects_aces = m[8];
		if (!pluginProto.cnds)
			pluginProto.cnds = {};
		if (!pluginProto.acts)
			pluginProto.acts = {};
		if (!pluginProto.exps)
			pluginProto.exps = {};
		var cnds = pluginProto.cnds;
		var acts = pluginProto.acts;
		var exps = pluginProto.exps;
		if (position_aces)
		{
			cnds.CompareX = function (cmp, x)
			{
				return cr.do_cmp(this.x, cmp, x);
			};
			cnds.CompareY = function (cmp, y)
			{
				return cr.do_cmp(this.y, cmp, y);
			};
			cnds.IsOnScreen = function ()
			{
				var layer = this.layer;
				this.update_bbox();
				var bbox = this.bbox;
				return !(bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom);
			};
			cnds.IsOutsideLayout = function ()
			{
				this.update_bbox();
				var bbox = this.bbox;
				var layout = this.runtime.running_layout;
				return (bbox.right < 0 || bbox.bottom < 0 || bbox.left > layout.width || bbox.top > layout.height);
			};
			cnds.PickDistance = function (which, x, y)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var dist = cr.distanceTo(inst.x, inst.y, x, y);
				var i, len, d;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					d = cr.distanceTo(inst.x, inst.y, x, y);
					if ((which === 0 && d < dist) || (which === 1 && d > dist))
					{
						dist = d;
						pickme = inst;
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			acts.SetX = function (x)
			{
				if (this.x !== x)
				{
					this.x = x;
					this.set_bbox_changed();
				}
			};
			acts.SetY = function (y)
			{
				if (this.y !== y)
				{
					this.y = y;
					this.set_bbox_changed();
				}
			};
			acts.SetPos = function (x, y)
			{
				if (this.x !== x || this.y !== y)
				{
					this.x = x;
					this.y = y;
					this.set_bbox_changed();
				}
			};
			acts.SetPosToObject = function (obj, imgpt)
			{
				var inst = obj.getPairedInstance(this);
				if (!inst)
					return;
				var newx, newy;
				if (inst.getImagePoint)
				{
					newx = inst.getImagePoint(imgpt, true);
					newy = inst.getImagePoint(imgpt, false);
				}
				else
				{
					newx = inst.x;
					newy = inst.y;
				}
				if (this.x !== newx || this.y !== newy)
				{
					this.x = newx;
					this.y = newy;
					this.set_bbox_changed();
				}
			};
			acts.MoveForward = function (dist)
			{
				if (dist !== 0)
				{
					this.x += Math.cos(this.angle) * dist;
					this.y += Math.sin(this.angle) * dist;
					this.set_bbox_changed();
				}
			};
			acts.MoveAtAngle = function (a, dist)
			{
				if (dist !== 0)
				{
					this.x += Math.cos(cr.to_radians(a)) * dist;
					this.y += Math.sin(cr.to_radians(a)) * dist;
					this.set_bbox_changed();
				}
			};
			exps.X = function (ret)
			{
				ret.set_float(this.x);
			};
			exps.Y = function (ret)
			{
				ret.set_float(this.y);
			};
			exps.dt = function (ret)
			{
				ret.set_float(this.runtime.getDt(this));
			};
		}
		if (size_aces)
		{
			cnds.CompareWidth = function (cmp, w)
			{
				return cr.do_cmp(this.width, cmp, w);
			};
			cnds.CompareHeight = function (cmp, h)
			{
				return cr.do_cmp(this.height, cmp, h);
			};
			acts.SetWidth = function (w)
			{
				if (this.width !== w)
				{
					this.width = w;
					this.set_bbox_changed();
				}
			};
			acts.SetHeight = function (h)
			{
				if (this.height !== h)
				{
					this.height = h;
					this.set_bbox_changed();
				}
			};
			acts.SetSize = function (w, h)
			{
				if (this.width !== w || this.height !== h)
				{
					this.width = w;
					this.height = h;
					this.set_bbox_changed();
				}
			};
			exps.Width = function (ret)
			{
				ret.set_float(this.width);
			};
			exps.Height = function (ret)
			{
				ret.set_float(this.height);
			};
			exps.BBoxLeft = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.left);
			};
			exps.BBoxTop = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.top);
			};
			exps.BBoxRight = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.right);
			};
			exps.BBoxBottom = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.bottom);
			};
		}
		if (angle_aces)
		{
			cnds.AngleWithin = function (within, a)
			{
				return cr.angleDiff(this.angle, cr.to_radians(a)) <= cr.to_radians(within);
			};
			cnds.IsClockwiseFrom = function (a)
			{
				return cr.angleClockwise(this.angle, cr.to_radians(a));
			};
			cnds.IsBetweenAngles = function (a, b)
			{
				var lower = cr.to_clamped_radians(a);
				var upper = cr.to_clamped_radians(b);
				var angle = cr.clamp_angle(this.angle);
				var obtuse = (!cr.angleClockwise(upper, lower));
				if (obtuse)
					return !(!cr.angleClockwise(angle, lower) && cr.angleClockwise(angle, upper));
				else
					return cr.angleClockwise(angle, lower) && !cr.angleClockwise(angle, upper);
			};
			acts.SetAngle = function (a)
			{
				var newangle = cr.to_radians(cr.clamp_angle_degrees(a));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.RotateClockwise = function (a)
			{
				if (a !== 0 && !isNaN(a))
				{
					this.angle += cr.to_radians(a);
					this.angle = cr.clamp_angle(this.angle);
					this.set_bbox_changed();
				}
			};
			acts.RotateCounterclockwise = function (a)
			{
				if (a !== 0 && !isNaN(a))
				{
					this.angle -= cr.to_radians(a);
					this.angle = cr.clamp_angle(this.angle);
					this.set_bbox_changed();
				}
			};
			acts.RotateTowardAngle = function (amt, target)
			{
				var newangle = cr.angleRotate(this.angle, cr.to_radians(target), cr.to_radians(amt));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.RotateTowardPosition = function (amt, x, y)
			{
				var dx = x - this.x;
				var dy = y - this.y;
				var target = Math.atan2(dy, dx);
				var newangle = cr.angleRotate(this.angle, target, cr.to_radians(amt));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.SetTowardPosition = function (x, y)
			{
				var dx = x - this.x;
				var dy = y - this.y;
				var newangle = Math.atan2(dy, dx);
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			exps.Angle = function (ret)
			{
				ret.set_float(cr.to_clamped_degrees(this.angle));
			};
		}
		if (!singleglobal_)
		{
			cnds.CompareInstanceVar = function (iv, cmp, val)
			{
				return cr.do_cmp(this.instance_vars[iv], cmp, val);
			};
			cnds.IsBoolInstanceVarSet = function (iv)
			{
				return this.instance_vars[iv];
			};
			cnds.PickInstVarHiLow = function (which, iv)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var val = inst.instance_vars[iv];
				var i, len, v;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					v = inst.instance_vars[iv];
					if ((which === 0 && v < val) || (which === 1 && v > val))
					{
						val = v;
						pickme = inst;
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			cnds.PickByUID = function (u)
			{
				var i, len, j, inst, families, instances, sol;
				var cnd = this.runtime.getCurrentCondition();
				if (cnd.inverted)
				{
					sol = this.getCurrentSol();
					if (sol.select_all)
					{
						sol.select_all = false;
						sol.instances.length = 0;
						sol.else_instances.length = 0;
						instances = this.instances;
						for (i = 0, len = instances.length; i < len; i++)
						{
							inst = instances[i];
							if (inst.uid === u)
								sol.else_instances.push(inst);
							else
								sol.instances.push(inst);
						}
						this.applySolToContainer();
						return !!sol.instances.length;
					}
					else
					{
						for (i = 0, j = 0, len = sol.instances.length; i < len; i++)
						{
							inst = sol.instances[i];
							sol.instances[j] = inst;
							if (inst.uid === u)
							{
								sol.else_instances.push(inst);
							}
							else
								j++;
						}
						sol.instances.length = j;
						this.applySolToContainer();
						return !!sol.instances.length;
					}
				}
				else
				{
					inst = this.runtime.getObjectByUID(u);
					if (!inst)
						return false;
					sol = this.getCurrentSol();
					if (!sol.select_all && sol.instances.indexOf(inst) === -1)
						return false;		// not picked
					if (this.is_family)
					{
						families = inst.type.families;
						for (i = 0, len = families.length; i < len; i++)
						{
							if (families[i] === this)
							{
								sol.pick_one(inst);
								this.applySolToContainer();
								return true;
							}
						}
					}
					else if (inst.type === this)
					{
						sol.pick_one(inst);
						this.applySolToContainer();
						return true;
					}
					return false;
				}
			};
			cnds.OnCreated = function ()
			{
				return true;
			};
			cnds.OnDestroyed = function ()
			{
				return true;
			};
			acts.SetInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] = val;
					else
						myinstvars[iv] = parseFloat(val);
				}
				else if (cr.is_string(myinstvars[iv]))
				{
					if (cr.is_string(val))
						myinstvars[iv] = val;
					else
						myinstvars[iv] = val.toString();
				}
				else
;
			};
			acts.AddInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] += val;
					else
						myinstvars[iv] += parseFloat(val);
				}
				else if (cr.is_string(myinstvars[iv]))
				{
					if (cr.is_string(val))
						myinstvars[iv] += val;
					else
						myinstvars[iv] += val.toString();
				}
				else
;
			};
			acts.SubInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] -= val;
					else
						myinstvars[iv] -= parseFloat(val);
				}
				else
;
			};
			acts.SetBoolInstanceVar = function (iv, val)
			{
				this.instance_vars[iv] = val ? 1 : 0;
			};
			acts.ToggleBoolInstanceVar = function (iv)
			{
				this.instance_vars[iv] = 1 - this.instance_vars[iv];
			};
			acts.Destroy = function ()
			{
				this.runtime.DestroyInstance(this);
			};
			if (!acts.LoadFromJsonString)
			{
				acts.LoadFromJsonString = function (str_)
				{
					var o, i, len, binst;
					try {
						o = JSON.parse(str_);
					}
					catch (e) {
						return;
					}
					this.runtime.loadInstanceFromJSON(this, o, true);
					if (this.afterLoad)
						this.afterLoad();
					if (this.behavior_insts)
					{
						for (i = 0, len = this.behavior_insts.length; i < len; ++i)
						{
							binst = this.behavior_insts[i];
							if (binst.afterLoad)
								binst.afterLoad();
						}
					}
				};
			}
			exps.Count = function (ret)
			{
				var count = ret.object_class.instances.length;
				var i, len, inst;
				for (i = 0, len = this.runtime.createRow.length; i < len; i++)
				{
					inst = this.runtime.createRow[i];
					if (ret.object_class.is_family)
					{
						if (inst.type.families.indexOf(ret.object_class) >= 0)
							count++;
					}
					else
					{
						if (inst.type === ret.object_class)
							count++;
					}
				}
				ret.set_int(count);
			};
			exps.PickedCount = function (ret)
			{
				ret.set_int(ret.object_class.getCurrentSol().getObjects().length);
			};
			exps.UID = function (ret)
			{
				ret.set_int(this.uid);
			};
			exps.IID = function (ret)
			{
				ret.set_int(this.get_iid());
			};
			if (!exps.AsJSON)
			{
				exps.AsJSON = function (ret)
				{
					ret.set_string(JSON.stringify(this.runtime.saveInstanceToJSON(this, true)));
				};
			}
		}
		if (appearance_aces)
		{
			cnds.IsVisible = function ()
			{
				return this.visible;
			};
			acts.SetVisible = function (v)
			{
				if (!v !== !this.visible)
				{
					this.visible = v;
					this.runtime.redraw = true;
				}
			};
			cnds.CompareOpacity = function (cmp, x)
			{
				return cr.do_cmp(cr.round6dp(this.opacity * 100), cmp, x);
			};
			acts.SetOpacity = function (x)
			{
				var new_opacity = x / 100.0;
				if (new_opacity < 0)
					new_opacity = 0;
				else if (new_opacity > 1)
					new_opacity = 1;
				if (new_opacity !== this.opacity)
				{
					this.opacity = new_opacity;
					this.runtime.redraw = true;
				}
			};
			exps.Opacity = function (ret)
			{
				ret.set_float(cr.round6dp(this.opacity * 100.0));
			};
		}
		if (zorder_aces)
		{
			cnds.IsOnLayer = function (layer_)
			{
				if (!layer_)
					return false;
				return this.layer === layer_;
			};
			cnds.PickTopBottom = function (which_)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var i, len;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					if (which_ === 0)
					{
						if (inst.layer.index > pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() > pickme.get_zindex()))
						{
							pickme = inst;
						}
					}
					else
					{
						if (inst.layer.index < pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() < pickme.get_zindex()))
						{
							pickme = inst;
						}
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			acts.MoveToTop = function ()
			{
				var zindex = this.get_zindex();
				if (zindex === this.layer.instances.length - 1)
					return;
				cr.arrayRemove(this.layer.instances, zindex);
				this.layer.instances.push(this);
				this.runtime.redraw = true;
				this.layer.zindices_stale = true;
			};
			acts.MoveToBottom = function ()
			{
				var zindex = this.get_zindex();
				if (zindex === 0)
					return;
				cr.arrayRemove(this.layer.instances, zindex);
				this.layer.instances.unshift(this);
				this.runtime.redraw = true;
				this.layer.zindices_stale = true;
			};
			acts.MoveToLayer = function (layerMove)
			{
				if (!layerMove || layerMove == this.layer)
					return;
				cr.arrayRemove(this.layer.instances, this.get_zindex());
				this.layer.zindices_stale = true;
				this.layer = layerMove;
				this.zindex = layerMove.instances.length;
				layerMove.instances.push(this);
				this.runtime.redraw = true;
			};
			acts.ZMoveToObject = function (where_, obj_)
			{
				var isafter = (where_ === 0);
				if (!obj_)
					return;
				var other = obj_.getFirstPicked(this);
				if (!other || other.uid === this.uid)
					return;
				if (this.layer.index !== other.layer.index)
				{
					cr.arrayRemove(this.layer.instances, this.get_zindex());
					this.layer.zindices_stale = true;
					this.layer = other.layer;
					this.zindex = other.layer.instances.length;
					other.layer.instances.push(this);
				}
				var myZ = this.get_zindex();
				var insertZ = other.get_zindex();
				cr.arrayRemove(this.layer.instances, myZ);
				if (myZ < insertZ)
					insertZ--;
				if (isafter)
					insertZ++;
				if (insertZ === this.layer.instances.length)
					this.layer.instances.push(this);
				else
					this.layer.instances.splice(insertZ, 0, this);
				this.layer.zindices_stale = true;
				this.runtime.redraw = true;
			};
			exps.LayerNumber = function (ret)
			{
				ret.set_int(this.layer.number);
			};
			exps.LayerName = function (ret)
			{
				ret.set_string(this.layer.name);
			};
			exps.ZIndex = function (ret)
			{
				ret.set_int(this.get_zindex());
			};
		}
		if (effects_aces)
		{
			acts.SetEffectEnabled = function (enable_, effectname_)
			{
				if (!this.runtime.glwrap)
					return;
				var i = this.type.getEffectIndexByName(effectname_);
				if (i < 0)
					return;		// effect name not found
				var enable = (enable_ === 1);
				if (this.active_effect_flags[i] === enable)
					return;		// no change
				this.active_effect_flags[i] = enable;
				this.updateActiveEffects();
				this.runtime.redraw = true;
			};
			acts.SetEffectParam = function (effectname_, index_, value_)
			{
				if (!this.runtime.glwrap)
					return;
				var i = this.type.getEffectIndexByName(effectname_);
				if (i < 0)
					return;		// effect name not found
				var et = this.type.effect_types[i];
				var params = this.effect_params[i];
				index_ = Math.floor(index_);
				if (index_ < 0 || index_ >= params.length)
					return;		// effect index out of bounds
				if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
					value_ /= 100.0;
				if (params[index_] === value_)
					return;		// no change
				params[index_] = value_;
				if (et.active)
					this.runtime.redraw = true;
			};
		}
	};
	cr.set_bbox_changed = function ()
	{
		this.bbox_changed = true;      		// will recreate next time box requested
		this.cell_changed = true;
		this.type.any_cell_changed = true;	// avoid unnecessary updateAllBBox() calls
		this.runtime.redraw = true;     	// assume runtime needs to redraw
		var i, len, callbacks = this.bbox_changed_callbacks;
		for (i = 0, len = callbacks.length; i < len; ++i)
		{
			callbacks[i](this);
		}
	};
	cr.add_bbox_changed_callback = function (f)
	{
		if (f)
		{
			this.bbox_changed_callbacks.push(f);
		}
	};
	cr.update_bbox = function ()
	{
		if (!this.bbox_changed)
			return;                 // bounding box not changed
		var bbox = this.bbox;
		var bquad = this.bquad;
		bbox.set(this.x, this.y, this.x + this.width, this.y + this.height);
		bbox.offset(-this.hotspotX * this.width, -this.hotspotY * this.height);
		if (!this.angle)
		{
			bquad.set_from_rect(bbox);    // make bounding quad from box
		}
		else
		{
			bbox.offset(-this.x, -this.y);       			// translate to origin
			bquad.set_from_rotated_rect(bbox, this.angle);	// rotate around origin
			bquad.offset(this.x, this.y);      				// translate back to original position
			bquad.bounding_box(bbox);
		}
		bbox.normalize();
		this.bbox_changed = false;  // bounding box up to date
	};
	var tmprc = new cr.rect(0, 0, 0, 0);
	cr.update_collision_cell = function ()
	{
		if (!this.cell_changed || !this.collisionsEnabled)
			return;
		this.update_bbox();
		var mygrid = this.type.collision_grid;
		var collcells = this.collcells;
		var bbox = this.bbox;
		tmprc.set(mygrid.XToCell(bbox.left), mygrid.YToCell(bbox.top), mygrid.XToCell(bbox.right), mygrid.YToCell(bbox.bottom));
		if (collcells.equals(tmprc))
			return;
		if (collcells.right < collcells.left)
			mygrid.update(this, null, tmprc);		// first insertion with invalid rect: don't provide old range
		else
			mygrid.update(this, collcells, tmprc);
		collcells.copy(tmprc);
		this.cell_changed = false;
	};
	cr.inst_contains_pt = function (x, y)
	{
		if (!this.bbox.contains_pt(x, y))
			return false;
		if (!this.bquad.contains_pt(x, y))
			return false;
		if (this.collision_poly && !this.collision_poly.is_empty())
		{
			this.collision_poly.cache_poly(this.width, this.height, this.angle);
			return this.collision_poly.contains_pt(x - this.x, y - this.y);
		}
		else
			return true;
	};
	cr.inst_get_iid = function ()
	{
		this.type.updateIIDs();
		return this.iid;
	};
	cr.inst_get_zindex = function ()
	{
		this.layer.updateZIndices();
		return this.zindex;
	};
	cr.inst_updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et, inst;
		for (i = 0, len = this.active_effect_flags.length; i < len; i++)
		{
			if (this.active_effect_flags[i])
				this.active_effect_types.push(this.type.effect_types[i]);
		}
		this.uses_shaders = !!this.active_effect_types.length;
	};
	cr.inst_toString = function ()
	{
		return "Inst" + this.puid;
	};
	cr.type_getFirstPicked = function (frominst)
	{
		if (frominst && frominst.is_contained && frominst.type != this)
		{
			var i, len, s;
			for (i = 0, len = frominst.siblings.length; i < len; i++)
			{
				s = frominst.siblings[i];
				if (s.type == this)
					return s;
			}
		}
		var instances = this.getCurrentSol().getObjects();
		if (instances.length)
			return instances[0];
		else
			return null;
	};
	cr.type_getPairedInstance = function (inst)
	{
		var instances = this.getCurrentSol().getObjects();
		if (instances.length)
			return instances[inst.get_iid() % instances.length];
		else
			return null;
	};
	cr.type_updateIIDs = function ()
	{
		if (!this.stale_iids || this.is_family)
			return;		// up to date or is family - don't want family to overwrite IIDs
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].iid = i;
		var next_iid = i;
		var createRow = this.runtime.createRow;
		for (i = 0, len = createRow.length; i < len; ++i)
		{
			if (createRow[i].type === this)
				createRow[i].iid = next_iid++;
		}
		this.stale_iids = false;
	};
	cr.type_getInstanceByIID = function (i)
	{
		if (i < this.instances.length)
			return this.instances[i];
		i -= this.instances.length;
		var createRow = this.runtime.createRow;
		var j, lenj;
		for (j = 0, lenj = createRow.length; j < lenj; ++j)
		{
			if (createRow[j].type === this)
			{
				if (i === 0)
					return createRow[j];
				--i;
			}
		}
;
		return null;
	};
	cr.type_getCurrentSol = function ()
	{
		return this.solstack[this.cur_sol];
	};
	cr.type_pushCleanSol = function ()
	{
		this.cur_sol++;
		if (this.cur_sol === this.solstack.length)
			this.solstack.push(new cr.selection(this));
		else
			this.solstack[this.cur_sol].select_all = true;  // else clear next SOL
	};
	cr.type_pushCopySol = function ()
	{
		this.cur_sol++;
		if (this.cur_sol === this.solstack.length)
			this.solstack.push(new cr.selection(this));
		var clonesol = this.solstack[this.cur_sol];
		var prevsol = this.solstack[this.cur_sol - 1];
		if (prevsol.select_all)
			clonesol.select_all = true;
		else
		{
			clonesol.select_all = false;
			cr.shallowAssignArray(clonesol.instances, prevsol.instances);
			cr.shallowAssignArray(clonesol.else_instances, prevsol.else_instances);
		}
	};
	cr.type_popSol = function ()
	{
;
		this.cur_sol--;
	};
	cr.type_getBehaviorByName = function (behname)
	{
		var i, len, j, lenj, f, index = 0;
		if (!this.is_family)
		{
			for (i = 0, len = this.families.length; i < len; i++)
			{
				f = this.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (behname === f.behaviors[j].name)
					{
						this.extra["lastBehIndex"] = index;
						return f.behaviors[j];
					}
					index++;
				}
			}
		}
		for (i = 0, len = this.behaviors.length; i < len; i++) {
			if (behname === this.behaviors[i].name)
			{
				this.extra["lastBehIndex"] = index;
				return this.behaviors[i];
			}
			index++;
		}
		return null;
	};
	cr.type_getBehaviorIndexByName = function (behname)
	{
		var b = this.getBehaviorByName(behname);
		if (b)
			return this.extra["lastBehIndex"];
		else
			return -1;
	};
	cr.type_getEffectIndexByName = function (name_)
	{
		var i, len;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			if (this.effect_types[i].name === name_)
				return i;
		}
		return -1;
	};
	cr.type_applySolToContainer = function ()
	{
		if (!this.is_contained || this.is_family)
			return;
		var i, len, j, lenj, t, sol, sol2;
		this.updateIIDs();
		sol = this.getCurrentSol();
		var select_all = sol.select_all;
		var es = this.runtime.getCurrentEventStack();
		var orblock = es && es.current_event && es.current_event.orblock;
		for (i = 0, len = this.container.length; i < len; i++)
		{
			t = this.container[i];
			if (t === this)
				continue;
			t.updateIIDs();
			sol2 = t.getCurrentSol();
			sol2.select_all = select_all;
			if (!select_all)
			{
				sol2.instances.length = sol.instances.length;
				for (j = 0, lenj = sol.instances.length; j < lenj; j++)
					sol2.instances[j] = t.getInstanceByIID(sol.instances[j].iid);
				if (orblock)
				{
					sol2.else_instances.length = sol.else_instances.length;
					for (j = 0, lenj = sol.else_instances.length; j < lenj; j++)
						sol2.else_instances[j] = t.getInstanceByIID(sol.else_instances[j].iid);
				}
			}
		}
	};
	cr.type_toString = function ()
	{
		return "Type" + this.sid;
	};
	cr.do_cmp = function (x, cmp, y)
	{
		if (typeof x === "undefined" || typeof y === "undefined")
			return false;
		switch (cmp)
		{
			case 0:     // equal
				return x === y;
			case 1:     // not equal
				return x !== y;
			case 2:     // less
				return x < y;
			case 3:     // less/equal
				return x <= y;
			case 4:     // greater
				return x > y;
			case 5:     // greater/equal
				return x >= y;
			default:
;
				return false;
		}
	};
})();
cr.shaders = {};
;
;
cr.plugins_.AJAX = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var isNodeWebkit = false;
	var path = null;
	var fs = null;
	var nw_appfolder = "";
	var pluginProto = cr.plugins_.AJAX.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.lastData = "";
		this.curTag = "";
		this.progress = 0;
		this.timeout = -1;
		isNodeWebkit = this.runtime.isNodeWebkit;
		if (isNodeWebkit)
		{
			path = require("path");
			fs = require("fs");
			nw_appfolder = path["dirname"](process["execPath"]) + "\\";
		}
	};
	var instanceProto = pluginProto.Instance.prototype;
	var theInstance = null;
	window["C2_AJAX_DCSide"] = function (event_, tag_, param_)
	{
		if (!theInstance)
			return;
		if (event_ === "success")
		{
			theInstance.curTag = tag_;
			theInstance.lastData = param_;
			theInstance.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnComplete, theInstance);
		}
		else if (event_ === "error")
		{
			theInstance.curTag = tag_;
			theInstance.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnError, theInstance);
		}
		else if (event_ === "progress")
		{
			theInstance.progress = param_;
			theInstance.curTag = tag_;
			theInstance.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnProgress, theInstance);
		}
	};
	instanceProto.onCreate = function()
	{
		theInstance = this;
	};
	instanceProto.saveToJSON = function ()
	{
		return { "lastData": this.lastData };
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.lastData = o["lastData"];
		this.curTag = "";
		this.progress = 0;
	};
	var next_request_headers = {};
	instanceProto.doRequest = function (tag_, url_, method_, data_)
	{
		if (this.runtime.isDirectCanvas)
		{
			AppMobi["webview"]["execute"]('C2_AJAX_WebSide("' + tag_ + '", "' + url_ + '", "' + method_ + '", ' + (data_ ? '"' + data_ + '"' : "null") + ');');
			return;
		}
		var self = this;
		var request = null;
		var doErrorFunc = function ()
		{
			self.curTag = tag_;
			self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnError, self);
		};
		var errorFunc = function ()
		{
			if (isNodeWebkit)
			{
				var filepath = nw_appfolder + url_;
				if (fs["existsSync"](filepath))
				{
					fs["readFile"](filepath, {"encoding": "utf8"}, function (err, data) {
						if (err)
						{
							doErrorFunc();
							return;
						}
						self.lastData = data.replace(/\r\n/g, "\n")
						self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnComplete, self);
					});
				}
				else
					doErrorFunc();
			}
			else
				doErrorFunc();
		};
		var progressFunc = function (e)
		{
			if (!e["lengthComputable"])
				return;
			self.progress = e.loaded / e.total;
			self.curTag = tag_;
			self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnProgress, self);
		};
		try
		{
			if (this.runtime.isWindowsPhone8)
				request = new ActiveXObject("Microsoft.XMLHTTP");
			else
				request = new XMLHttpRequest();
			request.onreadystatechange = function()
			{
				if (request.readyState === 4)
				{
					self.curTag = tag_;
					if (request.responseText)
						self.lastData = request.responseText.replace(/\r\n/g, "\n");		// fix windows style line endings
					else
						self.lastData = "";
					if (request.status >= 400)
						self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnError, self);
					else
					{
						if (!isNodeWebkit || self.lastData.length)
							self.runtime.trigger(cr.plugins_.AJAX.prototype.cnds.OnComplete, self);
					}
				}
			};
			if (!this.runtime.isWindowsPhone8)
			{
				request.onerror = errorFunc;
				request.ontimeout = errorFunc;
				request.onabort = errorFunc;
				request["onprogress"] = progressFunc;
			}
			request.open(method_, url_);
			if (!this.runtime.isWindowsPhone8)
			{
				if (this.timeout >= 0 && typeof request["timeout"] !== "undefined")
					request["timeout"] = this.timeout;
			}
			try {
				request.responseType = "text";
			} catch (e) {}
			if (data_)
			{
				if (request["setRequestHeader"])
				{
					request["setRequestHeader"]("Content-Type", "application/x-www-form-urlencoded");
				}
			}
			if (request["setRequestHeader"])
			{
				var p;
				for (p in next_request_headers)
				{
					if (next_request_headers.hasOwnProperty(p))
					{
						try {
							request["setRequestHeader"](p, next_request_headers[p]);
						}
						catch (e) {}
					}
				}
				next_request_headers = {};
			}
			if (data_)
				request.send(data_);
			else
				request.send();
		}
		catch (e)
		{
			errorFunc();
		}
	};
	function Cnds() {};
	Cnds.prototype.OnComplete = function (tag)
	{
		return cr.equals_nocase(tag, this.curTag);
	};
	Cnds.prototype.OnError = function (tag)
	{
		return cr.equals_nocase(tag, this.curTag);
	};
	Cnds.prototype.OnProgress = function (tag)
	{
		return cr.equals_nocase(tag, this.curTag);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Request = function (tag_, url_)
	{
		this.doRequest(tag_, url_, "GET");
	};
	Acts.prototype.RequestFile = function (tag_, file_)
	{
		this.doRequest(tag_, file_, "GET");
	};
	Acts.prototype.Post = function (tag_, url_, data_, method_)
	{
		this.doRequest(tag_, url_, method_, data_);
	};
	Acts.prototype.SetTimeout = function (t)
	{
		this.timeout = t * 1000;
	};
	Acts.prototype.SetHeader = function (n, v)
	{
		next_request_headers[n] = v;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LastData = function (ret)
	{
		ret.set_string(this.lastData);
	};
	Exps.prototype.Progress = function (ret)
	{
		ret.set_float(this.progress);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Arr = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Arr.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var arrCache = [];
	function allocArray()
	{
		if (arrCache.length)
			return arrCache.pop();
		else
			return [];
	};
	if (!Array.isArray)
	{
		Array.isArray = function (vArg) {
			return Object.prototype.toString.call(vArg) === "[object Array]";
		};
	}
	function freeArray(a)
	{
		var i, len;
		for (i = 0, len = a.length; i < len; i++)
		{
			if (Array.isArray(a[i]))
				freeArray(a[i]);
		}
		a.length = 0;
		arrCache.push(a);
	};
	instanceProto.onCreate = function()
	{
		this.cx = this.properties[0];
		this.cy = this.properties[1];
		this.cz = this.properties[2];
		if (!this.recycled)
			this.arr = allocArray();
		var a = this.arr;
		a.length = this.cx;
		var x, y, z;
		for (x = 0; x < this.cx; x++)
		{
			if (!a[x])
				a[x] = allocArray();
			a[x].length = this.cy;
			for (y = 0; y < this.cy; y++)
			{
				if (!a[x][y])
					a[x][y] = allocArray();
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = 0;
			}
		}
		this.forX = 0;
		this.forY = 0;
		this.forZ = 0;
	};
	instanceProto.onDestroy = function ()
	{
		var x;
		for (x = 0; x < this.cx; x++)
			freeArray(this.arr[x]);		// will recurse down and recycle other arrays
		this.arr.length = 0;
	};
	instanceProto.at = function (x, y, z)
	{
		x = Math.floor(x);
		y = Math.floor(y);
		z = Math.floor(z);
		if (isNaN(x) || x < 0 || x > this.cx - 1)
			return 0;
		if (isNaN(y) || y < 0 || y > this.cy - 1)
			return 0;
		if (isNaN(z) || z < 0 || z > this.cz - 1)
			return 0;
		return this.arr[x][y][z];
	};
	instanceProto.set = function (x, y, z, val)
	{
		x = Math.floor(x);
		y = Math.floor(y);
		z = Math.floor(z);
		if (isNaN(x) || x < 0 || x > this.cx - 1)
			return;
		if (isNaN(y) || y < 0 || y > this.cy - 1)
			return;
		if (isNaN(z) || z < 0 || z > this.cz - 1)
			return;
		this.arr[x][y][z] = val;
	};
	instanceProto.getAsJSON = function ()
	{
		return JSON.stringify({
			"c2array": true,
			"size": [this.cx, this.cy, this.cz],
			"data": this.arr
		});
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"size": [this.cx, this.cy, this.cz],
			"data": this.arr
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		var sz = o["size"];
		this.cx = sz[0];
		this.cy = sz[1];
		this.cz = sz[2];
		this.arr = o["data"];
	};
	instanceProto.setSize = function (w, h, d)
	{
		if (w < 0) w = 0;
		if (h < 0) h = 0;
		if (d < 0) d = 0;
		if (this.cx === w && this.cy === h && this.cz === d)
			return;		// no change
		this.cx = w;
		this.cy = h;
		this.cz = d;
		var x, y, z;
		var a = this.arr;
		a.length = w;
		for (x = 0; x < this.cx; x++)
		{
			if (cr.is_undefined(a[x]))
				a[x] = allocArray();
			a[x].length = h;
			for (y = 0; y < this.cy; y++)
			{
				if (cr.is_undefined(a[x][y]))
					a[x][y] = allocArray();
				a[x][y].length = d;
				for (z = 0; z < this.cz; z++)
				{
					if (cr.is_undefined(a[x][y][z]))
						a[x][y][z] = 0;
				}
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareX = function (x, cmp, val)
	{
		return cr.do_cmp(this.at(x, 0, 0), cmp, val);
	};
	Cnds.prototype.CompareXY = function (x, y, cmp, val)
	{
		return cr.do_cmp(this.at(x, y, 0), cmp, val);
	};
	Cnds.prototype.CompareXYZ = function (x, y, z, cmp, val)
	{
		return cr.do_cmp(this.at(x, y, z), cmp, val);
	};
	instanceProto.doForEachTrigger = function (current_event)
	{
		this.runtime.pushCopySol(current_event.solModifiers);
		current_event.retrigger();
		this.runtime.popSol(current_event.solModifiers);
	};
	Cnds.prototype.ArrForEach = function (dims)
	{
        var current_event = this.runtime.getCurrentEventStack().current_event;
		this.forX = 0;
		this.forY = 0;
		this.forZ = 0;
		switch (dims) {
		case 0:
			for (this.forX = 0; this.forX < this.cx; this.forX++)
			{
				for (this.forY = 0; this.forY < this.cy; this.forY++)
				{
					for (this.forZ = 0; this.forZ < this.cz; this.forZ++)
					{
						this.doForEachTrigger(current_event);
					}
				}
			}
			break;
		case 1:
			for (this.forX = 0; this.forX < this.cx; this.forX++)
			{
				for (this.forY = 0; this.forY < this.cy; this.forY++)
				{
					this.doForEachTrigger(current_event);
				}
			}
			break;
		case 2:
			for (this.forX = 0; this.forX < this.cx; this.forX++)
			{
				this.doForEachTrigger(current_event);
			}
			break;
		}
		this.forX = 0;
		this.forY = 0;
		this.forZ = 0;
		return false;
	};
	Cnds.prototype.CompareCurrent = function (cmp, val)
	{
		return cr.do_cmp(this.at(this.forX, this.forY, this.forZ), cmp, val);
	};
	Cnds.prototype.Contains = function(val)
	{
		var x, y, z;
		for (x = 0; x < this.cx; x++)
		{
			for (y = 0; y < this.cy; y++)
			{
				for (z = 0; z < this.cz; z++)
				{
					if (this.arr[x][y][z] === val)
						return true;
				}
			}
		}
		return false;
	};
	Cnds.prototype.IsEmpty = function ()
	{
		return this.cx === 0 || this.cy === 0 || this.cz === 0;
	};
	Cnds.prototype.CompareSize = function (axis, cmp, value)
	{
		var s = 0;
		switch (axis) {
		case 0:
			s = this.cx;
			break;
		case 1:
			s = this.cy;
			break;
		case 2:
			s = this.cz;
			break;
		}
		return cr.do_cmp(s, cmp, value);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Clear = function ()
	{
		var x, y, z;
		for (x = 0; x < this.cx; x++)
			for (y = 0; y < this.cy; y++)
				for (z = 0; z < this.cz; z++)
					this.arr[x][y][z] = 0;
	};
	Acts.prototype.SetSize = function (w, h, d)
	{
		this.setSize(w, h, d);
	};
	Acts.prototype.SetX = function (x, val)
	{
		this.set(x, 0, 0, val);
	};
	Acts.prototype.SetXY = function (x, y, val)
	{
		this.set(x, y, 0, val);
	};
	Acts.prototype.SetXYZ = function (x, y, z, val)
	{
		this.set(x, y, z, val);
	};
	Acts.prototype.Push = function (where, value, axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		switch (axis) {
		case 0:	// X axis
			if (where === 0)	// back
			{
				x = a.length;
				a.push(allocArray());
			}
			else				// front
			{
				x = 0;
				a.unshift(allocArray());
			}
			a[x].length = this.cy;
			for ( ; y < this.cy; y++)
			{
				a[x][y] = allocArray();
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cx++;
			break;
		case 1: // Y axis
			for ( ; x < this.cx; x++)
			{
				if (where === 0)	// back
				{
					y = a[x].length;
					a[x].push(allocArray());
				}
				else				// front
				{
					y = 0;
					a[x].unshift(allocArray());
				}
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cy++;
			break;
		case 2:	// Z axis
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					if (where === 0)	// back
					{
						a[x][y].push(value);
					}
					else				// front
					{
						a[x][y].unshift(value);
					}
				}
			}
			this.cz++;
			break;
		}
	};
	Acts.prototype.Pop = function (where, axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		switch (axis) {
		case 0:	// X axis
			if (this.cx === 0)
				break;
			if (where === 0)	// back
			{
				freeArray(a.pop());
			}
			else				// front
			{
				freeArray(a.shift());
			}
			this.cx--;
			break;
		case 1: // Y axis
			if (this.cy === 0)
				break;
			for ( ; x < this.cx; x++)
			{
				if (where === 0)	// back
				{
					freeArray(a[x].pop());
				}
				else				// front
				{
					freeArray(a[x].shift());
				}
			}
			this.cy--;
			break;
		case 2:	// Z axis
			if (this.cz === 0)
				break;
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					if (where === 0)	// back
					{
						a[x][y].pop();
					}
					else				// front
					{
						a[x][y].shift();
					}
				}
			}
			this.cz--;
			break;
		}
	};
	Acts.prototype.Reverse = function (axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		if (this.cx === 0 || this.cy === 0 || this.cz === 0)
			return;		// no point reversing empty array
		switch (axis) {
		case 0:	// X axis
			a.reverse();
			break;
		case 1: // Y axis
			for ( ; x < this.cx; x++)
				a[x].reverse();
			break;
		case 2:	// Z axis
			for ( ; x < this.cx; x++)
				for (y = 0; y < this.cy; y++)
					a[x][y].reverse();
			this.cz--;
			break;
		}
	};
	function compareValues(va, vb)
	{
		if (cr.is_number(va) && cr.is_number(vb))
			return va - vb;
		else
		{
			var sa = "" + va;
			var sb = "" + vb;
			if (sa < sb)
				return -1;
			else if (sa > sb)
				return 1;
			else
				return 0;
		}
	}
	Acts.prototype.Sort = function (axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		if (this.cx === 0 || this.cy === 0 || this.cz === 0)
			return;		// no point sorting empty array
		switch (axis) {
		case 0:	// X axis
			a.sort(function (a, b) {
				return compareValues(a[0][0], b[0][0]);
			});
			break;
		case 1: // Y axis
			for ( ; x < this.cx; x++)
			{
				a[x].sort(function (a, b) {
					return compareValues(a[0], b[0]);
				});
			}
			break;
		case 2:	// Z axis
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					a[x][y].sort(compareValues);
				}
			}
			break;
		}
	};
	Acts.prototype.Delete = function (index, axis)
	{
		var x = 0, y = 0, z = 0;
		index = Math.floor(index);
		var a = this.arr;
		if (index < 0)
			return;
		switch (axis) {
		case 0:	// X axis
			if (index >= this.cx)
				break;
			freeArray(a[index]);
			a.splice(index, 1);
			this.cx--;
			break;
		case 1: // Y axis
			if (index >= this.cy)
				break;
			for ( ; x < this.cx; x++)
			{
				freeArray(a[x][index]);
				a[x].splice(index, 1);
			}
			this.cy--;
			break;
		case 2:	// Z axis
			if (index >= this.cz)
				break;
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					a[x][y].splice(index, 1);
				}
			}
			this.cz--;
			break;
		}
	};
	Acts.prototype.Insert = function (value, index, axis)
	{
		var x = 0, y = 0, z = 0;
		index = Math.floor(index);
		var a = this.arr;
		if (index < 0)
			return;
		switch (axis) {
		case 0:	// X axis
			if (index > this.cx)
				return;
			x = index;
			a.splice(x, 0, allocArray());
			a[x].length = this.cy;
			for ( ; y < this.cy; y++)
			{
				a[x][y] = allocArray();
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cx++;
			break;
		case 1: // Y axis
			if (index > this.cy)
				return;
			for ( ; x < this.cx; x++)
			{
				y = index;
				a[x].splice(y, 0, allocArray());
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cy++;
			break;
		case 2:	// Z axis
			if (index > this.cz)
				return;
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					a[x][y].splice(index, 0, value);
				}
			}
			this.cz++;
			break;
		}
	};
	Acts.prototype.JSONLoad = function (json_)
	{
		var o;
		try {
			o = JSON.parse(json_);
		}
		catch(e) { return; }
		if (!o["c2array"])		// presumably not a c2array object
			return;
		var sz = o["size"];
		this.cx = sz[0];
		this.cy = sz[1];
		this.cz = sz[2];
		this.arr = o["data"];
	};
	Acts.prototype.JSONDownload = function (filename)
	{
		var a = document.createElement("a");
		if (typeof a.download === "undefined")
		{
			var str = 'data:text/html,' + encodeURIComponent("<p><a download='" + filename + "' href=\"data:application/json,"
				+ encodeURIComponent(this.getAsJSON())
				+ "\">Download link</a></p>");
			window.open(str);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename;
			a.href = "data:application/json," + encodeURIComponent(this.getAsJSON());
			a.download = filename;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.At = function (ret, x, y_, z_)
	{
		var y = y_ || 0;
		var z = z_ || 0;
		ret.set_any(this.at(x, y, z));
	};
	Exps.prototype.Width = function (ret)
	{
		ret.set_int(this.cx);
	};
	Exps.prototype.Height = function (ret)
	{
		ret.set_int(this.cy);
	};
	Exps.prototype.Depth = function (ret)
	{
		ret.set_int(this.cz);
	};
	Exps.prototype.CurX = function (ret)
	{
		ret.set_int(this.forX);
	};
	Exps.prototype.CurY = function (ret)
	{
		ret.set_int(this.forY);
	};
	Exps.prototype.CurZ = function (ret)
	{
		ret.set_int(this.forZ);
	};
	Exps.prototype.CurValue = function (ret)
	{
		ret.set_any(this.at(this.forX, this.forY, this.forZ));
	};
	Exps.prototype.Front = function (ret)
	{
		ret.set_any(this.at(0, 0, 0));
	};
	Exps.prototype.Back = function (ret)
	{
		ret.set_any(this.at(this.cx - 1, 0, 0));
	};
	Exps.prototype.IndexOf = function (ret, v)
	{
		for (var i = 0; i < this.cx; i++)
		{
			if (this.arr[i][0][0] === v)
			{
				ret.set_int(i);
				return;
			}
		}
		ret.set_int(-1);
	};
	Exps.prototype.LastIndexOf = function (ret, v)
	{
		for (var i = this.cx - 1; i >= 0; i--)
		{
			if (this.arr[i][0][0] === v)
			{
				ret.set_int(i);
				return;
			}
		}
		ret.set_int(-1);
	};
	Exps.prototype.AsJSON = function (ret)
	{
		ret.set_string(this.getAsJSON());
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Audio = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Audio.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	var audRuntime = null;
	var audInst = null;
	var audTag = "";
	var appPath = "";			// for PhoneGap only
	var API_HTML5 = 0;
	var API_WEBAUDIO = 1;
	var API_PHONEGAP = 2;
	var API_APPMOBI = 3;
	var api = API_HTML5;
	var context = null;
	var audioBuffers = [];		// cache of buffers
	var audioInstances = [];	// cache of instances
	var lastAudio = null;
	var useOgg = false;			// determined at create time
	var timescale_mode = 0;
	var silent = false;
	var masterVolume = 1;
	var listenerX = 0;
	var listenerY = 0;
	var panningModel = 1;		// HRTF
	var distanceModel = 1;		// Inverse
	var refDistance = 10;
	var maxDistance = 10000;
	var rolloffFactor = 1;
	var micSource = null;
	var micTag = "";
	var isMusicWorkaround = false;
	var musicPlayNextTouch = [];
	function dbToLinear(x)
	{
		var v = dbToLinear_nocap(x);
		if (v < 0)
			v = 0;
		if (v > 1)
			v = 1;
		return v;
	};
	function linearToDb(x)
	{
		if (x < 0)
			x = 0;
		if (x > 1)
			x = 1;
		return linearToDb_nocap(x);
	};
	function dbToLinear_nocap(x)
	{
		return Math.pow(10, x / 20);
	};
	function linearToDb_nocap(x)
	{
		return (Math.log(x) / Math.log(10)) * 20;
	};
	var effects = {};
	function getDestinationForTag(tag)
	{
		tag = tag.toLowerCase();
		if (effects.hasOwnProperty(tag))
		{
			if (effects[tag].length)
				return effects[tag][0].getInputNode();
		}
		return context["destination"];
	};
	function createGain()
	{
		if (context["createGain"])
			return context["createGain"]();
		else
			return context["createGainNode"]();
	};
	function createDelay(d)
	{
		if (context["createDelay"])
			return context["createDelay"](d);
		else
			return context["createDelayNode"](d);
	};
	function startSource(s)
	{
		if (s["start"])
			s["start"](0);
		else
			s["noteOn"](0);
	};
	function startSourceAt(s, x, d)
	{
		if (s["start"])
			s["start"](0, x);
		else
			s["noteGrainOn"](0, x, d - x);
	};
	function stopSource(s)
	{
		try {
			if (s["stop"])
				s["stop"](0);
			else
				s["noteOff"](0);
		}
		catch (e) {}
	};
	function setAudioParam(ap, value, ramp, time)
	{
		if (!ap)
			return;		// iOS is missing some parameters
		ap["cancelScheduledValues"](0);
		if (time === 0)
		{
			ap["value"] = value;
			return;
		}
		var curTime = context["currentTime"];
		time += curTime;
		switch (ramp) {
		case 0:		// step
			ap["setValueAtTime"](value, time);
			break;
		case 1:		// linear
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["linearRampToValueAtTime"](value, time);
			break;
		case 2:		// exponential
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["exponentialRampToValueAtTime"](value, time);
			break;
		}
	};
	var filterTypes = ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "peaking", "notch", "allpass"];
	function FilterEffect(type, freq, detune, q, gain, mix)
	{
		this.type = "filter";
		this.params = [type, freq, detune, q, gain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = type;
		else
			this.filterNode["type"] = filterTypes[type];
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.filterNode["gain"]["value"] = gain;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
	};
	FilterEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	FilterEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	FilterEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FilterEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[5] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 1:		// filter frequency
			this.params[1] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[2] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[3] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is in dB here)
			this.params[4] = value;
			setAudioParam(this.filterNode["gain"], value, ramp, time);
			break;
		}
	};
	function DelayEffect(delayTime, delayGain, mix)
	{
		this.type = "delay";
		this.params = [delayTime, delayGain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.mainNode = createGain();
		this.delayNode = createDelay(delayTime);
		this.delayNode["delayTime"]["value"] = delayTime;
		this.delayGainNode = createGain();
		this.delayGainNode["gain"]["value"] = delayGain;
		this.inputNode["connect"](this.mainNode);
		this.inputNode["connect"](this.dryNode);
		this.mainNode["connect"](this.wetNode);
		this.mainNode["connect"](this.delayNode);
		this.delayNode["connect"](this.delayGainNode);
		this.delayGainNode["connect"](this.mainNode);
	};
	DelayEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DelayEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.mainNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.delayGainNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DelayEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DelayEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[2] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is passed in dB but needs to be linear here)
			this.params[1] = dbToLinear(value);
			setAudioParam(this.delayGainNode["gain"], dbToLinear(value), ramp, time);
			break;
		case 5:		// delay time
			this.params[0] = value;
			setAudioParam(this.delayNode["delayTime"], value, ramp, time);
			break;
		}
	};
	function ConvolveEffect(buffer, normalize, mix, src)
	{
		this.type = "convolve";
		this.params = [normalize, mix, src];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.convolveNode = context["createConvolver"]();
		if (buffer)
		{
			this.convolveNode["normalize"] = normalize;
			this.convolveNode["buffer"] = buffer;
		}
		this.inputNode["connect"](this.convolveNode);
		this.inputNode["connect"](this.dryNode);
		this.convolveNode["connect"](this.wetNode);
	};
	ConvolveEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	ConvolveEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.convolveNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	ConvolveEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	ConvolveEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function FlangerEffect(delay, modulation, freq, feedback, mix)
	{
		this.type = "flanger";
		this.params = [delay, modulation, freq, feedback, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.feedbackNode = createGain();
		this.feedbackNode["gain"]["value"] = feedback;
		this.delayNode = createDelay(delay + modulation);
		this.delayNode["delayTime"]["value"] = delay;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.delayNode);
		this.inputNode["connect"](this.dryNode);
		this.delayNode["connect"](this.wetNode);
		this.delayNode["connect"](this.feedbackNode);
		this.feedbackNode["connect"](this.delayNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.delayNode["delayTime"]);
		startSource(this.oscNode);
	};
	FlangerEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	FlangerEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.feedbackNode["disconnect"]();
	};
	FlangerEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FlangerEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 6:		// modulation
			this.params[1] = value / 1000;
			setAudioParam(this.oscGainNode["gain"], value / 1000, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[2] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		case 8:		// feedback
			this.params[3] = value / 100;
			setAudioParam(this.feedbackNode["gain"], value / 100, ramp, time);
			break;
		}
	};
	function PhaserEffect(freq, detune, q, modulation, modfreq, mix)
	{
		this.type = "phaser";
		this.params = [freq, detune, q, modulation, modfreq, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = 7;	// all-pass
		else
			this.filterNode["type"] = "allpass";
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = modfreq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.filterNode["frequency"]);
		startSource(this.oscNode);
	};
	PhaserEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	PhaserEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
	};
	PhaserEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	PhaserEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[5] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 1:		// filter frequency
			this.params[0] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[1] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[2] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 6:		// modulation
			this.params[3] = value;
			setAudioParam(this.oscGainNode["gain"], value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[4] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function GainEffect(g)
	{
		this.type = "gain";
		this.params = [g];
		this.node = createGain();
		this.node["gain"]["value"] = g;
	};
	GainEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	GainEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	GainEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	GainEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 4:		// gain
			this.params[0] = dbToLinear(value);
			setAudioParam(this.node["gain"], dbToLinear(value), ramp, time);
			break;
		}
	};
	function TremoloEffect(freq, mix)
	{
		this.type = "tremolo";
		this.params = [freq, mix];
		this.node = createGain();
		this.node["gain"]["value"] = 1 - (mix / 2);
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = mix / 2;
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.node["gain"]);
		startSource(this.oscNode);
	};
	TremoloEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	TremoloEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.node["disconnect"]();
	};
	TremoloEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	TremoloEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.node["gain"]["value"], 1 - (value / 2), ramp, time);
			setAudioParam(this.oscGainNode["gain"]["value"], value / 2, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function RingModulatorEffect(freq, mix)
	{
		this.type = "ringmod";
		this.params = [freq, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.ringNode = createGain();
		this.ringNode["gain"]["value"] = 0;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscNode["connect"](this.ringNode["gain"]);
		startSource(this.oscNode);
		this.inputNode["connect"](this.ringNode);
		this.inputNode["connect"](this.dryNode);
		this.ringNode["connect"](this.wetNode);
	};
	RingModulatorEffect.prototype.connectTo = function (node_)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node_);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node_);
	};
	RingModulatorEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.ringNode["disconnect"]();
		this.inputNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	RingModulatorEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	RingModulatorEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function DistortionEffect(threshold, headroom, drive, makeupgain, mix)
	{
		this.type = "distortion";
		this.params = [threshold, headroom, drive, makeupgain, mix];
		this.inputNode = createGain();
		this.preGain = createGain();
		this.postGain = createGain();
		this.setDrive(drive, dbToLinear_nocap(makeupgain));
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.waveShaper = context["createWaveShaper"]();
		this.curve = new Float32Array(65536);
		this.generateColortouchCurve(threshold, headroom);
		this.waveShaper.curve = this.curve;
		this.inputNode["connect"](this.preGain);
		this.inputNode["connect"](this.dryNode);
		this.preGain["connect"](this.waveShaper);
		this.waveShaper["connect"](this.postGain);
		this.postGain["connect"](this.wetNode);
	};
	DistortionEffect.prototype.setDrive = function (drive, makeupgain)
	{
		if (drive < 0.01)
			drive = 0.01;
		this.preGain["gain"]["value"] = drive;
		this.postGain["gain"]["value"] = Math.pow(1 / drive, 0.6) * makeupgain;
	};
	function e4(x, k)
	{
		return 1.0 - Math.exp(-k * x);
	}
	DistortionEffect.prototype.shape = function (x, linearThreshold, linearHeadroom)
	{
		var maximum = 1.05 * linearHeadroom * linearThreshold;
		var kk = (maximum - linearThreshold);
		var sign = x < 0 ? -1 : +1;
		var absx = x < 0 ? -x : x;
		var shapedInput = absx < linearThreshold ? absx : linearThreshold + kk * e4(absx - linearThreshold, 1.0 / kk);
		shapedInput *= sign;
		return shapedInput;
	};
	DistortionEffect.prototype.generateColortouchCurve = function (threshold, headroom)
	{
		var linearThreshold = dbToLinear_nocap(threshold);
		var linearHeadroom = dbToLinear_nocap(headroom);
		var n = 65536;
		var n2 = n / 2;
		var x = 0;
		for (var i = 0; i < n2; ++i) {
			x = i / n2;
			x = this.shape(x, linearThreshold, linearHeadroom);
			this.curve[n2 + i] = x;
			this.curve[n2 - i - 1] = -x;
		}
	};
	DistortionEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DistortionEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.preGain["disconnect"]();
		this.waveShaper["disconnect"]();
		this.postGain["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DistortionEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DistortionEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function CompressorEffect(threshold, knee, ratio, attack, release)
	{
		this.type = "compressor";
		this.params = [threshold, knee, ratio, attack, release];
		this.node = context["createDynamicsCompressor"]();
		try {
			this.node["threshold"]["value"] = threshold;
			this.node["knee"]["value"] = knee;
			this.node["ratio"]["value"] = ratio;
			this.node["attack"]["value"] = attack;
			this.node["release"]["value"] = release;
		}
		catch (e) {}
	};
	CompressorEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	CompressorEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	CompressorEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	CompressorEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	function AnalyserEffect(fftSize, smoothing)
	{
		this.type = "analyser";
		this.params = [fftSize, smoothing];
		this.node = context["createAnalyser"]();
		this.node["fftSize"] = fftSize;
		this.node["smoothingTimeConstant"] = smoothing;
		this.freqBins = new Float32Array(this.node["frequencyBinCount"]);
		this.signal = new Uint8Array(fftSize);
		this.peak = 0;
		this.rms = 0;
	};
	AnalyserEffect.prototype.tick = function ()
	{
		this.node["getFloatFrequencyData"](this.freqBins);
		this.node["getByteTimeDomainData"](this.signal);
		var fftSize = this.node["fftSize"];
		var i = 0;
		this.peak = 0;
		var rmsSquaredSum = 0;
		var s = 0;
		for ( ; i < fftSize; i++)
		{
			s = (this.signal[i] - 128) / 128;
			if (s < 0)
				s = -s;
			if (this.peak < s)
				this.peak = s;
			rmsSquaredSum += s * s;
		}
		this.peak = linearToDb(this.peak);
		this.rms = linearToDb(Math.sqrt(rmsSquaredSum / fftSize));
	};
	AnalyserEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	AnalyserEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	AnalyserEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	AnalyserEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	var OT_POS_SAMPLES = 4;
	function ObjectTracker()
	{
		this.obj = null;
		this.loadUid = 0;
		this.speeds = [];
		this.lastX = 0;
		this.lastY = 0;
		this.moveAngle = 0;
	};
	ObjectTracker.prototype.setObject = function (obj_)
	{
		this.obj = obj_;
		if (this.obj)
		{
			this.lastX = this.obj.x;
			this.lastY = this.obj.y;
		}
		this.speeds.length = 0;
	};
	ObjectTracker.prototype.hasObject = function ()
	{
		return !!this.obj;
	};
	ObjectTracker.prototype.tick = function (dt)
	{
		if (!this.obj || dt === 0)
			return;
		this.moveAngle = cr.angleTo(this.lastX, this.lastY, this.obj.x, this.obj.y);
		var s = cr.distanceTo(this.lastX, this.lastY, this.obj.x, this.obj.y) / dt;
		if (this.speeds.length < OT_POS_SAMPLES)
			this.speeds.push(s);
		else
		{
			this.speeds.shift();
			this.speeds.push(s);
		}
		this.lastX = this.obj.x;
		this.lastY = this.obj.y;
	};
	ObjectTracker.prototype.getSpeed = function ()
	{
		if (!this.speeds.length)
			return 0;
		var i, len, sum = 0;
		for (i = 0, len = this.speeds.length; i < len; i++)
		{
			sum += this.speeds[i];
		}
		return sum / this.speeds.length;
	};
	ObjectTracker.prototype.getVelocityX = function ()
	{
		return Math.cos(this.moveAngle) * this.getSpeed();
	};
	ObjectTracker.prototype.getVelocityY = function ()
	{
		return Math.sin(this.moveAngle) * this.getSpeed();
	};
	var iOShadtouch = false;	// has had touch input on iOS to work around web audio API muting
	function C2AudioBuffer(src_, is_music)
	{
		this.src = src_;
		this.myapi = api;
		this.is_music = is_music;
		this.added_end_listener = false;
		var self = this;
		this.outNode = null;
		this.mediaSourceNode = null;
		this.panWhenReady = [];		// for web audio API positioned sounds
		this.seekWhenReady = 0;
		this.pauseWhenReady = false;
		this.supportWebAudioAPI = false;
		this.failedToLoad = false;
		this.wasEverReady = false;	// if a buffer is ever marked as ready, it's permanently considered ready after then.
		if (api === API_WEBAUDIO && is_music)
		{
			this.myapi = API_HTML5;
			this.outNode = createGain();
		}
		this.bufferObject = null;			// actual audio object
		this.audioData = null;				// web audio api: ajax request result (compressed audio that needs decoding)
		var request;
		switch (this.myapi) {
		case API_HTML5:
			this.bufferObject = new Audio();
			this.bufferObject.addEventListener("canplaythrough", function () {
				self.wasEverReady = true;	// update loaded state so preload is considered complete
			});
			if (api === API_WEBAUDIO && context["createMediaElementSource"] && !audRuntime.isFirefox && !/wiiu/i.test(navigator.userAgent))
			{
				this.supportWebAudioAPI = true;		// can be routed through web audio api
				this.bufferObject.addEventListener("canplay", function ()
				{
					if (!self.mediaSourceNode)		// protect against this event firing twice
					{
						self.mediaSourceNode = context["createMediaElementSource"](self.bufferObject);
						self.mediaSourceNode["connect"](self.outNode);
					}
				});
			}
			this.bufferObject.autoplay = false;	// this is only a source buffer, not an instance
			this.bufferObject.preload = "auto";
			this.bufferObject.src = src_;
			break;
		case API_WEBAUDIO:
			request = new XMLHttpRequest();
			request.open("GET", src_, true);
			request.responseType = "arraybuffer";
			request.onload = function () {
				self.audioData = request.response;
				self.decodeAudioBuffer();
			};
			request.onerror = function () {
				self.failedToLoad = true;
			};
			request.send();
			break;
		case API_PHONEGAP:
			this.bufferObject = true;
			break;
		case API_APPMOBI:
			this.bufferObject = true;
			break;
		}
	};
	C2AudioBuffer.prototype.decodeAudioBuffer = function ()
	{
		if (this.bufferObject || !this.audioData)
			return;		// audio already decoded or AJAX request not yet complete
		var self = this;
		if (context["decodeAudioData"])
		{
			context["decodeAudioData"](this.audioData, function (buffer) {
					self.bufferObject = buffer;
					self.audioData = null;		// clear AJAX response to allow GC and save memory, only need the bufferObject now
					var p, i, len, a;
					if (!cr.is_undefined(self.playTagWhenReady) && !silent)
					{
						if (self.panWhenReady.length)
						{
							for (i = 0, len = self.panWhenReady.length; i < len; i++)
							{
								p = self.panWhenReady[i];
								a = new C2AudioInstance(self, p.thistag);
								a.setPannerEnabled(true);
								if (typeof p.objUid !== "undefined")
								{
									p.obj = audRuntime.getObjectByUID(p.objUid);
									if (!p.obj)
										continue;
								}
								if (p.obj)
								{
									var px = cr.rotatePtAround(p.obj.x, p.obj.y, -p.obj.layer.getAngle(), listenerX, listenerY, true);
									var py = cr.rotatePtAround(p.obj.x, p.obj.y, -p.obj.layer.getAngle(), listenerX, listenerY, false);
									a.setPan(px, py, cr.to_degrees(p.obj.angle - p.obj.layer.getAngle()), p.ia, p.oa, p.og);
									a.setObject(p.obj);
								}
								else
								{
									a.setPan(p.x, p.y, p.a, p.ia, p.oa, p.og);
								}
								a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
								if (self.pauseWhenReady)
									a.pause();
								audioInstances.push(a);
							}
							self.panWhenReady.length = 0;
						}
						else
						{
							a = new C2AudioInstance(self, self.playTagWhenReady);
							a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
							if (self.pauseWhenReady)
								a.pause();
							audioInstances.push(a);
						}
					}
					else if (!cr.is_undefined(self.convolveWhenReady))
					{
						var convolveNode = self.convolveWhenReady.convolveNode;
						convolveNode["normalize"] = self.normalizeWhenReady;
						convolveNode["buffer"] = buffer;
					}
			}, function (e) {
				self.failedToLoad = true;
			});
		}
		else
		{
			this.bufferObject = context["createBuffer"](this.audioData, false);
			this.audioData = null;		// clear AJAX response to allow GC and save memory, only need the bufferObject now
			if (!cr.is_undefined(this.playTagWhenReady) && !silent)
			{
				var a = new C2AudioInstance(this, this.playTagWhenReady);
				a.play(this.loopWhenReady, this.volumeWhenReady, this.seekWhenReady);
				if (this.pauseWhenReady)
					a.pause();
				audioInstances.push(a);
			}
			else if (!cr.is_undefined(this.convolveWhenReady))
			{
				var convolveNode = this.convolveWhenReady.convolveNode;
				convolveNode["normalize"] = this.normalizeWhenReady;
				convolveNode["buffer"] = this.bufferObject;
			}
		}
	};
	C2AudioBuffer.prototype.isLoaded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			var ret = this.bufferObject["readyState"] >= 4;	// HAVE_ENOUGH_DATA
			if (ret)
				this.wasEverReady = true;
			return ret || this.wasEverReady;
		case API_WEBAUDIO:
			return !!this.audioData || !!this.bufferObject;
		case API_PHONEGAP:
			return true;
		case API_APPMOBI:
			return true;
		}
		return false;
	};
	C2AudioBuffer.prototype.isLoadedAndDecoded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.isLoaded();		// no distinction between loaded and decoded in HTML5 audio, just rely on ready state
		case API_WEBAUDIO:
			return !!this.bufferObject;
		case API_PHONEGAP:
			return true;
		case API_APPMOBI:
			return true;
		}
		return false;
	};
	C2AudioBuffer.prototype.hasFailedToLoad = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return !!this.bufferObject["error"];
		case API_WEBAUDIO:
			return this.failedToLoad;
		}
		return false;
	};
	function C2AudioInstance(buffer_, tag_)
	{
		var self = this;
		this.tag = tag_;
		this.fresh = true;
		this.stopped = true;
		this.src = buffer_.src;
		this.buffer = buffer_;
		this.myapi = api;
		this.is_music = buffer_.is_music;
		this.playbackRate = 1;
		this.pgended = true;			// for PhoneGap only: ended flag
		this.resume_me = false;			// make sure resumes when leaving suspend
		this.is_paused = false;
		this.resume_position = 0;		// for web audio api to resume from correct playback position
		this.looping = false;
		this.is_muted = false;
		this.is_silent = false;
		this.volume = 1;
		this.isTimescaled = ((timescale_mode === 1 && !this.is_music) || timescale_mode === 2);
		this.mutevol = 1;
		this.startTime = (this.isTimescaled ? audRuntime.kahanTime.sum : audRuntime.wallTime.sum);
		this.gainNode = null;
		this.pannerNode = null;
		this.pannerEnabled = false;
		this.objectTracker = null;
		this.panX = 0;
		this.panY = 0;
		this.panAngle = 0;
		this.panConeInner = 0;
		this.panConeOuter = 0;
		this.panConeOuterGain = 0;
		this.instanceObject = null;
		var add_end_listener = false;
		if (this.myapi === API_WEBAUDIO && this.buffer.myapi === API_HTML5 && !this.buffer.supportWebAudioAPI)
			this.myapi = API_HTML5;
		switch (this.myapi) {
		case API_HTML5:
			if (this.is_music)
			{
				this.instanceObject = buffer_.bufferObject;
				add_end_listener = !buffer_.added_end_listener;
				buffer_.added_end_listener = true;
			}
			else
			{
				this.instanceObject = new Audio();
				this.instanceObject.autoplay = false;
				this.instanceObject.src = buffer_.bufferObject.src;
				add_end_listener = true;
			}
			if (add_end_listener)
			{
				this.instanceObject.addEventListener('ended', function () {
						audTag = self.tag;
						self.stopped = true;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				});
			}
			break;
		case API_WEBAUDIO:
			this.gainNode = createGain();
			this.gainNode["connect"](getDestinationForTag(tag_));
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (buffer_.bufferObject)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = buffer_.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
			}
			else
			{
				this.instanceObject = this.buffer.bufferObject;		// reference the audio element
				this.buffer.outNode["connect"](this.gainNode);
			}
			break;
		case API_PHONEGAP:
			this.instanceObject = new window["Media"](appPath + this.src, null, null, function (status) {
					if (status === window["Media"]["MEDIA_STOPPED"])
					{
						self.pgended = true;
						self.stopped = true;
						audTag = self.tag;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
					}
			});
			break;
		case API_APPMOBI:
			this.instanceObject = true;
			break;
		}
	};
	C2AudioInstance.prototype.hasEnded = function ()
	{
		var time;
		switch (this.myapi) {
		case API_HTML5:
			return this.instanceObject.ended;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh && !this.stopped && this.instanceObject["loop"])
					return false;
				if (this.is_paused)
					return false;
				if (this.isTimescaled)
					time = audRuntime.kahanTime.sum;
				else
					time = audRuntime.wallTime.sum;
				return (time - this.startTime) > this.buffer.bufferObject["duration"];
			}
			else
				return this.instanceObject.ended;
		case API_PHONEGAP:
			return this.pgended;
		case API_APPMOBI:
			true;	// recycling an AppMobi sound does not matter because it will just do another throwaway playSound
		}
		return true;
	};
	C2AudioInstance.prototype.canBeRecycled = function ()
	{
		if (this.fresh || this.stopped)
			return true;		// not yet used or is not playing
		return this.hasEnded();
	};
	C2AudioInstance.prototype.setPannerEnabled = function (enable_)
	{
		if (api !== API_WEBAUDIO)
			return;
		if (!this.pannerEnabled && enable_)
		{
			if (!this.gainNode)
				return;
			if (!this.pannerNode)
			{
				this.pannerNode = context["createPanner"]();
				if (typeof this.pannerNode["panningModel"] === "number")
					this.pannerNode["panningModel"] = panningModel;
				else
					this.pannerNode["panningModel"] = ["equalpower", "HRTF", "soundfield"][panningModel];
				if (typeof this.pannerNode["distanceModel"] === "number")
					this.pannerNode["distanceModel"] = distanceModel;
				else
					this.pannerNode["distanceModel"] = ["linear", "inverse", "exponential"][distanceModel];
				this.pannerNode["refDistance"] = refDistance;
				this.pannerNode["maxDistance"] = maxDistance;
				this.pannerNode["rolloffFactor"] = rolloffFactor;
			}
			this.gainNode["disconnect"]();
			this.gainNode["connect"](this.pannerNode);
			this.pannerNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = true;
		}
		else if (this.pannerEnabled && !enable_)
		{
			if (!this.gainNode)
				return;
			this.pannerNode["disconnect"]();
			this.gainNode["disconnect"]();
			this.gainNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = false;
		}
	};
	C2AudioInstance.prototype.setPan = function (x, y, angle, innerangle, outerangle, outergain)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		this.pannerNode["setPosition"](x, y, 0);
		this.pannerNode["setOrientation"](Math.cos(cr.to_radians(angle)), Math.sin(cr.to_radians(angle)), 0);
		this.pannerNode["coneInnerAngle"] = innerangle;
		this.pannerNode["coneOuterAngle"] = outerangle;
		this.pannerNode["coneOuterGain"] = outergain;
		this.panX = x;
		this.panY = y;
		this.panAngle = angle;
		this.panConeInner = innerangle;
		this.panConeOuter = outerangle;
		this.panConeOuterGain = outergain;
	};
	C2AudioInstance.prototype.setObject = function (o)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		if (!this.objectTracker)
			this.objectTracker = new ObjectTracker();
		this.objectTracker.setObject(o);
	};
	C2AudioInstance.prototype.tick = function (dt)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO || !this.objectTracker || !this.objectTracker.hasObject() || !this.isPlaying())
		{
			return;
		}
		this.objectTracker.tick(dt);
		var inst = this.objectTracker.obj;
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		this.pannerNode["setPosition"](px, py, 0);
		var a = 0;
		if (typeof this.objectTracker.obj.angle !== "undefined")
		{
			a = inst.angle - inst.layer.getAngle();
			this.pannerNode["setOrientation"](Math.cos(a), Math.sin(a), 0);
		}
		px = cr.rotatePtAround(this.objectTracker.getVelocityX(), this.objectTracker.getVelocityY(), -inst.layer.getAngle(), 0, 0, true);
		py = cr.rotatePtAround(this.objectTracker.getVelocityX(), this.objectTracker.getVelocityY(), -inst.layer.getAngle(), 0, 0, false);
		this.pannerNode["setVelocity"](px, py, 0);
	};
	C2AudioInstance.prototype.play = function (looping, vol, fromPosition)
	{
		var instobj = this.instanceObject;
		this.looping = looping;
		this.volume = vol;
		var seekPos = fromPosition || 0;
		switch (this.myapi) {
		case API_HTML5:
			if (instobj.playbackRate !== 1.0)
				instobj.playbackRate = 1.0;
			if (instobj.volume !== vol * masterVolume)
				instobj.volume = vol * masterVolume;
			if (instobj.loop !== looping)
				instobj.loop = looping;
			if (instobj.muted)
				instobj.muted = false;
			if (instobj.currentTime !== seekPos)
			{
				try {
					instobj.currentTime = seekPos;
				}
				catch (err)
				{
;
				}
			}
			if (this.is_music && isMusicWorkaround && !audRuntime.isInUserInputEvent)
				musicPlayNextTouch.push(this);
			else
			{
				try {
					this.instanceObject.play();
				}
				catch (e) {		// sometimes throws on WP8.1... try not to kill the app
					if (console && console.log)
						console.log("[C2] WARNING: exception trying to play audio '" + this.buffer.src + "': ", e);
				}
			}
			break;
		case API_WEBAUDIO:
			this.muted = false;
			this.mutevol = 1;
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = this.buffer.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
				this.instanceObject.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (seekPos === 0)
					startSource(this.instanceObject);
				else
					startSourceAt(this.instanceObject, seekPos, this.getDuration());
			}
			else
			{
				if (instobj.playbackRate !== 1.0)
					instobj.playbackRate = 1.0;
				if (instobj.loop !== looping)
					instobj.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (instobj.currentTime !== seekPos)
				{
					try {
						instobj.currentTime = seekPos;
					}
					catch (err)
					{
;
					}
				}
				if (this.is_music && isMusicWorkaround && !audRuntime.isInUserInputEvent)
					musicPlayNextTouch.push(this);
				else
					instobj.play();
			}
			break;
		case API_PHONEGAP:
			if ((!this.fresh && this.stopped) || seekPos !== 0)
				instobj["seekTo"](seekPos);
			instobj["play"]();
			this.pgended = false;
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["playSound"](this.src, looping);
			else
				AppMobi["player"]["playSound"](this.src, looping);
			break;
		}
		this.playbackRate = 1;
		this.startTime = (this.isTimescaled ? audRuntime.kahanTime.sum : audRuntime.wallTime.sum) - seekPos;
		this.fresh = false;
		this.stopped = false;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.stop = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
				stopSource(this.instanceObject);
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["stop"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["stopSound"](this.src);
			break;
		}
		this.stopped = true;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.pause = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.resume_position = this.getPlaybackTime();
				if (this.looping)
					this.resume_position = this.resume_position % this.getDuration();
				stopSource(this.instanceObject);
			}
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["pause"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["stopSound"](this.src);
			break;
		}
		this.is_paused = true;
	};
	C2AudioInstance.prototype.resume = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || !this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			this.instanceObject.play();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.instanceObject = context["createBufferSource"]();
				this.instanceObject["buffer"] = this.buffer.bufferObject;
				this.instanceObject["connect"](this.gainNode);
				this.instanceObject.loop = this.looping;
				this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
				this.startTime = (this.isTimescaled ? audRuntime.kahanTime.sum : audRuntime.wallTime.sum) - this.resume_position;
				startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
			}
			else
			{
				this.instanceObject.play();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["play"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["resumeSound"](this.src);
			break;
		}
		this.is_paused = false;
	};
	C2AudioInstance.prototype.seek = function (pos)
	{
		if (this.fresh || this.stopped || this.hasEnded())
			return;
		switch (this.myapi) {
		case API_HTML5:
			try {
				this.instanceObject.currentTime = pos;
			}
			catch (e) {}
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					this.resume_position = pos;
				else
				{
					this.pause();
					this.resume_position = pos;
					this.resume();
				}
			}
			else
			{
				try {
					this.instanceObject.currentTime = pos;
				}
				catch (e) {}
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["seekSound"](this.src, pos);
			break;
		}
	};
	C2AudioInstance.prototype.reconnect = function (toNode)
	{
		if (this.myapi !== API_WEBAUDIO)
			return;
		if (this.pannerEnabled)
		{
			this.pannerNode["disconnect"]();
			this.pannerNode["connect"](toNode);
		}
		else
		{
			this.gainNode["disconnect"]();
			this.gainNode["connect"](toNode);
		}
	};
	C2AudioInstance.prototype.getDuration = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.duration !== "undefined")
				return this.instanceObject.duration;
			else
				return 0;
		case API_WEBAUDIO:
			return this.buffer.bufferObject["duration"];
		case API_PHONEGAP:
			return this.instanceObject["getDuration"]();
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				return AppMobi["context"]["getDurationSound"](this.src);
			else
				return 0;
		}
		return 0;
	};
	C2AudioInstance.prototype.getPlaybackTime = function ()
	{
		var duration = this.getDuration();
		var ret = 0;
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					return this.resume_position;
				else
					ret = (this.isTimescaled ? audRuntime.kahanTime.sum : audRuntime.wallTime.sum) - this.startTime;
			}
			else if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				ret = AppMobi["context"]["getPlaybackTimeSound"](this.src);
			break;
		}
		if (!this.looping && ret > duration)
			ret = duration;
		return ret;
	};
	C2AudioInstance.prototype.isPlaying = function ()
	{
		return !this.is_paused && !this.fresh && !this.stopped && !this.hasEnded();
	};
	C2AudioInstance.prototype.setVolume = function (v)
	{
		this.volume = v;
		this.updateVolume();
	};
	C2AudioInstance.prototype.updateVolume = function ()
	{
		var volToSet = this.volume * masterVolume;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.volume && this.instanceObject.volume !== volToSet)
				this.instanceObject.volume = volToSet;
			break;
		case API_WEBAUDIO:
			this.gainNode["gain"]["value"] = volToSet * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.getVolume = function ()
	{
		return this.volume;
	};
	C2AudioInstance.prototype.doSetMuted = function (m)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.muted !== !!m)
				this.instanceObject.muted = !!m;
			break;
		case API_WEBAUDIO:
			this.mutevol = (m ? 0 : 1);
			this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setMuted = function (m)
	{
		this.is_muted = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setSilent = function (m)
	{
		this.is_silent = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setLooping = function (l)
	{
		this.looping = l;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_WEBAUDIO:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["setLoopingSound"](this.src, l);
			break;
		}
	};
	C2AudioInstance.prototype.setPlaybackRate = function (r)
	{
		this.playbackRate = r;
		this.updatePlaybackRate();
	};
	C2AudioInstance.prototype.updatePlaybackRate = function ()
	{
		var r = this.playbackRate;
		if (this.isTimescaled)
			r *= audRuntime.timescale;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.playbackRate !== r)
				this.instanceObject.playbackRate = r;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.instanceObject["playbackRate"]["value"] !== r)
					this.instanceObject["playbackRate"]["value"] = r;
			}
			else
			{
				if (this.instanceObject.playbackRate !== r)
					this.instanceObject.playbackRate = r;
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setSuspended = function (s)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_WEBAUDIO:
			if (s)
			{
				if (this.isPlaying())
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.resume_position = this.getPlaybackTime();
						if (this.looping)
							this.resume_position = this.resume_position % this.getDuration();
						stopSource(this.instanceObject);
					}
					else
						this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.instanceObject = context["createBufferSource"]();
						this.instanceObject["buffer"] = this.buffer.bufferObject;
						this.instanceObject["connect"](this.gainNode);
						this.instanceObject.loop = this.looping;
						this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
						this.startTime = (this.isTimescaled ? audRuntime.kahanTime.sum : audRuntime.wallTime.sum) - this.resume_position;
						startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
					}
					else
					{
						this.instanceObject["play"]();
					}
				}
			}
			break;
		case API_PHONEGAP:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_APPMOBI:
			break;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		audRuntime = this.runtime;
		audInst = this;
		this.listenerTracker = null;
		this.listenerZ = -600;
		if ((this.runtime.isiOS || (this.runtime.isAndroid && (this.runtime.isChrome || this.runtime.isAndroidStockBrowser))) && !this.runtime.isCrosswalk && !this.runtime.isDomFree)
		{
			isMusicWorkaround = true;
		}
		context = null;
		if (typeof AudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new AudioContext();
		}
		else if (typeof webkitAudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new webkitAudioContext();
		}
		if ((this.runtime.isiOS && api === API_WEBAUDIO) || isMusicWorkaround)
		{
			document.addEventListener("touchstart", function ()
			{
				var i, len, m;
				if (!iOShadtouch && context)
				{
					var buffer = context["createBuffer"](1, 1, 22050);
					var source = context["createBufferSource"]();
					source["buffer"] = buffer;
					source["connect"](context["destination"]);
					startSource(source);
					iOShadtouch = true;
				}
				if (isMusicWorkaround)
				{
					if (!silent)
					{
						for (i = 0, len = musicPlayNextTouch.length; i < len; ++i)
						{
							m = musicPlayNextTouch[i];
							if (!m.stopped && !m.is_paused)
								m.instanceObject.play();
						}
					}
					musicPlayNextTouch.length = 0;
				}
			}, true);
		}
		if (api !== API_WEBAUDIO)
		{
			if (this.runtime.isPhoneGap && typeof window["Media"] !== "undefined")
				api = API_PHONEGAP;
			else if (this.runtime.isAppMobi)
				api = API_APPMOBI;
		}
		if (api === API_PHONEGAP)
		{
			appPath = location.href;
			var i = appPath.lastIndexOf("/");
			if (i > -1)
				appPath = appPath.substr(0, i + 1);
			appPath = appPath.replace("file://", "");
		}
		if (this.runtime.isSafari && this.runtime.isWindows && typeof Audio === "undefined")
		{
			alert("It looks like you're using Safari for Windows without Quicktime.  Audio cannot be played until Quicktime is installed.");
			this.runtime.DestroyInstance(this);
		}
		else
		{
			if (this.runtime.isDirectCanvas)
				useOgg = this.runtime.isAndroid;		// AAC on iOS, OGG on Android
			else
			{
				try {
					useOgg = !!(new Audio().canPlayType('audio/ogg; codecs="vorbis"'));
				}
				catch (e)
				{
					useOgg = false;
				}
			}
			switch (api) {
			case API_HTML5:
;
				break;
			case API_WEBAUDIO:
;
				break;
			case API_PHONEGAP:
;
				break;
			case API_APPMOBI:
;
				break;
			default:
;
			}
			this.runtime.tickMe(this);
		}
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function ()
	{
		this.runtime.audioInstance = this;
		timescale_mode = this.properties[0];	// 0 = off, 1 = sounds only, 2 = all
		this.saveload = this.properties[1];		// 0 = all, 1 = sounds only, 2 = music only, 3 = none
		this.playinbackground = (this.properties[2] !== 0);
		panningModel = this.properties[3];		// 0 = equalpower, 1 = hrtf, 3 = soundfield
		distanceModel = this.properties[4];		// 0 = linear, 1 = inverse, 2 = exponential
		this.listenerZ = -this.properties[5];
		refDistance = this.properties[6];
		maxDistance = this.properties[7];
		rolloffFactor = this.properties[8];
		this.listenerTracker = new ObjectTracker();
		if (api === API_WEBAUDIO)
		{
			context["listener"]["speedOfSound"] = this.properties[9];
			context["listener"]["dopplerFactor"] = this.properties[10];
			context["listener"]["setPosition"](this.runtime.draw_width / 2, this.runtime.draw_height / 2, this.listenerZ);
			context["listener"]["setOrientation"](0, 0, 1, 0, -1, 0);
			window["c2OnAudioMicStream"] = function (localMediaStream, tag)
			{
				if (micSource)
					micSource["disconnect"]();
				micTag = tag.toLowerCase();
				micSource = context["createMediaStreamSource"](localMediaStream);
				micSource["connect"](getDestinationForTag(micTag));
			};
		}
		this.runtime.addSuspendCallback(function(s)
		{
			audInst.onSuspend(s);
		});
		var self = this;
		this.runtime.addDestroyCallback(function (inst)
		{
			self.onInstanceDestroyed(inst);
		});
	};
	instanceProto.onInstanceDestroyed = function (inst)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.objectTracker)
			{
				if (a.objectTracker.obj === inst)
				{
					a.objectTracker.obj = null;
					if (a.pannerEnabled && a.isPlaying() && a.looping)
						a.stop();
				}
			}
		}
		if (this.listenerTracker.obj === inst)
			this.listenerTracker.obj = null;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"silent": silent,
			"masterVolume": masterVolume,
			"listenerZ": this.listenerZ,
			"listenerUid": this.listenerTracker.hasObject() ? this.listenerTracker.obj.uid : -1,
			"playing": [],
			"effects": {}
		};
		var playingarr = o["playing"];
		var i, len, a, d, p, panobj, playbackTime;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (!a.isPlaying())
				continue;				// no need to save stopped sounds
			if (this.saveload === 3)	// not saving/loading any sounds/music
				continue;
			if (a.is_music && this.saveload === 1)	// not saving/loading music
				continue;
			if (!a.is_music && this.saveload === 2)	// not saving/loading sound
				continue;
			playbackTime = a.getPlaybackTime();
			if (a.looping)
				playbackTime = playbackTime % a.getDuration();
			d = {
				"tag": a.tag,
				"buffersrc": a.buffer.src,
				"is_music": a.is_music,
				"playbackTime": playbackTime,
				"volume": a.volume,
				"looping": a.looping,
				"muted": a.is_muted,
				"playbackRate": a.playbackRate,
				"paused": a.is_paused,
				"resume_position": a.resume_position
			};
			if (a.pannerEnabled)
			{
				d["pan"] = {};
				panobj = d["pan"];
				if (a.objectTracker && a.objectTracker.hasObject())
				{
					panobj["objUid"] = a.objectTracker.obj.uid;
				}
				else
				{
					panobj["x"] = a.panX;
					panobj["y"] = a.panY;
					panobj["a"] = a.panAngle;
				}
				panobj["ia"] = a.panConeInner;
				panobj["oa"] = a.panConeOuter;
				panobj["og"] = a.panConeOuterGain;
			}
			playingarr.push(d);
		}
		var fxobj = o["effects"];
		var fxarr;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				fxarr = [];
				for (i = 0, len = effects[p].length; i < len; i++)
				{
					fxarr.push({ "type": effects[p][i].type, "params": effects[p][i].params });
				}
				fxobj[p] = fxarr;
			}
		}
		return o;
	};
	var objectTrackerUidsToLoad = [];
	instanceProto.loadFromJSON = function (o)
	{
		var setSilent = o["silent"];
		masterVolume = o["masterVolume"];
		this.listenerZ = o["listenerZ"];
		this.listenerTracker.setObject(null);
		var listenerUid = o["listenerUid"];
		if (listenerUid !== -1)
		{
			this.listenerTracker.loadUid = listenerUid;
			objectTrackerUidsToLoad.push(this.listenerTracker);
		}
		var playingarr = o["playing"];
		var i, len, d, src, is_music, tag, playbackTime, looping, vol, b, a, p, pan, panObjUid;
		if (this.saveload !== 3)
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
			{
				a = audioInstances[i];
				if (a.is_music && this.saveload === 1)
					continue;		// only saving/loading sound: leave music playing
				if (!a.is_music && this.saveload === 2)
					continue;		// only saving/loading music: leave sound playing
				a.stop();
			}
		}
		var fxarr, fxtype, fxparams, fx;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				for (i = 0, len = effects[p].length; i < len; i++)
					effects[p][i].remove();
			}
		}
		cr.wipe(effects);
		for (p in o["effects"])
		{
			if (o["effects"].hasOwnProperty(p))
			{
				fxarr = o["effects"][p];
				for (i = 0, len = fxarr.length; i < len; i++)
				{
					fxtype = fxarr[i]["type"];
					fxparams = fxarr[i]["params"];
					switch (fxtype) {
					case "filter":
						addEffectForTag(p, new FilterEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "delay":
						addEffectForTag(p, new DelayEffect(fxparams[0], fxparams[1], fxparams[2]));
						break;
					case "convolve":
						src = fxparams[2];
						b = this.getAudioBuffer(src, false);
						if (b.bufferObject)
						{
							fx = new ConvolveEffect(b.bufferObject, fxparams[0], fxparams[1], src);
						}
						else
						{
							fx = new ConvolveEffect(null, fxparams[0], fxparams[1], src);
							b.normalizeWhenReady = fxparams[0];
							b.convolveWhenReady = fx;
						}
						addEffectForTag(p, fx);
						break;
					case "flanger":
						addEffectForTag(p, new FlangerEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "phaser":
						addEffectForTag(p, new PhaserEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "gain":
						addEffectForTag(p, new GainEffect(fxparams[0]));
						break;
					case "tremolo":
						addEffectForTag(p, new TremoloEffect(fxparams[0], fxparams[1]));
						break;
					case "ringmod":
						addEffectForTag(p, new RingModulatorEffect(fxparams[0], fxparams[1]));
						break;
					case "distortion":
						addEffectForTag(p, new DistortionEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "compressor":
						addEffectForTag(p, new CompressorEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "analyser":
						addEffectForTag(p, new AnalyserEffect(fxparams[0], fxparams[1]));
						break;
					}
				}
			}
		}
		for (i = 0, len = playingarr.length; i < len; i++)
		{
			if (this.saveload === 3)	// not saving/loading any sounds/music
				continue;
			d = playingarr[i];
			src = d["buffersrc"];
			is_music = d["is_music"];
			tag = d["tag"];
			playbackTime = d["playbackTime"];
			looping = d["looping"];
			vol = d["volume"];
			pan = d["pan"];
			panObjUid = (pan && pan.hasOwnProperty("objUid")) ? pan["objUid"] : -1;
			if (is_music && this.saveload === 1)	// not saving/loading music
				continue;
			if (!is_music && this.saveload === 2)	// not saving/loading sound
				continue;
			a = this.getAudioInstance(src, tag, is_music, looping, vol);
			if (!a)
			{
				b = this.getAudioBuffer(src, is_music);
				b.seekWhenReady = playbackTime;
				b.pauseWhenReady = d["paused"];
				if (pan)
				{
					if (panObjUid !== -1)
					{
						b.panWhenReady.push({ objUid: panObjUid, ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
					else
					{
						b.panWhenReady.push({ x: pan["x"], y: pan["y"], a: pan["a"], ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
				}
				continue;
			}
			a.resume_position = d["resume_position"];
			a.setPannerEnabled(!!pan);
			a.play(looping, vol, playbackTime);
			a.updatePlaybackRate();
			a.updateVolume();
			a.doSetMuted(a.is_muted || a.is_silent);
			if (d["paused"])
				a.pause();
			if (d["muted"])
				a.setMuted(true);
			a.doSetMuted(a.is_muted || a.is_silent);
			if (pan)
			{
				if (panObjUid !== -1)
				{
					a.objectTracker = a.objectTracker || new ObjectTracker();
					a.objectTracker.loadUid = panObjUid;
					objectTrackerUidsToLoad.push(a.objectTracker);
				}
				else
				{
					a.setPan(pan["x"], pan["y"], pan["a"], pan["ia"], pan["oa"], pan["og"]);
				}
			}
		}
		if (setSilent && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (!setSilent && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	instanceProto.afterLoad = function ()
	{
		var i, len, ot, inst;
		for (i = 0, len = objectTrackerUidsToLoad.length; i < len; i++)
		{
			ot = objectTrackerUidsToLoad[i];
			inst = this.runtime.getObjectByUID(ot.loadUid);
			ot.setObject(inst);
			ot.loadUid = -1;
			if (inst)
			{
				listenerX = inst.x;
				listenerY = inst.y;
			}
		}
		objectTrackerUidsToLoad.length = 0;
	};
	instanceProto.onSuspend = function (s)
	{
		if (this.playinbackground)
			return;
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].setSuspended(s);
	};
	instanceProto.tick = function ()
	{
		var dt = this.runtime.dt;
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			a.tick(dt);
			if (a.myapi !== API_HTML5 && a.myapi !== API_APPMOBI)
			{
				if (!a.fresh && !a.stopped && a.hasEnded())
				{
					a.stopped = true;
					audTag = a.tag;
					audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				}
			}
			if (timescale_mode !== 0)
				a.updatePlaybackRate();
		}
		var p, arr, f;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				arr = effects[p];
				for (i = 0, len = arr.length; i < len; i++)
				{
					f = arr[i];
					if (f.tick)
						f.tick();
				}
			}
		}
		if (api === API_WEBAUDIO && this.listenerTracker.hasObject())
		{
			this.listenerTracker.tick(dt);
			listenerX = this.listenerTracker.obj.x;
			listenerY = this.listenerTracker.obj.y;
			context["listener"]["setPosition"](this.listenerTracker.obj.x, this.listenerTracker.obj.y, this.listenerZ);
			context["listener"]["setVelocity"](this.listenerTracker.getVelocityX(), this.listenerTracker.getVelocityY(), 0);
		}
	};
	var preload_list = [];
	instanceProto.setPreloadList = function (arr)
	{
		var i, len, p, filename, size, isOgg;
		var total_size = 0;
		for (i = 0, len = arr.length; i < len; ++i)
		{
			p = arr[i];
			filename = p[0];
			size = p[1] * 2;
			isOgg = (filename.length > 4 && filename.substr(filename.length - 4) === ".ogg");
			if ((isOgg && useOgg) || (!isOgg && !useOgg))
			{
				preload_list.push({
					filename: filename,
					size: size,
					obj: null
				});
				total_size += size;
			}
		}
		return total_size;
	};
	instanceProto.startPreloads = function ()
	{
		var i, len, p, src;
		for (i = 0, len = preload_list.length; i < len; ++i)
		{
			p = preload_list[i];
			src = this.runtime.files_subfolder + p.filename;
			p.obj = this.getAudioBuffer(src, false);
		}
	};
	instanceProto.getPreloadedSize = function ()
	{
		var completed = 0;
		var i, len, p;
		for (i = 0, len = preload_list.length; i < len; ++i)
		{
			p = preload_list[i];
			if (p.obj.isLoadedAndDecoded() || p.obj.hasFailedToLoad() || this.runtime.isDomFree || this.runtime.isAndroidStockBrowser)
			{
				completed += p.size;
			}
			else if (p.obj.isLoaded())	// downloaded but not decoded: only happens in Web Audio API, count as half-way progress
			{
				completed += Math.floor(p.size / 2);
			}
		};
		return completed;
	};
	instanceProto.getAudioBuffer = function (src_, is_music)
	{
		var i, len, a, ret = null, j, k, lenj, ai;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			a = audioBuffers[i];
			if (a.src === src_)
			{
				ret = a;
				break;
			}
		}
		if (!ret)
		{
			ret = new C2AudioBuffer(src_, is_music);
			audioBuffers.push(ret);
		}
		return ret;
	};
	instanceProto.getAudioInstance = function (src_, tag, is_music, looping, vol)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.src === src_ && (a.canBeRecycled() || is_music))
			{
				a.tag = tag;
				return a;
			}
		}
		var b = this.getAudioBuffer(src_, is_music);
		if (!b.bufferObject)
		{
			if (tag !== "<preload>")
			{
				b.playTagWhenReady = tag;
				b.loopWhenReady = looping;
				b.volumeWhenReady = vol;
			}
			return null;
		}
		a = new C2AudioInstance(b, tag);
		audioInstances.push(a);
		return a;
	};
	var taggedAudio = [];
	function SortByIsPlaying(a, b)
	{
		var an = a.isPlaying() ? 1 : 0;
		var bn = b.isPlaying() ? 1 : 0;
		if (an === bn)
			return 0;
		else if (an < bn)
			return 1;
		else
			return -1;
	};
	function getAudioByTag(tag, sort_by_playing)
	{
		taggedAudio.length = 0;
		if (!tag.length)
		{
			if (!lastAudio || lastAudio.hasEnded())
				return;
			else
			{
				taggedAudio.length = 1;
				taggedAudio[0] = lastAudio;
				return;
			}
		}
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (cr.equals_nocase(tag, a.tag))
				taggedAudio.push(a);
		}
		if (sort_by_playing)
			taggedAudio.sort(SortByIsPlaying);
	};
	function reconnectEffects(tag)
	{
		var i, len, arr, n, toNode = context["destination"];
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				toNode = arr[0].getInputNode();
				for (i = 0, len = arr.length; i < len; i++)
				{
					n = arr[i];
					if (i + 1 === len)
						n.connectTo(context["destination"]);
					else
						n.connectTo(arr[i + 1].getInputNode());
				}
			}
		}
		getAudioByTag(tag);
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].reconnect(toNode);
		if (micSource && micTag === tag)
		{
			micSource["disconnect"]();
			micSource["connect"](toNode);
		}
	};
	function addEffectForTag(tag, fx)
	{
		if (!effects.hasOwnProperty(tag))
			effects[tag] = [fx];
		else
			effects[tag].push(fx);
		reconnectEffects(tag);
	};
	function Cnds() {};
	Cnds.prototype.OnEnded = function (t)
	{
		return cr.equals_nocase(audTag, t);
	};
	Cnds.prototype.PreloadsComplete = function ()
	{
		var i, len;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			if (!audioBuffers[i].isLoadedAndDecoded() && !audioBuffers[i].hasFailedToLoad())
				return false;
		}
		return true;
	};
	Cnds.prototype.AdvancedAudioSupported = function ()
	{
		return api === API_WEBAUDIO;
	};
	Cnds.prototype.IsSilent = function ()
	{
		return silent;
	};
	Cnds.prototype.IsAnyPlaying = function ()
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			if (audioInstances[i].isPlaying())
				return true;
		}
		return false;
	};
	Cnds.prototype.IsTagPlaying = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (taggedAudio[i].isPlaying())
				return true;
		}
		return false;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Play = function (file, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPosition = function (file, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObject = function (file, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		lastAudio.setPan(px, py, cr.to_degrees(inst.angle - inst.layer.getAngle()), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayByName = function (folder, filename, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPositionByName = function (folder, filename, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObjectByName = function (folder, filename, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		lastAudio.setPan(px, py, cr.to_degrees(inst.angle - inst.layer.getAngle()), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.SetLooping = function (tag, looping)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setLooping(looping === 0);
	};
	Acts.prototype.SetMuted = function (tag, muted)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setMuted(muted === 0);
	};
	Acts.prototype.SetVolume = function (tag, vol)
	{
		getAudioByTag(tag);
		var v = dbToLinear(vol);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setVolume(v);
	};
	Acts.prototype.Preload = function (file)
	{
		if (silent)
			return;
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.PreloadByName = function (folder, filename)
	{
		if (silent)
			return;
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.SetPlaybackRate = function (tag, rate)
	{
		getAudioByTag(tag);
		if (rate < 0.0)
			rate = 0;
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setPlaybackRate(rate);
	};
	Acts.prototype.Stop = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].stop();
	};
	Acts.prototype.StopAll = function ()
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].stop();
	};
	Acts.prototype.SetPaused = function (tag, state)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (state === 0)
				taggedAudio[i].pause();
			else
				taggedAudio[i].resume();
		}
	};
	Acts.prototype.Seek = function (tag, pos)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			taggedAudio[i].seek(pos);
		}
	};
	Acts.prototype.SetSilent = function (s)
	{
		var i, len;
		if (s === 2)					// toggling
			s = (silent ? 1 : 0);		// choose opposite state
		if (s === 0 && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (s === 1 && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	Acts.prototype.SetMasterVolume = function (vol)
	{
		masterVolume = dbToLinear(vol);
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].updateVolume();
	};
	Acts.prototype.AddFilterEffect = function (tag, type, freq, detune, q, gain, mix)
	{
		if (api !== API_WEBAUDIO || type < 0 || type >= filterTypes.length || !context["createBiquadFilter"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FilterEffect(type, freq, detune, q, gain, mix));
	};
	Acts.prototype.AddDelayEffect = function (tag, delay, gain, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DelayEffect(delay, dbToLinear(gain), mix));
	};
	Acts.prototype.AddFlangerEffect = function (tag, delay, modulation, freq, feedback, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FlangerEffect(delay / 1000, modulation / 1000, freq, feedback / 100, mix));
	};
	Acts.prototype.AddPhaserEffect = function (tag, freq, detune, q, mod, modfreq, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new PhaserEffect(freq, detune, q, mod, modfreq, mix));
	};
	Acts.prototype.AddConvolutionEffect = function (tag, file, norm, mix)
	{
		if (api !== API_WEBAUDIO || !context["createConvolver"])
			return;
		var doNormalize = (norm === 0);
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		var b = this.getAudioBuffer(src, false);
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		var fx;
		if (b.bufferObject)
		{
			fx = new ConvolveEffect(b.bufferObject, doNormalize, mix, src);
		}
		else
		{
			fx = new ConvolveEffect(null, doNormalize, mix, src);
			b.normalizeWhenReady = doNormalize;
			b.convolveWhenReady = fx;
		}
		addEffectForTag(tag, fx);
	};
	Acts.prototype.AddGainEffect = function (tag, g)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(dbToLinear(g)));
	};
	Acts.prototype.AddMuteEffect = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(0));	// re-use gain effect with 0 gain
	};
	Acts.prototype.AddTremoloEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new TremoloEffect(freq, mix));
	};
	Acts.prototype.AddRingModEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new RingModulatorEffect(freq, mix));
	};
	Acts.prototype.AddDistortionEffect = function (tag, threshold, headroom, drive, makeupgain, mix)
	{
		if (api !== API_WEBAUDIO || !context["createWaveShaper"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DistortionEffect(threshold, headroom, drive, makeupgain, mix));
	};
	Acts.prototype.AddCompressorEffect = function (tag, threshold, knee, ratio, attack, release)
	{
		if (api !== API_WEBAUDIO || !context["createDynamicsCompressor"])
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new CompressorEffect(threshold, knee, ratio, attack / 1000, release / 1000));
	};
	Acts.prototype.AddAnalyserEffect = function (tag, fftSize, smoothing)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new AnalyserEffect(fftSize, smoothing));
	};
	Acts.prototype.RemoveEffects = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		var i, len, arr;
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				for (i = 0, len = arr.length; i < len; i++)
					arr[i].remove();
				arr.length = 0;
				reconnectEffects(tag);
			}
		}
	};
	Acts.prototype.SetEffectParameter = function (tag, index, param, value, ramp, time)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var arr;
		if (!effects.hasOwnProperty(tag))
			return;
		arr = effects[tag];
		if (index < 0 || index >= arr.length)
			return;
		arr[index].setParam(param, value, ramp, time);
	};
	Acts.prototype.SetListenerObject = function (obj_)
	{
		if (!obj_ || api !== API_WEBAUDIO)
			return;
		var inst = obj_.getFirstPicked();
		if (!inst)
			return;
		this.listenerTracker.setObject(inst);
		listenerX = inst.x;
		listenerY = inst.y;
	};
	Acts.prototype.SetListenerZ = function (z)
	{
		this.listenerZ = z;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Duration = function (ret, tag)
	{
		getAudioByTag(tag, true);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getDuration());
		else
			ret.set_float(0);
	};
	Exps.prototype.PlaybackTime = function (ret, tag)
	{
		getAudioByTag(tag, true);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getPlaybackTime());
		else
			ret.set_float(0);
	};
	Exps.prototype.Volume = function (ret, tag)
	{
		getAudioByTag(tag, true);
		if (taggedAudio.length)
		{
			var v = taggedAudio[0].getVolume();
			ret.set_float(linearToDb(v));
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.MasterVolume = function (ret)
	{
		ret.set_float(masterVolume);
	};
	Exps.prototype.EffectCount = function (ret, tag)
	{
		tag = tag.toLowerCase();
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		ret.set_int(arr ? arr.length : 0);
	};
	function getAnalyser(tag, index)
	{
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		if (arr && index >= 0 && index < arr.length && arr[index].freqBins)
			return arr[index];
		else
			return null;
	};
	Exps.prototype.AnalyserFreqBinCount = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		ret.set_int(analyser ? analyser.node["frequencyBinCount"] : 0);
	};
	Exps.prototype.AnalyserFreqBinAt = function (ret, tag, index, bin)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		bin = Math.floor(bin);
		var analyser = getAnalyser(tag, index);
		if (!analyser)
			ret.set_float(0);
		else if (bin < 0 || bin >= analyser.node["frequencyBinCount"])
			ret.set_float(0);
		else
			ret.set_float(analyser.freqBins[bin]);
	};
	Exps.prototype.AnalyserPeakLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.peak);
		else
			ret.set_float(0);
	};
	Exps.prototype.AnalyserRMSLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.rms);
		else
			ret.set_float(0);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Browser = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Browser.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		window.addEventListener("resize", function () {
			self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnResize, self);
		});
		if (typeof navigator.onLine !== "undefined")
		{
			window.addEventListener("online", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOnline, self);
			});
			window.addEventListener("offline", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOffline, self);
			});
		}
		if (typeof window.applicationCache !== "undefined")
		{
			window.applicationCache.addEventListener('updateready', function() {
				self.runtime.loadingprogress = 1;
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, self);
			});
			window.applicationCache.addEventListener('progress', function(e) {
				self.runtime.loadingprogress = e["loaded"] / e["total"];
			});
		}
		if (!this.runtime.isDirectCanvas)
		{
			document.addEventListener("appMobi.device.update.available", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, self);
			});
			document.addEventListener("backbutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, self);
			});
			document.addEventListener("menubutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnMenuButton, self);
			});
			document.addEventListener("searchbutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnSearchButton, self);
			});
			document.addEventListener("tizenhwkey", function (e) {
				var ret;
				switch (e["keyName"]) {
				case "back":
					ret = self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, self);
					if (!ret)
					{
						if (window["tizen"])
							window["tizen"]["application"]["getCurrentApplication"]()["exit"]();
					}
					break;
				case "menu":
					ret = self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnMenuButton, self);
					if (!ret)
						e.preventDefault();
					break;
				}
			});
		}
		if (this.runtime.isWindowsPhone81)
		{
			WinJS["Application"]["onbackclick"] = function (e)
			{
				return !!self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, self);
			};
		}
		this.runtime.addSuspendCallback(function(s) {
			if (s)
			{
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageHidden, self);
			}
			else
			{
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageVisible, self);
			}
		});
		this.is_arcade = (typeof window["is_scirra_arcade"] !== "undefined");
	};
	function Cnds() {};
	Cnds.prototype.CookiesEnabled = function()
	{
		return navigator ? navigator.cookieEnabled : false;
	};
	Cnds.prototype.IsOnline = function()
	{
		return navigator ? navigator.onLine : false;
	};
	Cnds.prototype.HasJava = function()
	{
		return navigator ? navigator.javaEnabled() : false;
	};
	Cnds.prototype.OnOnline = function()
	{
		return true;
	};
	Cnds.prototype.OnOffline = function()
	{
		return true;
	};
	Cnds.prototype.IsDownloadingUpdate = function ()
	{
		if (typeof window["applicationCache"] === "undefined")
			return false;
		else
			return window["applicationCache"]["status"] === window["applicationCache"]["DOWNLOADING"];
	};
	Cnds.prototype.OnUpdateReady = function ()
	{
		return true;
	};
	Cnds.prototype.PageVisible = function ()
	{
		return !this.runtime.isSuspended;
	};
	Cnds.prototype.OnPageVisible = function ()
	{
		return true;
	};
	Cnds.prototype.OnPageHidden = function ()
	{
		return true;
	};
	Cnds.prototype.OnResize = function ()
	{
		return true;
	};
	Cnds.prototype.IsFullscreen = function ()
	{
		return !!(document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || this.runtime.isNodeFullscreen);
	};
	Cnds.prototype.OnBackButton = function ()
	{
		return true;
	};
	Cnds.prototype.OnMenuButton = function ()
	{
		return true;
	};
	Cnds.prototype.OnSearchButton = function ()
	{
		return true;
	};
	Cnds.prototype.IsMetered = function ()
	{
		var connection = navigator["connection"] || navigator["mozConnection"] || navigator["webkitConnection"];
		if (!connection)
			return false;
		return connection["metered"];
	};
	Cnds.prototype.IsCharging = function ()
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			return true;
		return battery["charging"];
	};
	Cnds.prototype.IsPortraitLandscape = function (p)
	{
		var current = (window.innerWidth <= window.innerHeight ? 0 : 1);
		return current === p;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Alert = function (msg)
	{
		if (!this.runtime.isDomFree)
			alert(msg.toString());
	};
	Acts.prototype.Close = function ()
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["forceToFinish"]();
		else if (window["tizen"])
			window["tizen"]["application"]["getCurrentApplication"]()["exit"]();
		else if (navigator["app"] && navigator["app"]["exitApp"])
			navigator["app"]["exitApp"]();
		else if (navigator["device"] && navigator["device"]["exitApp"])
			navigator["device"]["exitApp"]();
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.close();
	};
	Acts.prototype.Focus = function ()
	{
		if (this.runtime.isNodeWebkit)
		{
			var win = window["nwgui"]["Window"]["get"]();
			win["focus"]();
		}
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.focus();
	};
	Acts.prototype.Blur = function ()
	{
		if (this.runtime.isNodeWebkit)
		{
			var win = window["nwgui"]["Window"]["get"]();
			win["blur"]();
		}
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.blur();
	};
	Acts.prototype.GoBack = function ()
	{
		if (navigator["app"] && navigator["app"]["backHistory"])
			navigator["app"]["backHistory"]();
		else if (!this.is_arcade && !this.runtime.isDomFree && window.back)
			window.back();
	};
	Acts.prototype.GoForward = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.forward)
			window.forward();
	};
	Acts.prototype.GoHome = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.home)
			window.home();
	};
	Acts.prototype.GoToURL = function (url, target)
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["openURL"](url);
		else if (this.runtime.isEjecta)
			ejecta["openURL"](url);
		else if (this.runtime.isWinJS)
			Windows["System"]["Launcher"]["launchUriAsync"](new Windows["Foundation"]["Uri"](url));
		else if (navigator["app"] && navigator["app"]["loadUrl"])
			navigator["app"]["loadUrl"](url, { "openExternal": true });
		else if (this.runtime.isPhoneGap)
			window.open(url, "_system");
		else if (!this.is_arcade && !this.runtime.isDomFree)
		{
			if (target === 2 && !this.is_arcade)		// top
				window.top.location = url;
			else if (target === 1 && !this.is_arcade)	// parent
				window.parent.location = url;
			else					// self
				window.location = url;
		}
	};
	Acts.prototype.GoToURLWindow = function (url, tag)
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["openURL"](url);
		else if (this.runtime.isEjecta)
			ejecta["openURL"](url);
		else if (this.runtime.isWinJS)
			Windows["System"]["Launcher"]["launchUriAsync"](new Windows["Foundation"]["Uri"](url));
		else if (navigator["app"] && navigator["app"]["loadUrl"])
			navigator["app"]["loadUrl"](url, { "openExternal": true });
		else if (this.runtime.isPhoneGap)
			window.open(url, "_system");
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.open(url, tag);
	};
	Acts.prototype.Reload = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree)
			window.location.reload();
	};
	var firstRequestFullscreen = true;
	var crruntime = null;
	function onFullscreenError(e)
	{
		if (console && console.warn)
			console.warn("Fullscreen request failed: ", e);
		crruntime["setSize"](window.innerWidth, window.innerHeight);
	};
	Acts.prototype.RequestFullScreen = function (stretchmode)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Requesting fullscreen is not supported on this platform - the request has been ignored");
			return;
		}
		if (stretchmode >= 2)
			stretchmode += 1;
		if (stretchmode === 6)
			stretchmode = 2;
		if (this.runtime.isNodeWebkit)
		{
			if (!this.runtime.isNodeFullscreen)
			{
				window["nwgui"]["Window"]["get"]()["enterFullscreen"]();
				this.runtime.isNodeFullscreen = true;
				this.runtime.fullscreen_scaling = (stretchmode >= 2 ? stretchmode : 0);
			}
		}
		else
		{
			if (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || document["fullScreenElement"])
			{
				return;
			}
			this.runtime.fullscreen_scaling = (stretchmode >= 2 ? stretchmode : 0);
			var elem = this.runtime.canvasdiv || this.runtime.canvas;
			if (firstRequestFullscreen)
			{
				firstRequestFullscreen = false;
				crruntime = this.runtime;
				elem.addEventListener("mozfullscreenerror", onFullscreenError);
				elem.addEventListener("webkitfullscreenerror", onFullscreenError);
				elem.addEventListener("MSFullscreenError", onFullscreenError);
				elem.addEventListener("fullscreenerror", onFullscreenError);
			}
			if (elem["requestFullscreen"])
				elem["requestFullscreen"]();
			else if (elem["mozRequestFullScreen"])
				elem["mozRequestFullScreen"]();
			else if (elem["msRequestFullscreen"])
				elem["msRequestFullscreen"]();
			else if (elem["webkitRequestFullScreen"])
			{
				if (typeof Element !== "undefined" && typeof Element["ALLOW_KEYBOARD_INPUT"] !== "undefined")
					elem["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"]);
				else
					elem["webkitRequestFullScreen"]();
			}
		}
	};
	Acts.prototype.CancelFullScreen = function ()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Exiting fullscreen is not supported on this platform - the request has been ignored");
			return;
		}
		if (this.runtime.isNodeWebkit)
		{
			if (this.runtime.isNodeFullscreen)
			{
				window["nwgui"]["Window"]["get"]()["leaveFullscreen"]();
				this.runtime.isNodeFullscreen = false;
			}
		}
		else
		{
			if (document["exitFullscreen"])
				document["exitFullscreen"]();
			else if (document["mozCancelFullScreen"])
				document["mozCancelFullScreen"]();
			else if (document["msExitFullscreen"])
				document["msExitFullscreen"]();
			else if (document["webkitCancelFullScreen"])
				document["webkitCancelFullScreen"]();
		}
	};
	Acts.prototype.Vibrate = function (pattern_)
	{
		try {
			var arr = pattern_.split(",");
			var i, len;
			for (i = 0, len = arr.length; i < len; i++)
			{
				arr[i] = parseInt(arr[i], 10);
			}
			if (navigator["vibrate"])
				navigator["vibrate"](arr);
			else if (navigator["mozVibrate"])
				navigator["mozVibrate"](arr);
			else if (navigator["webkitVibrate"])
				navigator["webkitVibrate"](arr);
			else if (navigator["msVibrate"])
				navigator["msVibrate"](arr);
		}
		catch (e) {}
	};
	Acts.prototype.InvokeDownload = function (url_, filename_)
	{
		var a = document.createElement("a");
		if (typeof a["download"] === "undefined")
		{
			window.open(url_);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename_;
			a.href = url_;
			a["download"] = filename_;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	Acts.prototype.InvokeDownloadString = function (str_, mimetype_, filename_)
	{
		var datauri = "data:" + mimetype_ + "," + encodeURIComponent(str_);
		var a = document.createElement("a");
		if (typeof a["download"] === "undefined")
		{
			window.open(datauri);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename_;
			a.href = datauri;
			a["download"] = filename_;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	Acts.prototype.ConsoleLog = function (type_, msg_)
	{
		if (typeof console === "undefined")
			return;
		if (type_ === 0 && console.log)
			console.log(msg_.toString());
		if (type_ === 1 && console.warn)
			console.warn(msg_.toString());
		if (type_ === 2 && console.error)
			console.error(msg_.toString());
	};
	Acts.prototype.ConsoleGroup = function (name_)
	{
		if (console && console.group)
			console.group(name_);
	};
	Acts.prototype.ConsoleGroupEnd = function ()
	{
		if (console && console.groupEnd)
			console.groupEnd();
	};
	Acts.prototype.ExecJs = function (js_)
	{
		try {
			if (eval)
				eval(js_);
		}
		catch (e)
		{
			if (console && console.error)
				console.error("Error executing Javascript: ", e);
		}
	};
	var orientations = [
		"portrait",
		"landscape",
		"portrait-primary",
		"portrait-secondary",
		"landscape-primary",
		"landscape-secondary"
	];
	Acts.prototype.LockOrientation = function (o)
	{
		o = Math.floor(o);
		if (o < 0 || o >= orientations.length)
			return;
		this.runtime.autoLockOrientation = false;
		var orientation = orientations[o];
		if (screen["lockOrientation"])
			screen["lockOrientation"](orientation);
		else if (screen["webkitLockOrientation"])
			screen["webkitLockOrientation"](orientation);
		else if (screen["mozLockOrientation"])
			screen["mozLockOrientation"](orientation);
		else if (screen["msLockOrientation"])
			screen["msLockOrientation"](orientation);
	};
	Acts.prototype.UnlockOrientation = function ()
	{
		this.runtime.autoLockOrientation = false;
		if (screen["unlockOrientation"])
			screen["unlockOrientation"]();
		else if (screen["webkitUnlockOrientation"])
			screen["webkitUnlockOrientation"]();
		else if (screen["mozUnlockOrientation"])
			screen["mozUnlockOrientation"]();
		else if (screen["msUnlockOrientation"])
			screen["msUnlockOrientation"]();
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.URL = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.toString());
	};
	Exps.prototype.Protocol = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.protocol);
	};
	Exps.prototype.Domain = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.hostname);
	};
	Exps.prototype.PathName = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.pathname);
	};
	Exps.prototype.Hash = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.hash);
	};
	Exps.prototype.Referrer = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : document.referrer);
	};
	Exps.prototype.Title = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : document.title);
	};
	Exps.prototype.Name = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.appName);
	};
	Exps.prototype.Version = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.appVersion);
	};
	Exps.prototype.Language = function (ret)
	{
		if (navigator && navigator.language)
			ret.set_string(navigator.language);
		else
			ret.set_string("");
	};
	Exps.prototype.Platform = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.platform);
	};
	Exps.prototype.Product = function (ret)
	{
		if (navigator && navigator.product)
			ret.set_string(navigator.product);
		else
			ret.set_string("");
	};
	Exps.prototype.Vendor = function (ret)
	{
		if (navigator && navigator.vendor)
			ret.set_string(navigator.vendor);
		else
			ret.set_string("");
	};
	Exps.prototype.UserAgent = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.userAgent);
	};
	Exps.prototype.QueryString = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.search);
	};
	Exps.prototype.QueryParam = function (ret, paramname)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_string("");
			return;
		}
		var match = RegExp('[?&]' + paramname + '=([^&]*)').exec(window.location.search);
		if (match)
			ret.set_string(decodeURIComponent(match[1].replace(/\+/g, ' ')));
		else
			ret.set_string("");
	};
	Exps.prototype.Bandwidth = function (ret)
	{
		var connection = navigator["connection"] || navigator["mozConnection"] || navigator["webkitConnection"];
		if (!connection)
			ret.set_float(Number.POSITIVE_INFINITY);
		else
			ret.set_float(connection["bandwidth"]);
	};
	Exps.prototype.BatteryLevel = function (ret)
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			ret.set_float(1);
		else
			ret.set_float(battery["level"]);
	};
	Exps.prototype.BatteryTimeLeft = function (ret)
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			ret.set_float(Number.POSITIVE_INFINITY);
		else
			ret.set_float(battery["dischargingTime"]);
	};
	Exps.prototype.ExecJS = function (ret, js_)
	{
		if (!eval)
		{
			ret.set_any(0);
			return;
		}
		var result = 0;
		try {
			result = eval(js_);
		}
		catch (e)
		{
			if (console && console.error)
				console.error("Error executing Javascript: ", e);
		}
		if (typeof result === "number")
			ret.set_any(result);
		else if (typeof result === "string")
			ret.set_any(result);
		else if (typeof result === "boolean")
			ret.set_any(result ? 1 : 0);
		else
			ret.set_any(0);
	};
	Exps.prototype.ScreenWidth = function (ret)
	{
		ret.set_int(screen.width);
	};
	Exps.prototype.ScreenHeight = function (ret)
	{
		ret.set_int(screen.height);
	};
	Exps.prototype.DevicePixelRatio = function (ret)
	{
		ret.set_float(this.runtime.devicePixelRatio);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.CJSAds = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var input_text = "";
	var products_list = [];
	var requested_score = 0;
	var bannerPosition = 0;
	var preloadingBanner = false;
	var bannerReady = false;
	var preloadingFullscreen = false;
	var fullscreenReady = false;
	var pluginProto = cr.plugins_.CJSAds.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.isShowingBanner = false;
		this.isShowingFullscreen = false;
		this.triggerProduct = "";
		this.socialService = null;
		this.socialServiceAvailable = false;
		this.storeServiceAvailable = (this.runtime.isCocoonJs && typeof CocoonJS["Store"]["nativeExtensionObjectAvailable"] !== "undefined");
		this.storeManaged = (this.properties[0] !== 1);
		this.storeSandboxed = (this.properties[1] !== 0);
		this.onConsumePurchaseFailedTransactionId = "";
		this.onConsumePurchaseCompleted = "";
		var self = this;
		if (this.runtime.isCocoonJs)
		{
			CocoonJS["App"]["onTextDialogFinished"].addEventListener(function(text) {
				input_text = text;
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnKeyboardOK, self);
			});
			CocoonJS["App"]["onTextDialogCancelled"].addEventListener(function() {
					self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnKeyboardCancelled, self);
			});
			CocoonJS["Ad"]["onBannerShown"].addEventListener(function ()
			{
				self.isShowingBanner = true;
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnBannerShown, self);
			});
			CocoonJS["Ad"]["onBannerReady"].addEventListener(function ()
			{
				bannerReady = true;
				if (!preloadingBanner)
				{
					CocoonJS["Ad"]["setBannerLayout"](bannerPosition);
					CocoonJS["Ad"]["showBanner"]();
				}
			});
			CocoonJS["Ad"]["onFullScreenShown"].addEventListener(function ()
			{
				self.isShowingFullscreen = true;
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnFullscreenShown, self);
			});
			CocoonJS["Ad"]["onFullScreenHidden"].addEventListener(function ()
			{
				self.isShowingFullscreen = false;
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnFullscreenHidden, self);
			});
			CocoonJS["Ad"]["onFullScreenReady"].addEventListener(function ()
			{
				fullscreenReady = true;
				if (!preloadFullScreen)
					CocoonJS["Ad"]["showFullScreen"]();
			});
			if (this.storeServiceAvailable)
			{
				CocoonJS["Store"]["onProductPurchaseCompleted"].addEventListener(function (purchase)
				{
					self.triggerProduct = purchase["productId"];
					self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnPurchaseComplete, self);
					CocoonJS["Store"]["addPurchase"](purchase);
					CocoonJS["Store"]["consumePurchase"](purchase["transactionId"], purchase["productId"]);
					CocoonJS["Store"]["finishPurchase"](purchase["transactionId"]);
				});
				CocoonJS["Store"]["onConsumePurchaseFailed"].addEventListener(function(transactionId, errorMessage)
				{
					this.onConsumePurchaseFailedTransactionId = transactionId;
					self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.onConsumePurchaseFailed, self);
				});
				CocoonJS["Store"]["onConsumePurchaseCompleted"].addEventListener(function(transactionId)
				{
					this.onConsumePurchaseCompleted = transactionId;
					self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.onConsumePurchaseCompleted, self);
				});
				CocoonJS["Store"]["onProductPurchaseFailed"].addEventListener(function (productId, errorMsg)
				{
					self.triggerProduct = productId;
					self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnPurchaseFail, self);
				});
				CocoonJS["Store"]["onProductPurchaseStarted"].addEventListener(function (productinfo)
				{
					self.triggerProduct = productinfo["productId"];
					self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnPurchaseStart, self);
				});
				CocoonJS["Store"]["onProductsFetchStarted"].addEventListener(function ()
				{
					self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.onProductsFetchStarted, self);
				});
				CocoonJS["Store"]["onProductsFetchFailed"].addEventListener(function ()
				{
					self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.onProductsFetchFailed, self);
				});
				CocoonJS["Store"]["onProductsFetchCompleted"].addEventListener(function (products)
				{
					self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.onProductsFetchCompleted, self);
				});
				CocoonJS["Store"]["requestInitialization"]({
					"managed": this.storeManaged,
					"sandbox": this.storeSandboxed
				});
				CocoonJS["Store"]["start"]();
			}
			this.socialService = CocoonJS["SocialGaming"]["GameCenter"];
			this.socialServiceAvailable = !!this.socialService["nativeExtensionObjectAvailable"];
			this.socialService["onRequestLoginSucceed"].addEventListener(function () {
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnGCLoginSuccess, self);
			});
			this.socialService["onRequestLoginFailed"].addEventListener(function () {
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnGCLoginFail, self);
			});
			this.socialService["onLogout"].addEventListener(function () {
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnGCLogout, self);
			});
			this.socialService["onRequestUserScoreSucceed"].addEventListener(function (userInfo) {
				requested_score = userInfo["score"] || 0;
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnGCScoreReceived, self);
			});
			this.socialService["onRequestUserScoreFailed"].addEventListener(function () {
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnGCScoreUnavailable, self);
			});
			this.socialService["onSubmitUserScoreSucceed"].addEventListener(function () {
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnGCScoreSubmitSuccess, self);
			});
			this.socialService["onSubmitUserScoreFailed"].addEventListener(function () {
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnGCScoreSubmitFail, self);
			});
			this.socialService["onLeaderboardViewSucceed"].addEventListener(function () {
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnGCLeaderboardOpen, self);
			});
			this.socialService["onLeaderboardViewClosed"].addEventListener(function () {
				self.runtime.trigger(cr.plugins_.CJSAds.prototype.cnds.OnGCLeaderboardClose, self);
			});
		}
	};
	function Cnds() {};
	Cnds.prototype.IsShowingBanner = function ()
	{
		return this.isShowingBanner;
	};
	Cnds.prototype.IsCocoonJS = function ()
	{
		return this.runtime.isCocoonJs;
	};
	Cnds.prototype.OnBannerShown = function ()
	{
		return true;
	};
	Cnds.prototype.OnFullscreenShown = function ()
	{
		return true;
	};
	Cnds.prototype.OnFullscreenHidden = function ()
	{
		return true;
	};
	Cnds.prototype.IsShowingFullscreen = function ()
	{
		return this.isShowingFullscreen;
	};
	Cnds.prototype.IsStoreAvailable = function ()
	{
		if (this.runtime.isCocoonJs)
			return this.storeServiceAvailable && CocoonJS["Store"]["canPurchase"]();
		else
			return false;
	};
	Cnds.prototype.OnPurchaseStart = function (productid)
	{
		return this.triggerProduct === productid;
	};
	Cnds.prototype.OnPurchaseComplete = function (productid)
	{
		return this.triggerProduct === productid;
	};
	Cnds.prototype.OnPurchaseFail = function (productid)
	{
		return this.triggerProduct === productid;
	};
	Cnds.prototype.onProductsFetchStarted = function(){
		return true;
	}
	Cnds.prototype.onConsumePurchaseFailed = function(){
		return true;
	}
	Cnds.prototype.onProductsFetchCompleted = function(){
		return true;
	}
	Cnds.prototype.onProductsFetchFailed = function(){
		return true;
	}
	Cnds.prototype.IsProductPurchased = function (productid)
	{
		if (this.runtime.isCocoonJs)
			return CocoonJS["Store"]["isProductPurchased"](productid);
		else
			return false;
	};
	Cnds.prototype.OnKeyboardCancelled = function ()
	{
		return true;
	};
	Cnds.prototype.OnKeyboardOK = function ()
	{
		return true;
	};
	Cnds.prototype.IsGCAvailable = function ()
	{
		return this.socialServiceAvailable;
	};
	Cnds.prototype.IsGCLoggedIn = function ()
	{
		if (!this.socialServiceAvailable)
			return false;
		return this.socialService["isLoggedIn"]();
	};
	Cnds.prototype.OnGCLoginSuccess = function ()
	{
		return true;
	};
	Cnds.prototype.OnGCLoginFail = function ()
	{
		return true;
	};
	Cnds.prototype.OnGCLogout = function ()
	{
		return true;
	};
	Cnds.prototype.OnGCScoreReceived = function ()
	{
		return true;
	};
	Cnds.prototype.OnGCScoreUnavailable = function ()
	{
		return true;
	};
	Cnds.prototype.OnGCScoreSubmitSuccess = function ()
	{
		return true;
	};
	Cnds.prototype.OnGCScoreSubmitFail = function ()
	{
		return true;
	};
	Cnds.prototype.OnGCLeaderboardOpen = function ()
	{
		return true;
	};
	Cnds.prototype.OnGCLeaderboardClose = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.ShowBanner = function (layout_)
	{
		if (!this.runtime.isCocoonJs)
			return;
		bannerPosition = (layout_ === 0 ? CocoonJS["Ad"]["BannerLayout"]["TOP_CENTER"] : CocoonJS["Ad"]["BannerLayout"]["BOTTOM_CENTER"]);
		preloadingBanner = false;
		if (bannerReady)
		{
			CocoonJS["Ad"]["setBannerLayout"](bannerPosition);
			CocoonJS["Ad"]["showBanner"]();
		}
		else
		{
			CocoonJS["Ad"]["preloadBanner"]();
		}
	};
	Acts.prototype.ShowFullscreen = function ()
	{
		if (!this.runtime.isCocoonJs)
			return;
		preloadingFullscreen = false;
		if (fullscreenReady)
			CocoonJS["Ad"]["showFullScreen"]();
		else
			CocoonJS["Ad"]["preloadFullScreen"]();
	};
	Acts.prototype.HideBanner = function ()
	{
		if (!this.runtime.isCocoonJs)
			return;
		CocoonJS["Ad"]["hideBanner"]();
		this.isShowingBanner = false;
	};
	Acts.prototype.PreloadBanner = function ()
	{
		if (!this.runtime.isCocoonJs)
			return;
		preloadingBanner = true;
		CocoonJS["Ad"]["preloadBanner"]();
	};
	Acts.prototype.PreloadFullscreen = function ()
	{
		if (!this.runtime.isCocoonJs)
			return;
		preloadingFullscreen = true;
		CocoonJS["Ad"]["preloadFullScreen"]();
	};
	Acts.prototype.RefreshBanner = function ()
	{
		if (!this.runtime.isCocoonJs)
			return;
		CocoonJS["Ad"]["refreshBanner"]();
	};
	Acts.prototype.RefreshFullscreen = function ()
	{
		if (!this.runtime.isCocoonJs)
			return;
		CocoonJS["Ad"]["refreshFullScreen"]();
	};
	Acts.prototype.Purchase = function (productid)
	{
		if (!this.runtime.isCocoonJs)
			return;
		CocoonJS["Store"]["purchaseProduct"](productid);
	};
	Acts.prototype.fetchProductsFromStore = function (products)
	{
		if (!this.runtime.isCocoonJs)
			return;
		CocoonJS["Store"]["fetchProductsFromStore"](products.split(","));
	};
	Acts.prototype.restorePurchases = function ()
	{
		if (this.runtime.isCocoonJs)
			return CocoonJS["Store"]["restorePurchases"]();
	};
	Acts.prototype.PurchasePreview = function (productid)
	{
		if (!this.runtime.isCocoonJs)
			return;
		CocoonJS["Store"]["purchaseProductModalWithPreview"](productid);
	};
	Acts.prototype.RestorePurchases = function ()
	{
		if (!this.runtime.isCocoonJs)
			return;
		CocoonJS["Store"]["restorePurchases"]();
	};
	Acts.prototype.PromptKeyboard = function (title_, message_, initial_, type_, canceltext_, oktext_)
	{
		if (!this.runtime.isCocoonJs)
			return;
		var typestr = ["text", "num", "phone", "email", "url"][type_];
		CocoonJS["App"]["showTextDialog"](title_, message_, initial_, typestr, canceltext_, oktext_);
	};
	Acts.prototype.UpdateProductsList = function ()
	{
		if (!this.runtime.isCocoonJs)
			return;
		if (!CocoonJS["Store"]["canPurchase"]())
			return;
		products_list = CocoonJS["Store"]["getProducts"]();
	};
	Acts.prototype.GCLogin = function ()
	{
		if (!this.socialServiceAvailable || this.socialService["isLoggedIn"]())
			return;
		this.socialService["requestLogin"]();
	};
	Acts.prototype.GCLogout = function ()
	{
		if (!this.socialServiceAvailable || !this.socialService["isLoggedIn"]())
			return;
		this.socialService["requestLogout"]();
	};
	Acts.prototype.GCSubmitScore = function (score_, leaderboard_)
	{
		if (!this.socialServiceAvailable || !this.socialService["isLoggedIn"]())
			return;
		this.socialService["submitUserScore"](score_, leaderboard_);
	};
	Acts.prototype.GCRequestScore = function (leaderboard_)
	{
		if (!this.socialServiceAvailable || !this.socialService["isLoggedIn"]())
			return;
		this.socialService["requestUserScore"](leaderboard_);
	};
	Acts.prototype.GCOpenLeaderboard = function (leaderboard_)
	{
		if (!this.socialServiceAvailable || !this.socialService["isLoggedIn"]())
			return;
		this.socialService["showLeaderboardView"](leaderboard_);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.InputText = function (ret)
	{
		ret.set_string(input_text);
	};
	Exps.prototype.ProductCount = function (ret)
	{
		ret.set_int(products_list.length);
	};
	Exps.prototype.ProductDescription = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= products_list.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(products_list[index]["description"]);
	};
	Exps.prototype.ProductLocalizedPrice = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= products_list.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(products_list[index]["localizedPrice"]);
	};
	Exps.prototype.ProductPrice = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= products_list.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(products_list[index]["price"]);
	};
	Exps.prototype.ProductAlias = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= products_list.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(products_list[index]["productAlias"]);
	};
	Exps.prototype.ProductID = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= products_list.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(products_list[index]["productId"]);
	};
	Exps.prototype.ProductTitle = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= products_list.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(products_list[index]["title"]);
	};
	Exps.prototype.GameCenterScore = function (ret)
	{
		ret.set_float(requested_score);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Cookie = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Cookie.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.value = 0;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function (glw)
	{
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.MyCondition = function (myparam)
	{
		return myparam >= 0;
	};
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.SetCookie = function (name, value, days) {
	if (days) {
		var date = new Date();
		date.setTime(date.getTime()+(days*24*60*60*1000));
		var expires = "; expires="+date.toGMTString();
	}
	else var expires = "";
	document.cookie = name+"="+value+expires+"; path=/";
	}
	acts.DelCookie = function (name) {
		acts.SetCookie(name,"",-1);
	}
	acts.GetCookie = function (name) {
	var nameEQ = name + "=";
	var ca = document.cookie.split(';');
	for(var i=0;i < ca.length;i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1,c.length);
		if (c.indexOf(nameEQ) == 0) this.value = c.substring(nameEQ.length,c.length);
	}
	}
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.value = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		ret.set_string(this.value.toString());				// return our value
	};
	exps.GetCookie = function (ret, name, default_value)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		this.value = default_value || "null";
		var nameEQ = name + "=";
		var ca = document.cookie.split(';');
		for(var i=0;i < ca.length;i++) {
			var c = ca[i];
			while (c.charAt(0)==' ') c = c.substring(1,c.length);
			if (c.indexOf(nameEQ) == 0) this.value = c.substring(nameEQ.length,c.length);
		}
		ret.set_any(this.value);				// return our value
	};
}());
;
;
cr.plugins_.Dictionary = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Dictionary.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.dictionary = {};
		this.cur_key = "";		// current key in for-each loop
		this.key_count = 0;
	};
	instanceProto.saveToJSON = function ()
	{
		return this.dictionary;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.dictionary = o;
		this.key_count = 0;
		for (var p in this.dictionary)
		{
			if (this.dictionary.hasOwnProperty(p))
				this.key_count++;
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareValue = function (key_, cmp_, value_)
	{
		return cr.do_cmp(this.dictionary[key_], cmp_, value_);
	};
	Cnds.prototype.ForEachKey = function ()
	{
		var current_event = this.runtime.getCurrentEventStack().current_event;
		for (var p in this.dictionary)
		{
			if (this.dictionary.hasOwnProperty(p))
			{
				this.cur_key = p;
				this.runtime.pushCopySol(current_event.solModifiers);
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		this.cur_key = "";
		return false;
	};
	Cnds.prototype.CompareCurrentValue = function (cmp_, value_)
	{
		return cr.do_cmp(this.dictionary[this.cur_key], cmp_, value_);
	};
	Cnds.prototype.HasKey = function (key_)
	{
		return this.dictionary.hasOwnProperty(key_);
	};
	Cnds.prototype.IsEmpty = function ()
	{
		return this.key_count === 0;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.AddKey = function (key_, value_)
	{
		if (!this.dictionary.hasOwnProperty(key_))
			this.key_count++;
		this.dictionary[key_] = value_;
	};
	Acts.prototype.SetKey = function (key_, value_)
	{
		if (this.dictionary.hasOwnProperty(key_))
			this.dictionary[key_] = value_;
	};
	Acts.prototype.DeleteKey = function (key_)
	{
		if (this.dictionary.hasOwnProperty(key_))
		{
			delete this.dictionary[key_];
			this.key_count--;
		}
	};
	Acts.prototype.Clear = function ()
	{
		cr.wipe(this.dictionary);		// avoid garbaging
		this.key_count = 0;
	};
	Acts.prototype.JSONLoad = function (json_)
	{
		var o;
		try {
			o = JSON.parse(json_);
		}
		catch(e) { return; }
		if (!o["c2dictionary"])		// presumably not a c2dictionary object
			return;
		this.dictionary = o["data"];
		this.key_count = 0;
		for (var p in this.dictionary)
		{
			if (this.dictionary.hasOwnProperty(p))
				this.key_count++;
		}
	};
	Acts.prototype.JSONDownload = function (filename)
	{
		var a = document.createElement("a");
		if (typeof a.download === "undefined")
		{
			var str = 'data:text/html,' + encodeURIComponent("<p><a download='data.json' href=\"data:application/json,"
				+ encodeURIComponent(JSON.stringify({
						"c2dictionary": true,
						"data": this.dictionary
					}))
				+ "\">Download link</a></p>");
			window.open(str);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename;
			a.href = "data:application/json," + encodeURIComponent(JSON.stringify({
						"c2dictionary": true,
						"data": this.dictionary
					}));
			a.download = filename;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Get = function (ret, key_)
	{
		if (this.dictionary.hasOwnProperty(key_))
			ret.set_any(this.dictionary[key_]);
		else
			ret.set_int(0);
	};
	Exps.prototype.KeyCount = function (ret)
	{
		ret.set_int(this.key_count);
	};
	Exps.prototype.CurrentKey = function (ret)
	{
		ret.set_string(this.cur_key);
	};
	Exps.prototype.CurrentValue = function (ret)
	{
		if (this.dictionary.hasOwnProperty(this.cur_key))
			ret.set_any(this.dictionary[this.cur_key]);
		else
			ret.set_int(0);
	};
	Exps.prototype.AsJSON = function (ret)
	{
		ret.set_string(JSON.stringify({
			"c2dictionary": true,
			"data": this.dictionary
		}));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Function = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Function.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var funcStack = [];
	var funcStackPtr = -1;
	var isInPreview = false;	// set in onCreate
	function FuncStackEntry()
	{
		this.name = "";
		this.retVal = 0;
		this.params = [];
	};
	function pushFuncStack()
	{
		funcStackPtr++;
		if (funcStackPtr === funcStack.length)
			funcStack.push(new FuncStackEntry());
		return funcStack[funcStackPtr];
	};
	function getCurrentFuncStack()
	{
		if (funcStackPtr < 0)
			return null;
		return funcStack[funcStackPtr];
	};
	function getOneAboveFuncStack()
	{
		if (!funcStack.length)
			return null;
		var i = funcStackPtr + 1;
		if (i >= funcStack.length)
			i = funcStack.length - 1;
		return funcStack[i];
	};
	function popFuncStack()
	{
;
		funcStackPtr--;
	};
	instanceProto.onCreate = function()
	{
		isInPreview = (typeof cr_is_preview !== "undefined");
		var self = this;
		window["c2_callFunction"] = function (name_, params_)
		{
			var i, len, v;
			var fs = pushFuncStack();
			fs.name = name_.toLowerCase();
			fs.retVal = 0;
			if (params_)
			{
				fs.params.length = params_.length;
				for (i = 0, len = params_.length; i < len; ++i)
				{
					v = params_[i];
					if (typeof v === "number" || typeof v === "string")
						fs.params[i] = v;
					else if (typeof v === "boolean")
						fs.params[i] = (v ? 1 : 0);
					else
						fs.params[i] = 0;
				}
			}
			else
			{
				fs.params.length = 0;
			}
			self.runtime.trigger(cr.plugins_.Function.prototype.cnds.OnFunction, self, fs.name);
			popFuncStack();
			return fs.retVal;
		};
	};
	function Cnds() {};
	Cnds.prototype.OnFunction = function (name_)
	{
		var fs = getCurrentFuncStack();
		if (!fs)
			return false;
		return cr.equals_nocase(name_, fs.name);
	};
	Cnds.prototype.CompareParam = function (index_, cmp_, value_)
	{
		var fs = getCurrentFuncStack();
		if (!fs)
			return false;
		index_ = cr.floor(index_);
		if (index_ < 0 || index_ >= fs.params.length)
			return false;
		return cr.do_cmp(fs.params[index_], cmp_, value_);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.CallFunction = function (name_, params_)
	{
		var fs = pushFuncStack();
		fs.name = name_.toLowerCase();
		fs.retVal = 0;
		cr.shallowAssignArray(fs.params, params_);
		var ran = this.runtime.trigger(cr.plugins_.Function.prototype.cnds.OnFunction, this, fs.name);
		if (isInPreview && !ran)
		{
;
		}
		popFuncStack();
	};
	Acts.prototype.SetReturnValue = function (value_)
	{
		var fs = getCurrentFuncStack();
		if (fs)
			fs.retVal = value_;
		else
;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ReturnValue = function (ret)
	{
		var fs = getOneAboveFuncStack();
		if (fs)
			ret.set_any(fs.retVal);
		else
			ret.set_int(0);
	};
	Exps.prototype.ParamCount = function (ret)
	{
		var fs = getCurrentFuncStack();
		if (fs)
			ret.set_int(fs.params.length);
		else
		{
;
			ret.set_int(0);
		}
	};
	Exps.prototype.Param = function (ret, index_)
	{
		index_ = cr.floor(index_);
		var fs = getCurrentFuncStack();
		if (fs)
		{
			if (index_ >= 0 && index_ < fs.params.length)
			{
				ret.set_any(fs.params[index_]);
			}
			else
			{
;
				ret.set_int(0);
			}
		}
		else
		{
;
			ret.set_int(0);
		}
	};
	Exps.prototype.Call = function (ret, name_)
	{
		var fs = pushFuncStack();
		fs.name = name_.toLowerCase();
		fs.retVal = 0;
		fs.params.length = 0;
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
			fs.params.push(arguments[i]);
		var ran = this.runtime.trigger(cr.plugins_.Function.prototype.cnds.OnFunction, this, fs.name);
		if (isInPreview && !ran)
		{
;
		}
		popFuncStack();
		ret.set_any(fs.retVal);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.HTML_iFrame_Pode = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var manuallyChanged = false;
	var pluginProto = cr.plugins_.HTML_iFrame_Pode.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.elem = document.createElement("iframe");
		this.elem.src=this.properties[1];
		this.elem.id=this.uid;
		var widthfactor = this.width > 0 ? 1 : -1;
		var heightfactor = this.height > 0 ? 1 : -1;
		this.elem.setAttribute("id",this.properties[3]);
		this.elem.style.cssText = this.properties[2];
		this.elem.style.cssText= this.elem.style.cssText +"-webkit-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);"+
									"-moz-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);"+
									"-o-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);"+
									"-ms-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);";
		this.elem.width = Math.round(this.elem.width);
		this.elem.height = Math.round(this.elem.height);
		this.elem.x = Math.round(this.elem.x);
		this.elem.y = Math.round(this.elem.y);
		jQuery(this.elem).appendTo("body");
		if (this.properties[0] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
		}
		if(this.properties[4] == 0)
			this.elem.scrolling = "auto";
		if(this.properties[4] == 1)
			this.elem.scrolling = "yes";
		if(this.properties[4] == 2)
			this.elem.scrolling = "no";
		var onchangetrigger = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.HTML_iFrame.prototype.cnds.OnTextChanged, self);
			};
		})(this);
		this.elem.onclick = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.HTML_iFrame.prototype.cnds.OnClicked, self);
			};
		})(this);
		this.elem.ondblclick = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.HTML_iFrame.prototype.cnds.OnDoubleClicked, self);
			};
		})(this);
		/*this.elem.onload = (function (self) {
			return function() {
					self.runtime.trigger(cr.plugins_.HTML_iFrame_Pode.prototype.cnds.OnLoaded, self);
			};
		})(this);*/
		/**/
		this.updatePosition();
		this.runtime.tickMe(this);
		this.currentURL = this.properties[1];
	};
	instanceProto.onDestroy = function ()
	{
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	instanceProto.updatePosition = function ()
	{
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			jQuery(this.elem).hide();
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		jQuery(this.elem).show();
		var offx = left + jQuery(this.runtime.canvas).offset().left;
		var offy = top + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(right - left);
		jQuery(this.elem).height(bottom - top);
		this.elem.width = Math.round(this.elem.width);
		this.elem.height = Math.round(this.elem.height);
		this.elem.x = Math.round(this.elem.x);
		this.elem.y = Math.round(this.elem.y);
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.CompareURL = function (text, case_)
	{
			return this.currentURL === text;
	};
	cnds.CompareinnerHTML = function (text, case_)
	{
			return this.elem.document.body.innerHTML === text;
	};
	cnds.OnClicked = function ()
	{
		return true;
	};
	cnds.OnDoubleClicked = function ()
	{
		return true;
	};
	cnds.OnLoaded = function ()
	{
		return true;
	};
	cnds.isFocused = function ()
	{
		if(this.elem == document.activeElement) return true;
		else return false;
	};
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.SetURL = function (text)
	{
		manuallyChanged = true;
		this.elem.src = text;
		this.currentURL = text;
		this.elem.onload = (function (self) {
			return function() {
					self.runtime.trigger(cr.plugins_.HTML_iFrame_Pode.prototype.cnds.OnLoaded, self);
			};
		})(this);
	};
	acts.SetVisible = function (vis)
	{
		this.visible = (vis !== 0);
	};
	acts.SetStyle = function (text)
	{
		this.elem.style.cssText = text;
	};
	acts.GoForward = function ()
	{
		manuallyChanged = true;
		this.elem.contentWindow.history.forward();
	};
	acts.GoBackward = function ()
	{
		manuallyChanged = true;
		this.elem.contentWindow.history.back();
	};
	acts.Refresh = function ()
	{
		manuallyChanged = true;
		this.elem.src=this.elem.src+" ";
	};
	acts.setFocus = function ()
	{
		manuallyChanged = true;
		this.elem.focus();
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.innerHTML = function (ret)
	{
		ret.set_string(jQuery(this.elem).contents().find("*").html());
	};
	exps.CurrentURL = function (ret)
	{
		ret.set_string(this.currentURL);
	};
	exps.GetStyle = function (ret)
	{
		ret.set_string(this.elem.style.cssText);
	};
}());
;
;
cr.plugins_.Keyboard = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Keyboard.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.keyMap = new Array(256);	// stores key up/down state
		this.usedKeys = new Array(256);
		this.triggerKey = 0;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		if (!this.runtime.isDomFree)
		{
			jQuery(document).keydown(
				function(info) {
					self.onKeyDown(info);
				}
			);
			jQuery(document).keyup(
				function(info) {
					self.onKeyUp(info);
				}
			);
		}
	};
	var keysToBlockWhenFramed = [32, 33, 34, 35, 36, 37, 38, 39, 40, 44];
	instanceProto.onKeyDown = function (info)
	{
		var alreadyPreventedDefault = false;
		if (window != window.top && keysToBlockWhenFramed.indexOf(info.which) > -1)
		{
			info.preventDefault();
			alreadyPreventedDefault = true;
			info.stopPropagation();
		}
		if (this.keyMap[info.which])
		{
			if (this.usedKeys[info.which] && !alreadyPreventedDefault)
				info.preventDefault();
			return;
		}
		this.keyMap[info.which] = true;
		this.triggerKey = info.which;
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKey, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKey, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCode, this);
		this.runtime.isInUserInputEvent = false;
		if (eventRan || eventRan2)
		{
			this.usedKeys[info.which] = true;
			if (!alreadyPreventedDefault)
				info.preventDefault();
		}
	};
	instanceProto.onKeyUp = function (info)
	{
		this.keyMap[info.which] = false;
		this.triggerKey = info.which;
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKeyReleased, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyReleased, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCodeReleased, this);
		this.runtime.isInUserInputEvent = false;
		if (eventRan || eventRan2 || this.usedKeys[info.which])
		{
			this.usedKeys[info.which] = true;
			info.preventDefault();
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return { "triggerKey": this.triggerKey };
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.triggerKey = o["triggerKey"];
	};
	function Cnds() {};
	Cnds.prototype.IsKeyDown = function(key)
	{
		return this.keyMap[key];
	};
	Cnds.prototype.OnKey = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnAnyKey = function(key)
	{
		return true;
	};
	Cnds.prototype.OnAnyKeyReleased = function(key)
	{
		return true;
	};
	Cnds.prototype.OnKeyReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.IsKeyCodeDown = function(key)
	{
		key = Math.floor(key);
		if (key < 0 || key >= this.keyMap.length)
			return false;
		return this.keyMap[key];
	};
	Cnds.prototype.OnKeyCode = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnKeyCodeReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LastKeyCode = function (ret)
	{
		ret.set_int(this.triggerKey);
	};
	function fixedStringFromCharCode(kc)
	{
		kc = Math.floor(kc);
		switch (kc) {
		case 8:		return "backspace";
		case 9:		return "tab";
		case 13:	return "enter";
		case 16:	return "shift";
		case 17:	return "control";
		case 18:	return "alt";
		case 19:	return "pause";
		case 20:	return "capslock";
		case 27:	return "esc";
		case 33:	return "pageup";
		case 34:	return "pagedown";
		case 35:	return "end";
		case 36:	return "home";
		case 37:	return "←";
		case 38:	return "↑";
		case 39:	return "→";
		case 40:	return "↓";
		case 45:	return "insert";
		case 46:	return "del";
		case 91:	return "left window key";
		case 92:	return "right window key";
		case 93:	return "select";
		case 96:	return "numpad 0";
		case 97:	return "numpad 1";
		case 98:	return "numpad 2";
		case 99:	return "numpad 3";
		case 100:	return "numpad 4";
		case 101:	return "numpad 5";
		case 102:	return "numpad 6";
		case 103:	return "numpad 7";
		case 104:	return "numpad 8";
		case 105:	return "numpad 9";
		case 106:	return "numpad *";
		case 107:	return "numpad +";
		case 109:	return "numpad -";
		case 110:	return "numpad .";
		case 111:	return "numpad /";
		case 112:	return "F1";
		case 113:	return "F2";
		case 114:	return "F3";
		case 115:	return "F4";
		case 116:	return "F5";
		case 117:	return "F6";
		case 118:	return "F7";
		case 119:	return "F8";
		case 120:	return "F9";
		case 121:	return "F10";
		case 122:	return "F11";
		case 123:	return "F12";
		case 144:	return "numlock";
		case 145:	return "scroll lock";
		case 186:	return ";";
		case 187:	return "=";
		case 188:	return ",";
		case 189:	return "-";
		case 190:	return ".";
		case 191:	return "/";
		case 192:	return "'";
		case 219:	return "[";
		case 220:	return "\\";
		case 221:	return "]";
		case 222:	return "#";
		case 223:	return "`";
		default:	return String.fromCharCode(kc);
		}
	};
	Exps.prototype.StringFromKeyCode = function (ret, kc)
	{
		ret.set_string(fixedStringFromCharCode(kc));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Rex_CSV = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Rex_CSV.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
	    this.isInPreview = (typeof cr_is_preview !== "undefined");
        this.strDelimiter = this.properties[0];
        this._tables = {};
        this.current_page_name = null;
        this.current_table = null;
        this.forPage = "";
        this.atCol = "";
        this.atRow = "";
        this.atPage = "";
        this.TurnPage("_");
        this.check_name = "CSV";
	};
	instanceProto.TurnPage = function(page)
	{
        if (this._tables[page] == null)
        {
            this._tables[page] = new cr.plugins_.Rex_CSV.CSVKlass(this);
        }
        this.current_page_name = page;
        this.current_table = this._tables[page];
	};
	instanceProto.Get = function (col, row, page)
	{
        this.atCol = col;
        this.atRow = row;
        if (page != null)
        {
            this.TurnPage(page);
        }
        this.atPage = this.current_page_name;
        return this.current_table.At(col,row);
	};
	instanceProto.Set = function (value, col, row, page)
	{
        this.atCol = col;
        this.atRow = row;
        if (page != null)
        {
            this.TurnPage(page);
        }
        this.atPage = this.current_page_name;
        this.current_table.SetEntry(col, row, value);
	};
	instanceProto.GetColCnt = function (page)
	{
        if (page != null)
        {
            this.TurnPage(page);
        }
        this.atPage = this.current_page_name;
        return this.current_table.GetColCnt();
	};
	instanceProto.GetRowCnt = function (page)
	{
        if (page != null)
        {
            this.TurnPage(page);
        }
        this.atPage = this.current_page_name;
        return this.current_table.GetRowCnt();
	};
	instanceProto.TableToString = function (page)
	{
        if (page != null)
        {
            this.TurnPage(page);
        }
        return this.current_table.ToString();
	};
	instanceProto.saveToJSON = function ()
	{
	    var page, tables={};
	    for (page in this._tables)
        {
            this.TurnPage(page);
	        tables[page] = {"d":this.current_table.table,
			                "k":this.current_table.keys,
							"i":this.current_table.items}
		}
		return { "d": tables };
	};
	instanceProto.loadFromJSON = function (o)
	{
	    var tables = o["d"], table;
		var page;
		for (page in tables)
		{
		    this.TurnPage(page);
		    table = tables[page];
			this.current_table.table = table["d"];
			this.current_table.keys = table["k"];
			this.current_table.items = table["i"];
		}
	};
	function Cnds() {};
	pluginProto.cnds = new Cnds();
	Cnds.prototype.ForEachCol = function ()
	{
        this.current_table.ForEachCol();
		return false;
	};
	Cnds.prototype.ForEachRowInCol = function (col)
	{
        this.current_table.ForEachRowInCol(col);
		return false;
	};
	Cnds.prototype.ForEachPage = function ()
	{
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
		this.forPage = "";
        var tables = this._tables;
        var page;
		if (solModifierAfterCnds)
		{
		    for (page in tables)
	        {
		        this.runtime.pushCopySol(current_event.solModifiers);
                this.forPage = page;
                this.TurnPage(page);
		    	current_event.retrigger();
		    	this.runtime.popSol(current_event.solModifiers);
		    }
	    }
	    else
	    {
		    for (page in tables)
	        {
                this.forPage = page;
                this.TurnPage(page);
		    	current_event.retrigger();
		    }
	    }
		this.forPage = "";
		return false;
	};
	Cnds.prototype.ForEachRow = function ()
	{
        this.current_table.ForEachRow();
		return false;
	};
	Cnds.prototype.ForEachColInRow = function (row)
	{
        this.current_table.ForEachColInRow(row);
		return false;
	};
	Cnds.prototype.IsDataInCol = function (data, col_name)
	{
		if (!(this.current_table.keys.indexOf(col_name) != (-1)))
		    return false;
	    var table = this.current_table.table;
	    var col_data = table[col_name], row_name;
		var matched = false;
		for (row_name in col_data)
		{
		    if (col_data[row_name] == data)
			{
			    matched = true;
				break;
			}
		}
		return matched;
	};
	Cnds.prototype.IsDataInRow = function (data, row_name)
	{
		if (!(this.current_table.items.indexOf(row_name) != (-1)))
		    return false;
	    var table = this.current_table.table;
	    var col_name;
		var matched = false;
		for (col_name in table)
		{
		    if (table[col_name][row_name] == data)
			{
			    matched = true;
				break;
			}
		}
		return matched;
	};
	Cnds.prototype.IsKeyInCol = function (key)
	{
        return (this.current_table.keys.indexOf(key) != (-1));
	};
	Cnds.prototype.IsKeyInRow = function (key)
	{
        return (this.current_table.items.indexOf(key) != (-1));
	};
	Cnds.prototype.IsEntryValid = function (col, row)
	{
        return ((this.current_table.keys.indexOf(key) != (-1)) &&
                (this.current_table.items.indexOf(key) != (-1))   );
	};
	function Acts() {};
	pluginProto.acts = new Acts();
	Acts.prototype.LoadCSV = function (csv_string)
	{
        this.current_table._parsing(csv_string);
	};
	Acts.prototype.SetEntry = function (col, row, val)
	{
        this.current_table.SetEntry(col, row, val);
	};
	Acts.prototype.Clear = function ()
	{
		 this.current_table.Clear();
	};
	Acts.prototype.ConvertType = function (row, to_type)
	{
         this.current_table.ConvertType(row, to_type);
	};
	Acts.prototype.TurnPage = function (page)
	{
         this.TurnPage(page);
	};
	Acts.prototype.StringToPage = function (JSON_string)
	{
        this.current_table.JSONString2Page(JSON_string);
	};
	Acts.prototype.StringToPage = function (JSON_string)
	{
        this.current_table.JSONString2Page(JSON_string);
	};
	Acts.prototype.AppendCol = function (col, init_value)
	{
        this.current_table.AppendCol(col, init_value);
	};
	Acts.prototype.AppendRow = function (row, init_value)
	{
        this.current_table.AppendRow(row, init_value);
	};
	Acts.prototype.RemoveCol = function (col)
	{
        this.current_table.RemoveCol(col);
	};
	Acts.prototype.RemoveRow = function (row)
	{
        this.current_table.RemoveRow(row);
	};
	Acts.prototype.SetDelimiter = function (s)
	{
        this.strDelimiter = s;
	};
	Acts.prototype.StringToAllTables = function (JSON_string)
	{
	    var page;
	    var tables=JSON.parse(JSON_string);
	    for (page in tables)
	    {
	        this.TurnPage(page);
	        this.current_table.JSONString2Page(tables[page]);
	    }
	};
	Acts.prototype.SortCol = function (col, is_increasing)
	{
        this.current_table.SortCol(col, is_increasing);
	};
	Acts.prototype.SortRow = function (row, is_increasing)
	{
        this.current_table.SortRow(row, is_increasing);
	};
	Acts.prototype.SetEntryAtPage = function (col, row, page, val)
	{
        this.TurnPage(page);
        this.current_table.SetEntry(col, row, val);
	};
	function Exps() {};
	pluginProto.exps = new Exps();
	Exps.prototype.At = function (ret, col, row, page, default_value)
	{
        var value = this.Get(col, row, page);
        if (value == null)
            value = (default_value == null)? 0 : default_value;
        ret.set_any(value);
	};
	Exps.prototype.CurCol = function (ret)
	{
		ret.set_string(this.current_table.forCol);
	};
	Exps.prototype.CurRow = function (ret)
	{
		ret.set_string(this.current_table.forRow);
	};
	Exps.prototype.CurValue = function (ret)
	{
		ret.set_any(this.current_table.At( this.current_table.forCol, this.current_table.forRow ));
	};
	Exps.prototype.AtCol = function (ret)
	{
		ret.set_string(this.atCol);
	};
	Exps.prototype.AtRow = function (ret)
	{
		ret.set_string(this.atRow);
	};
	Exps.prototype.AtPage = function (ret)
	{
		ret.set_string(this.atPage);
	};
	Exps.prototype.CurPage = function (ret)
	{
		ret.set_string(this.forPage);
	};
	Exps.prototype.TableToString = function (ret, page)
	{
		ret.set_string(this.TableToString(page));
	};
	Exps.prototype.ColCnt = function (ret, page)
	{
		ret.set_int(this.GetColCnt(page));
	};
	Exps.prototype.RowCnt = function (ret, page)
	{
		ret.set_int(this.GetRowCnt(page));
	};
	Exps.prototype.Delimiter = function (ret, page)
	{
		ret.set_string(this.strDelimiter);
	};
	Exps.prototype.AllTalbesToString = function (ret)
	{
	    var page, table2string={};
	    for (page in this._tables)
	        table2string[page] = this.TableToString(page);
		ret.set_string(JSON.stringify(table2string));
	};
}());
(function ()
{
    cr.plugins_.Rex_CSV.CSVKlass = function(plugin)
    {
        this.plugin = plugin;
		this.table = {};
        this.keys = [];    // col name
        this.items = [];   // row name
        this.forCol = "";
        this.forRow = "";
    };
    var CSVKlassProto = cr.plugins_.Rex_CSV.CSVKlass.prototype;
	CSVKlassProto.Clear = function()
	{
        var key;
        for (key in this.table)
            delete this.table[key];
        this.keys.length = 0;
        this.items.length = 0;
	};
	CSVKlassProto.ToString = function()
	{
        var save_data = {"table":this.table,
                         "keys":this.keys,
                         "items":this.items};
		return JSON.stringify(save_data);
	};
	CSVKlassProto.JSONString2Page = function(JSON_string)
	{
        var save_data = JSON.parse(JSON_string);
        try
        {
	        this.table = save_data["table"];
            this.keys = save_data["keys"];
            this.items = save_data["items"];
        }
        catch(err)  // compatible with older version
        {
            this.table = save_data;
        }
	};
    CSVKlassProto._create_keys = function()
	{
        var keys = this.keys;
        var key_cnt = this.keys.length;
        var i, key;
        for (i=0; i<key_cnt; i++)
        {
            key = keys[i];
            if (this.table[key] == null)
                this.table[key] = {};
        }
	};
    CSVKlassProto._create_items = function(values)
	{
        var item_name = values.shift();
        var keys = this.keys;
        var key_cnt = this.keys.length;
        var table = this.table;
        var i;
        for (i=0; i<key_cnt; i++)
        {
            table[keys[i]][item_name] = values[i];
        }
        this.items.push(item_name);
	};
	CSVKlassProto._parsing = function(csv_string)
	{
        if (csv_string == "")
            return;
        var read_array = CSVToArray(csv_string, this.plugin.strDelimiter);
        this.keys = read_array.shift();
        this._create_keys();
        var item_cnt = read_array.length;
        var i;
        for (i=0; i<item_cnt; i++)
        {
            this._create_items(read_array[i]);
        }
	};
    CSVKlassProto.At = function(col, row)
	{
	    var entry;
	    entry = this.table[col];
	    if (entry == null)
        {
;
	        return null;
        }
	    entry = entry[row];
	    if (entry == null)
        {
;
	        return null;
        }
        return entry;
	};
	CSVKlassProto.SetEntry = function (col, row, val)
	{
	    var entry;
	    entry = this.table[col];
	    if (entry == null)
        {
;
	        return;
        }
	    entry = entry[row];
	    if (entry == null)
        {
;
	        return;
        }
        this.table[col][row] = val;
	};
	CSVKlassProto.ConvertType = function (row, to_type)
	{
        var handler = (to_type==0)? parseInt:
                                    parseFloat;
        var keys = this.keys;
        var key_cnt = keys.length;
        var table = this.table;
        var i, val;
        for (i=0; i<key_cnt; i++)
        {
            val = table[keys[i]][row];
            table[keys[i]][row] = handler(val);
        }
	};
	CSVKlassProto.AppendCol = function (col, init_value)
	{
        if (this.keys.indexOf(col) != (-1))
            return;
        var has_ref = false;
        if (this.keys.length > 0)
        {
            var ref_col = this.table[this.keys[0]];
            has_ref = true;
        }
        var col_data = {};
        var items = this.items;
        var item_cnt = items.length;
        var i;
        for (i=0; i<item_cnt; i++)
        {
            if (has_ref)
            {
                if (typeof ref_col[items[i]] == "number")
                    col_data[items[i]] = 0;
                else
                     col_data[items[i]] = "";
            }
            else
                col_data[items[i]] = init_value;
        }
        this.table[col] = col_data;
        this.keys.push(col);
	};
	CSVKlassProto.AppendRow = function (row, init_value)
	{
        if (this.items.indexOf(row) != (-1))
            return;
        var keys = this.keys;
        var key_cnt = keys.length;
        var table = this.table;
        var i;
        for (i=0; i<key_cnt; i++)
        {
            table[keys[i]][row] = init_value;
        }
        this.items.push(row);
	};
	CSVKlassProto.RemoveCol = function (col)
	{
        var col_index = this.keys.indexOf(col);
        if (col_index == (-1))
            return;
        delete this.table[col];
        this.keys.splice(col_index, 1);
	};
	CSVKlassProto.RemoveRow = function (row)
	{
        var row_index = this.items.indexOf(row);
        if (row_index == (-1))
            return;
        var keys = this.keys;
        var key_cnt = keys.length;
        var table = this.table;
        var i;
        for (i=0; i<key_cnt; i++)
        {
            delete table[keys[i]][row];
        }
        this.items.splice(row_index, 1);
	};
	CSVKlassProto.ForEachCol = function ()
	{
        var current_frame = this.plugin.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
		this.forCol = "";
        var keys = this.keys;
        var key_cnt = keys.length;
        var i;
        if (solModifierAfterCnds)
        {
		    for (i=0; i<key_cnt; i++ )
	        {
		        this.plugin.runtime.pushCopySol(current_event.solModifiers);
                this.forCol = keys[i];
		    	current_event.retrigger();
		    	this.plugin.runtime.popSol(current_event.solModifiers);
		    }
	    }
	    else
	    {
		    for (i=0; i<key_cnt; i++ )
	        {
                this.forCol = keys[i];
		    	current_event.retrigger();
		    }
	    }
		this.forCol = "";
	};
	CSVKlassProto.ForEachRowInCol = function (col)
	{
        var has_col_index = (this.keys.indexOf(col)!=(-1));
        if (!has_col_index)
        {
;
            return;
        }
        var current_frame = this.plugin.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
		this.forRow = "";
        var items = this.items;
        var item_cnt = items.length;
        var i;
        if (solModifierAfterCnds)
        {
		    for (i=0; i<item_cnt; i++ )
	        {
		        this.plugin.runtime.pushCopySol(current_event.solModifiers);
                this.forRow = items[i];
		    	current_event.retrigger();
		    	this.plugin.runtime.popSol(current_event.solModifiers);
		    }
	    }
	    else
	    {
		    for (i=0; i<item_cnt; i++ )
	        {
                this.forRow = items[i];
		    	current_event.retrigger();
		    }
	    }
		this.forRow = "";
	};
	CSVKlassProto.ForEachRow = function ()
	{
        var current_frame = this.plugin.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
		this.forRow = "";
        var items = this.items;
        var item_cnt = items.length;
        var i;
        if (solModifierAfterCnds)
        {
		    for (i=0; i<item_cnt; i++ )
	        {
		        this.plugin.runtime.pushCopySol(current_event.solModifiers);
                this.forRow = items[i];
		    	current_event.retrigger();
		    	this.plugin.runtime.popSol(current_event.solModifiers);
		    }
	    }
	    else
	    {
		    for (i=0; i<item_cnt; i++ )
	        {
                this.forRow = items[i];
		    	current_event.retrigger();
		    }
	    }
		this.forRow = "";
	};
	CSVKlassProto.ForEachColInRow = function (row)
	{
        var has_row_index = (this.items.indexOf(row)!=(-1));
        if (!has_row_index)
        {
;
            return;
        }
        var current_frame = this.plugin.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
		this.forCol = "";
        var keys = this.keys;
        var key_cnt = keys.length;
        var i;
        if (solModifierAfterCnds)
        {
		    for (i=0; i<key_cnt; i++ )
	        {
		        this.plugin.runtime.pushCopySol(current_event.solModifiers);
		        this.forCol = keys[i];
		    	current_event.retrigger();
		    	this.plugin.runtime.popSol(current_event.solModifiers);
		    }
	    }
	    else
	    {
		    for (i=0; i<key_cnt; i++ )
	        {
		        this.forCol = keys[i];
		    	current_event.retrigger();
		    }
	    }
		this.forCol = "";
	};
    CSVKlassProto.GetColCnt = function()
    {
        return this.keys.length;
    };
    CSVKlassProto.GetRowCnt = function()
    {
        return this.items.length;
    };
    var _sort_table = null;
    var _sort_col_name = "";
    var _sort_row_name = "";
    var _sort_is_increasing = true;
    var _col_sort = function(row0, row1)
    {
        var item0 = _sort_table[_sort_col_name][row0];
        var item1 = _sort_table[_sort_col_name][row1];
        return (item0 > item1) ? (_sort_is_increasing? 1:-1):
               (item0 < item1) ? (_sort_is_increasing? -1:1):
                                 0;
    };
    var _row_sort = function(col0, col1)
    {
        var item0 = _sort_table[col0][_sort_row_name];
        var item1 = _sort_table[col1][_sort_row_name];
        return (item0 > item1) ? (_sort_is_increasing? 1:-1):
               (item0 < item1) ? (_sort_is_increasing? -1:1):
                                 0;
    };
    CSVKlassProto.SortCol = function (col, is_increasing)
    {
        var has_col_index = (this.keys.indexOf(col)!=(-1));
        if (!has_col_index)
        {
;
            return;
        }
        _sort_table = this.table;
        _sort_col_name = col;
        _sort_is_increasing = (is_increasing == 0);
        this.items.sort(_col_sort);
    };
    CSVKlassProto.SortRow = function (row, is_increasing)
    {
        var has_row_index = (this.items.indexOf(row)!=(-1));
        if (!has_row_index)
        {
;
            return;
        }
        _sort_table = this.table;
        _sort_row_name = row;
        _sort_is_increasing = (is_increasing == 0);
        this.keys.sort(_row_sort);
    };
    var CSVToArray = function ( strData, strDelimiter ){
        strDelimiter = (strDelimiter || ",");
        var objPattern = new RegExp(
                (
                        "(\\" + strDelimiter + "|\\r?\\n|\\r|^)" +
                        "(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|" +
                        "([^\"\\" + strDelimiter + "\\r\\n]*))"
                ),
                "gi"
                );
        var arrData = [[]];
        var arrMatches = null;
        while (arrMatches = objPattern.exec( strData )){
                var strMatchedDelimiter = arrMatches[ 1 ];
                if (
                        strMatchedDelimiter.length &&
                        (strMatchedDelimiter != strDelimiter)
                        ){
                        arrData.push( [] );
                }
                if (arrMatches[ 2 ]){
                        var strMatchedValue = arrMatches[ 2 ].replace(
                                new RegExp( "\"\"", "g" ),
                                "\""
                                );
                } else {
                        var strMatchedValue = arrMatches[ 3 ];
                }
                arrData[ arrData.length - 1 ].push( strMatchedValue );
        }
        return( arrData );
    };
}());
;
;
cr.plugins_.Rex_CSV2Array = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Rex_CSV2Array.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
	    this.exp_CurX = 0;
	    this.exp_CurY = 0;
	    this.exp_CurValue = "";
	};
    var CSVToArray = function ( strData, strDelimiter ){
        strDelimiter = (strDelimiter || ",");
        var objPattern = new RegExp(
                (
                        "(\\" + strDelimiter + "|\\r?\\n|\\r|^)" +
                        "(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|" +
                        "([^\"\\" + strDelimiter + "\\r\\n]*))"
                ),
                "gi"
                );
        var arrData = [[]];
        var arrMatches = null;
        while (arrMatches = objPattern.exec( strData )){
                var strMatchedDelimiter = arrMatches[ 1 ];
                if (
                        strMatchedDelimiter.length &&
                        (strMatchedDelimiter != strDelimiter)
                        ){
                        arrData.push( [] );
                }
                if (arrMatches[ 2 ]){
                        var strMatchedValue = arrMatches[ 2 ].replace(
                                new RegExp( "\"\"", "g" ),
                                "\""
                                );
                } else {
                        var strMatchedValue = arrMatches[ 3 ];
                }
                arrData[ arrData.length - 1 ].push( strMatchedValue );
        }
        return( arrData );
    };
	function Cnds() {};
	pluginProto.cnds = new Cnds();
	Cnds.prototype.ForEachCell = function (csv_string)
	{
	    var table = CSVToArray(csv_string);
		var y_cnt = table.length;
		var x_cnt = table[0].length;
		var i,j;
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
		this.forCol = "";
        if (solModifierAfterCnds)
        {
		    for (j=0; j<y_cnt; j++ )
	        {
	            this.exp_CurY = j;
	            for (i=0; i<x_cnt; i++ )
	            {
                    this.runtime.pushCopySol(current_event.solModifiers);
	                this.exp_CurX = i;
                    this.exp_CurValue = table[j][i];
		    	    current_event.retrigger();
		    	    this.runtime.popSol(current_event.solModifiers);
		        }
		    }
	    }
	    else
	    {
		    for (j=0; j<y_cnt; j++ )
	        {
	            this.exp_CurY = j;
	            for (i=0; i<x_cnt; i++ )
	            {
	                this.exp_CurX = i;
                    this.exp_CurValue = table[j][i];
		    	    current_event.retrigger();
		        }
		    }
	    }
		this.forCol = "";
		return false;
	};
	function Acts() {};
	pluginProto.acts = new Acts();
    Acts.prototype.CSV2Array = function (csv_string, array_objs, map_mode)
	{
        var array_obj = array_objs.getFirstPicked();
        if (array_obj.arr == null)
        {
            alert("CSV2Array need an array object.");
            return;
        }
        var table = CSVToArray(csv_string);
		var x_cnt = table.length;
		var y_cnt = table[0].length;
		if (map_mode == 0)
		    cr.plugins_.Arr.prototype.acts.SetSize.apply(array_obj, [x_cnt,y_cnt,1]);
	    else
		    cr.plugins_.Arr.prototype.acts.SetSize.apply(array_obj, [y_cnt, x_cnt,1]);
        var i,j;
		var array_set = cr.plugins_.Arr.prototype.acts.SetXYZ;
		if (map_mode == 0)
		{
		    for(j=0;j<y_cnt;j++)
		    {
		        for(i=0;i<x_cnt;i++)
			    {
			        array_set.apply(array_obj, [i,j,0, table[i][j]]);
			    }
		    }
        }
        else
        {
		    for(j=0;j<y_cnt;j++)
		    {
		        for(i=0;i<x_cnt;i++)
			    {
			        array_set.apply(array_obj, [j,i,0, table[i][j]]);
			    }
		    }
        }
	};
	function Exps() {};
	pluginProto.exps = new Exps();
	Exps.prototype.CurX = function (ret)
	{
		ret.set_int(this.exp_CurX);
	};
	Exps.prototype.CurY = function (ret)
	{
		ret.set_int(this.exp_CurY);
	};
	Exps.prototype.CurValue = function (ret)
	{
		ret.set_string(this.exp_CurValue);
	};
}());
;
;
cr.plugins_.Rex_SLGBoard = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Rex_SLGBoard.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
        this.check_name = "BOARD";
	    this.board = [];
	    this.reset_board(this.properties[0]-1,
	                     this.properties[1]-1);
        this.layout = null;
        this.layoutUid = -1;    // for loading
        this._kicked_chess_inst = null;
		this.myDestroyCallback = (function (self) {
											return function(inst) {
												self.onInstanceDestroyed(inst);
											};
										})(this);
		this.runtime.addDestroyCallback(this.myDestroyCallback);
	};
	instanceProto.onDestroy = function ()
	{
        this.runtime.removeDestroyCallback(this.myDestroyCallback);
	};
    instanceProto.onInstanceDestroyed = function(inst)
    {
        this.remove_item(inst.uid);
    };
	instanceProto.reset_board = function(x_max, y_max)
	{
	    if (x_max>=0)
	        this.x_max = x_max;
	    if (y_max>=0)
	        this.y_max = y_max;
		this.board.length = x_max+1;
		var x, y;
		for (x=0;x<=x_max;x++)
		{
		    this.board[x] = [];
		    this.board[x].length = y_max+1;
		    for(y=0;y<=y_max;y++)
		        this.board[x][y] = {};
		}
		if (this.items == null)
		    this.items = {};
		else
		    hash_clean(this.items);
	};
	instanceProto.set_board_width = function(x_max)
	{
	    if (this.x_max == x_max)
		    return;
	    else if (this.x_max < x_max)    // extend
		{
		    var x, y, y_max=this.y_max;
			this.board.length = x_max;
		    for (x=this.x_max+1; x<=x_max; x++)
		    {
		        this.board[x] = [];
		        this.board[x].length = y_max+1;
		        for(y=0; y<=y_max; y++)
		            this.board[x][y] = {};
		    }
		}
		else  // (this.x_max > x_max) : collapse
		{
		    var x, y, y_max=this.y_max;
			var z, z_hash;
		    for (x=this.x_max; x>x_max; x--)
		    {
		        for(y=0; y<=y_max; y++)
				{
				    z_hash = this.board[x][y];
				    for (z in z_hash)
					    this.remove_item(z_hash[z], true);
			    }
		    }
			this.board.length = x_max+1;
		}
		this.x_max = x_max;
	};
	instanceProto.set_board_height = function(y_max)
	{
	    if (this.y_max == y_max)
		    return;
	    else if (this.y_max < y_max)    // extend
		{
		    var x, y, x_max=this.x_max;
		    for (x=0; x<=x_max; x++)
		    {
		        this.board[x].length = y_max+1;
		        for(y=this.y_max+1; y<=y_max; y++)
		            this.board[x][y] = {};
		    }
		}
		else  // (this.y_max > y_max) : collapse
		{
		    var x, y, x_max=this.x_max;
			var z, z_hash;
		    for (x=0; x<=x_max; x++)
		    {
		        for(y=this.y_max; y>y_max; y--)
				{
				    z_hash = this.board[x][y];
				    for (z in z_hash)
					    this.remove_item(z_hash[z], true);
				}
		        this.board[x].length = y_max+1;
		    }
		}
		this.y_max = y_max;
	};
	instanceProto.is_inside_board = function (x,y,z)
	{
	    var is_in_board = (x>=0) && (y>=0) && (x<=this.x_max) && (y<=this.y_max);
	    if (is_in_board && (z != null))
	        is_in_board = (z in this.board[x][y]);
	    return is_in_board;
	};
	var _get_uid = function(objs)
	{
        var uid;
	    if (objs == null)
	        uid = null;
	    else if (typeof(objs) != "number")
	    {
	        var inst = objs.getFirstPicked();
	        uid = (inst!=null)? inst.uid:null;
	    }
	    else
	        uid = objs;
        return uid;
	};
	instanceProto.xyz2uid = function(x, y, z)
	{
	    return (this.is_inside_board(x, y, z))? this.board[x][y][z]:null;
	};
	instanceProto.xy2zhash = function(x, y)
	{
	    return (this.is_inside_board(x, y))? this.board[x][y]:null;
	};
	instanceProto.xy2zcnt = function(x, y)
	{
	    var zcnt=0;
	    var z_hash = this.xy2zhash(x, y);
	    if (z_hash != null)
	    {
	        var z;
	        for (z in z_hash)
	            zcnt += 1;
	    }
	    return zcnt;
	};
	instanceProto.lz2uid = function(uid, lz)
	{
	    var o_xyz = this.uid2xyz(uid);
		if (o_xyz == null)
		    return null;
		if (o_xyz.z == lz)
		    return uid;
		return this.xyz2uid(o_xyz.x, o_xyz.y, lz);
	};
	instanceProto.dir2uid = function(uid, dir, tz)
	{
	    var o_xyz = this.uid2xyz(uid);
		if (o_xyz == null)
		    return null;
	    var tx = this.layout.GetNeighborLX(o_xyz.x, o_xyz.y, dir);
		var ty = this.layout.GetNeighborLY(o_xyz.x, o_xyz.y, dir);
	    if (tz == null)
		    tz = o_xyz.z;
		return this.xyz2uid(tx, ty, tz);
	};
	instanceProto.uid2xyz = function(uid)
	{
	    return this.items[uid];
	};
	instanceProto.uid2inst = function(uid)
	{
	    if (this.uid2xyz(uid) == null)  // not on the board
	        return null;
	    else
	        return this.runtime.getObjectByUID(uid);
	};
	instanceProto.CreateItem = function(obj,x,y,z,_layer)
	{
        var layer = (typeof _layer == "number")?
                    this.runtime.getLayerByNumber(_layer):
                    this.runtime.getLayerByName(_layer);
        var inst = this.layout.CreateItem(obj, x, y, z, layer);
        if (!inst)
            return;
        var sol = obj.getCurrentSol();
        sol.select_all = false;
		sol.instances.length = 1;
		sol.instances[0] = inst;
		var i, len, s;
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				sol = s.type.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = s;
			}
		}
		this.runtime.isInOnDestroy++;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		this.runtime.isInOnDestroy--;
        return inst;
	};
	instanceProto.SwapChess = function (uidA, uidB)
	{
        var xyzA=this.uid2xyz(uidA);
        var xyzB=this.uid2xyz(uidB);
        if ((xyzA == null) || (xyzB == null))
            return false;
        var instA = this.uid2inst(uidA);
        var instB = this.uid2inst(uidB);
	    this.remove_item(uidA);
	    this.remove_item(uidB);
        this.add_item(instA, xyzB.x, xyzB.y, xyzB.z);
        this.add_item(instB, xyzA.x, xyzA.y, xyzA.z);
        return true;
	};
	instanceProto.add_item = function(inst, _x, _y, _z)
	{
        if ((inst == null) || (!this.is_inside_board(_x, _y)))
            return;
        var is_inst = (typeof(inst) != "number");
        var uid = (is_inst)? inst.uid:inst;
        if (this.uid2inst(uid) != null)  // already on board
            this.remove_item(uid);
        this.remove_item(this.xyz2uid(_x,_y,_z), true);
	    this.board[_x][_y][_z] = uid;
	    this.items[uid] = {x:_x, y:_y, z:_z};
        this.runtime.trigger(cr.plugins_.Rex_SLGBoard.prototype.cnds.OnCollided, this);
	};
	instanceProto.remove_item = function(uid, kicking_notify)
	{
        if (uid == null)
            return;
        var _xyz = this.uid2xyz(uid);
        if (_xyz == null)
            return;
        if (kicking_notify)
        {
            this._kicked_chess_inst = this.uid2inst(uid);
            this.runtime.trigger(cr.plugins_.Rex_SLGBoard.prototype.cnds.OnChessKicked, this);
        }
        delete this.items[uid];
        delete this.board[_xyz.x][_xyz.y][_xyz.z];
	};
	instanceProto.move_item = function(chess_inst, target_x, target_y, target_z)
	{
        if (typeof(chess_inst) == "number")    // uid
            chess_inst = this.uid2inst(chess_inst);
        if (chess_inst == null)
            return;
	    this.remove_item(chess_inst.uid);
        this.add_item(chess_inst, target_x, target_y, target_z);
	};
	instanceProto.are_neighbor = function (uidA, uidB)
	{
        var xyzA=this.uid2xyz(uidA);
        var xyzB=this.uid2xyz(uidB);
        if ((xyzA == null) || (xyzB == null))
            return false;
        var dir,dir_cnt=this.layout.GetDirCount();
        var _are_neighbor = false;
        for(dir=0;dir<dir_cnt;dir++)
        {
            if ((this.layout.GetNeighborLX(xyzA.x,xyzA.y,dir) == xyzB.x) &&
                (this.layout.GetNeighborLY(xyzA.x,xyzA.y,dir) == xyzB.y)    )
            {
                _are_neighbor = true;
                break;
            }
        }
        return _are_neighbor;
	};
	instanceProto.CreateChess = function(obj_type,x,y,z,_layer)
	{
        if ( (obj_type ==null) || (this.layout == null) ||
             ((z != 0) && (!this.is_inside_board(x,y,0)))   )
            return;
        var inst = this.CreateItem(obj_type,x,y,z,_layer);
		if (inst != null)
	        this.add_item(inst,x,y,z);
	    return inst;
	};
	instanceProto._overlap_test = function(_objA, _objB)
	{
	    var _insts_A = _objA.getCurrentSol().getObjects();
	    var _insts_B = _objB.getCurrentSol().getObjects();
        var objA, objB, insts_A, insts_B;
        if (_insts_A.length > _insts_B.length)
        {
            objA = _objB;
            objB = _objA;
            insts_A = _insts_B;
            insts_B = _insts_A;
        }
        else
        {
            objA = _objA;
            objB = _objB;
            insts_A = _insts_A;
            insts_B = _insts_B;
        }
	    var runtime = this.runtime;
	    var current_event = runtime.getCurrentEventStack().current_event;
        var is_the_same_type = (objA === objB);
        var cnt_instA = insts_A.length;
        var i, z, inst_A, uid_A, xyz_A, z_hash, tmp_inst, tmp_uid;
        var cursol_A, cursol_B;
        for (i=0; i<cnt_instA; i++)
        {
            inst_A = insts_A[i];
            uid_A = inst_A.uid;
            xyz_A = this.uid2xyz(uid_A);
            if (xyz_A == null)
                continue;
            var z_hash = this.xy2zhash(xyz_A.x, xyz_A.y);
            for (z in z_hash)
            {
                tmp_uid = z_hash[z];
                if (tmp_uid == uid_A)
                    continue;
                tmp_inst = this.uid2inst(tmp_uid);
                if (insts_B.indexOf(tmp_inst) != (-1))
                {
                    runtime.pushCopySol(current_event.solModifiers);
                    cursol_A = objA.getCurrentSol();
                    cursol_B = objB.getCurrentSol();
                    cursol_A.select_all = false;
                    cursol_B.select_all = false;
                    if (is_the_same_type)
                    {
                        cursol_A.instances.length = 2;
				        cursol_A.instances[0] = inst_A;
                        cursol_A.instances[1] = tmp_inst;
                    }
                    else   // Pick each instance in its respective SOL
                    {
                        cursol_A.instances.length = 1;
				        cursol_A.instances[0] = inst_A;
                        cursol_B.instances.length = 1;
				        cursol_B.instances[0] = tmp_inst;
                    }
                    current_event.retrigger();
                    runtime.popSol(current_event.solModifiers);
                }
            }
        }
	};
    var name2type = {};  // private global object
	instanceProto._pick_all_insts = function ()
	{
	    var uid, inst, objtype, sol;
	    var uids = this.items;
	    hash_clean(name2type);
	    var has_inst = false;
	    for (uid in uids)
	    {
	        inst = this.uid2inst(uid);
	        objtype = inst.type;
	        sol = objtype.getCurrentSol();
	        if (!(objtype.name in name2type))
	        {
	            sol.select_all = false;
	            sol.instances.length = 0;
	            name2type[objtype.name] = objtype;
	        }
	        sol.instances.push(inst);
	        has_inst = true;
	    }
	    var name;
	    for (name in name2type)
	        name2type[name].applySolToContainer();
	    hash_clean(name2type);
	    return has_inst;
	};
	instanceProto._pick_chess_on_LXY = function (chess_type, lx, ly)
	{
        var z_hash = this.xy2zhash(lx, ly);
        if (z_hash == null)
            return false;
        var inst, z_index, type_name;
        var sol = chess_type.getCurrentSol();
        sol.instances.length = 0;
        sol.select_all = false;
        var is_family = chess_type.is_family;
        var members,member_cnt,i;
        if (is_family)
        {
            members = chess_type.members;
            member_cnt = members.length;
        }
        for (z_index in z_hash)
        {
            inst = this.uid2inst(z_hash[z_index]);
            type_name = inst.type.name;
            if (is_family)
            {
                for (i=0; i<member_cnt; i++)
                {
                    if (type_name == members[i].name)
                    {
                        sol.instances.push(inst);
                        break;
                    }
                }
            }
            else
            {
                if (type_name == chess_type.name)
                    sol.instances.push(inst);
            }
        }
        chess_type.applySolToContainer();
        return (sol.instances.length != 0);
	};
	instanceProto._pick_chess_on_tiles = function (chess_type, tiles)
	{
        var inst, z_hash, z_index;
        var sol = chess_type.getCurrentSol();
        sol.instances.length = 0;
        sol.select_all = false;
        var is_family = chess_type.is_family;
        var members, member_cnt, i;
        if (is_family)
        {
            members = chess_type.members;
            member_cnt = members.length;
        }
        var tiles_cnt = tiles.length;
        var t, tile, uid, _xyz;
        for (t=0; t<tiles_cnt; t++)
        {
            tile = tiles[t];
            uid = (typeof tile == "number")? tile:tile.uid;
            _xyz = this.uid2xyz(uid);
            if (_xyz == null)
                continue;
            z_hash = this.xy2zhash(_xyz.x, _xyz.y);
            if (z_hash == null)
                continue;
            for (z_index in z_hash)
            {
                inst = this.uid2inst(z_hash[z_index]);
                if (is_family)
                {
                    for (i=0; i<member_cnt; i++)
                    {
                        if (inst.type == members[i])
                        {
                            sol.instances.push(inst);
                            break;
                        }
                    }
                }
                else
                {
                    if (inst.type == chess_type)
                        sol.instances.push(inst);
                }
            }
        }
        chess_type.applySolToContainer();
        return (sol.instances.length != 0);
	};
	instanceProto.point_is_in_board = function (px, py)
	{
	    var lx = this.layout.PXY2LX(px, py);
		var ly = this.layout.PXY2LY(px, py);
		return ((lx>=0) && (ly>=0) && (lx<=this.x_max) && (ly<=this.y_max));
	};
	instanceProto._pick_chess_on_LXYZ = function (chess_type, lx, ly, lz)
	{
        var uid = this.xyz2uid(lx, ly, lz);
        if (uid == null)
            return false;
        var inst = this.uid2inst(uid);
        var chess_type = inst.type;
        chess_type.getCurrentSol().pick_one(inst);
        chess_type.applySolToContainer();
        return true;
	};
	instanceProto.saveToJSON = function ()
	{
	    var uid, uid2xyz = {}, item;
	    for (uid in this.items)
	    {
	        uid2xyz[uid] = {};
	        item = this.items[uid];
	        uid2xyz[uid]["x"] = item.x;
	        uid2xyz[uid]["y"] = item.y;
	        uid2xyz[uid]["z"] = item.z;
	    }
		return { "luid": (this.layout != null)? this.layout.uid:(-1),
		         "mx": this.x_max,
                 "my": this.y_max,
                 "xyz2uid": this.board,
                 "uid2xyz": uid2xyz };
	};
	instanceProto.loadFromJSON = function (o)
	{
	    this.layoutUid = o["luid"];
		this.x_max = o["mx"];
        this.y_max = o["my"];
        this.board = o["xyz2uid"];
        hash_clean(this.items);
	    var uid, uid2xyz = o["uid2xyz"], item;
	    for (uid in uid2xyz)
	    {
	        this.items[uid] = {};
	        item = uid2xyz[uid];
	        this.items[uid].x = item["x"];
	        this.items[uid].y = item["y"];
	        this.items[uid].z = item["z"];
	    }
	};
	instanceProto.afterLoad = function ()
	{
		if (this.layoutUid === -1)
			this.layout = null;
		else
		{
			this.layout = this.runtime.getObjectByUID(this.layoutUid);
;
		}
		this.layoutUid = -1;
	};
	var hash_clean = function (obj)
	{
	    var k;
	    for (k in obj)
	        delete obj[k];
	};
	function Cnds() {};
	pluginProto.cnds = new Cnds();
	Cnds.prototype.IsEmpty = function (x,y,z)
	{
		return (this.board[x][y][z] == null);
	};
	Cnds.prototype.OnCollided = function (objA, objB)
	{
	    this._overlap_test(objA, objB);
		return false;
	};
	Cnds.prototype.IsOverlapping = function (objA, objB)
	{
	    this._overlap_test(objA, objB);
		return false;
	};
	Cnds.prototype.PointIsInBoard = function (physical_x,physical_y)
	{
		return this.point_is_in_board(physical_x,physical_y);
	};
	Cnds.prototype.AreNeighbor = function (uidA, uidB)
	{
		return this.are_neighbor(uidA, uidB);
	};
	Cnds.prototype.PickAllChess = function ()
	{
	    return this._pick_all_insts();
	};
	Cnds.prototype.OnChessKicked = function (chess_type)
	{
        if (!chess_type)
            return false;
        if (chess_type.is_family)
        {
            var members = chess_type.members;
            var member_cnt = members.length;
            var i,member, is_found=false;
            for (i=0; i<member_cnt; i++)
            {
                member = members[i];
                if (this._kicked_chess_inst.type == member)
                {
                    is_found = true;
                    break;
                }
            }
            if (!is_found)
                return false;
        }
        else
        {
	        if (this._kicked_chess_inst.type != chess_type)
	            return false;
        }
        chess_type.getCurrentSol().pick_one(this._kicked_chess_inst);
	    return true;
	};
	Cnds.prototype.PickChessAtLXY = function (chess_type, lx, ly)
	{
        if (!chess_type)
            return false;
        return this._pick_chess_on_LXY(chess_type, lx, ly);
	};
	Cnds.prototype.PickChessAboveTile = function (chess_type, tile_type)
	{
        if ((!chess_type) || (!tile_type))
            return false;
        var tiles = tile_type.getCurrentSol().getObjects();
        return this._pick_chess_on_tiles(chess_type, tiles);
	};
	Cnds.prototype.PickChessAboveTileUID = function (chess_type, tile_uid)
	{
        if (!chess_type)
            return;
        if (typeof tile_uid == "number")
        {
            var _xyz = this.uid2xyz(tile_uid);
            if (_xyz == null)
                return false;
	        return this._pick_chess_on_LXY(chess_type, _xyz.x , _xyz.y);
        }
        else
        {
            tile_uid = JSON.parse(tile_uid);
            return this._pick_chess_on_tiles(chess_type, tile_uid);
        }
	};
	Cnds.prototype.IsOnTheBoard = function (chess_type)
	{
        if (!chess_type)
            return false;
        var sol = chess_type.getCurrentSol();
        var chess_insts = sol.getObjects();
        var i, cnt=chess_insts.length, uid;
        for (i=0; i<cnt; i++)
        {
            uid = chess_insts[i].uid;
            if (!(uid in this.items))
                return false;
        }
        return true;
	};
	Cnds.prototype.PickChessAtLXYZ = function (chess_type, lx, ly, lz)
	{
        if (!chess_type)
            return false;
        return this._pick_chess_on_LXYZ(chess_type, lx, ly, lz);
	};
	function Acts() {};
	pluginProto.acts = new Acts();
	Acts.prototype.ResetBoard = function (width,height)
	{
		this.reset_board(width-1, height-1);
	};
	Acts.prototype.AddTile = function (objs,x,y)
	{
        var inst = objs.getFirstPicked();
	    this.add_item(inst,x,y,0);
	};
	Acts.prototype.DestroyChess = function (chess_type)
	{
        if (!chess_type)
            return;
        var chess = chess_type.getCurrentSol().getObjects();
        var i, chess_cnt=chess.length;
        for (i=0; i<chess_cnt; i++)
        {
	        this.remove_item(chess[i].uid);
	        this.runtime.DestroyInstance(chess[i]);
	    }
	};
	Acts.prototype.AddChess = function (objs,x,y,z)
	{
        var inst = objs.getFirstPicked();
	    this.add_item(inst,x,y,z);
	};
    Acts.prototype.SetupLayout = function (layout_objs)
	{
        var layout = layout_objs.instances[0];
        if (layout.check_name == "LAYOUT")
            this.layout = layout;
        else
            alert ("Board should connect to a layout object");
	};
	Acts.prototype.CreateTile = function (_obj_type,x,y,_layer)
	{
	    this.CreateChess(_obj_type,x,y,0,_layer);
	};
	Acts.prototype.CreateChess = function (_obj_type,x,y,z,_layer)
	{
	    this.CreateChess(_obj_type,x,y,z,_layer);
	};
	Acts.prototype.RemoveChess = function (chess_type)
	{
        if (!chess_type)
            return;
        var chess = chess_type.getCurrentSol().getObjects();
        var i, chess_cnt=chess.length;
        for (i=0; i<chess_cnt; i++)
	        this.remove_item(chess[i].uid);
	};
	Acts.prototype.MoveChess = function (chess_type, tile_objs)
	{
        var chess_uid = _get_uid(chess_type);
        var tile_uid = _get_uid(tile_objs);
	    if ((chess_uid == null) || (tile_uid == null))
	        return;
        var chess_xyz = this.uid2xyz(chess_uid);
        var tile_xyz = this.uid2xyz(tile_uid);
	    if ((chess_xyz == null) || (tile_xyz == null))
	        return;
        this.move_item(chess_uid, tile_xyz.x, tile_xyz.y, chess_xyz.z);
	};
	Acts.prototype.MoveChess2Index = function (chess_type, x, y, z)
	{
        var chess_uid = _get_uid(chess_type);
	    if (chess_uid == null)
	        return;
	    this.remove_item(chess_uid, true);
        this.add_item(chess_uid, x, y, z);
	};
	Acts.prototype.SwapChess = function (uidA, uidB)
	{
        this.SwapChess(uidA, uidB);
	};
	Acts.prototype.PickAllChess = function ()
	{
        this._pick_all_insts();
	};
	Acts.prototype.PickChessAtLXY = function (chess_type, lx, ly)
	{
        if (!chess_type)
            return;
        this._pick_chess_on_LXY(chess_type, lx, ly);
	};
	Acts.prototype.PickChessAboveTile = function (chess_type, tile_type)
	{
        if ((!chess_type) || (!tile_type))
            return false;
        var tiles = tile_type.getCurrentSol().getObjects();
        this._pick_chess_on_tiles(chess_type, tiles);
	};
	Acts.prototype.PickChessAboveTileUID = function (chess_type, tile_uid)
	{
        if (!chess_type)
            return;
        if (typeof tile_uid == "number")
        {
            var _xyz = this.uid2xyz(tile_uid);
            if (_xyz == null)
                return;
	        this._pick_chess_on_LXY(chess_type, _xyz.x , _xyz.y);
        }
        else
        {
            tile_uid = JSON.parse(tile_uid);
            this._pick_chess_on_tiles(chess_type, tile_uid);
        }
	};
	Acts.prototype.PickChessAtLXYZ = function (chess_type, lx, ly, lz)
	{
        if (!chess_type)
            return;
        this._pick_chess_on_LXYZ(chess_type, lx, ly, lz);
	};
	Acts.prototype.SetBoardWidth = function (width)
	{
	    this.set_board_width(width-1);
	};
	Acts.prototype.SetBoardHeight = function (height)
	{
	    this.set_board_height(height-1);
	};
	function Exps() {};
	pluginProto.exps = new Exps();
	Exps.prototype.UID2LX = function (ret, uid)
	{
	    var _xyz = this.uid2xyz(uid);
	    var x = (_xyz==null)? (-1):_xyz.x;
		ret.set_int(x);
	};
	Exps.prototype.UID2LY = function (ret, uid)
	{
	    var _xyz = this.uid2xyz(uid);
	    var y = (_xyz==null)? (-1):_xyz.y;
		ret.set_int(y);
	};
	Exps.prototype.UID2LZ = function (ret, uid)
	{
	    var _xyz = this.uid2xyz(uid);
	    var z = (_xyz==null)? (-1):_xyz.z;
		ret.set_int(z);
	};
	Exps.prototype.LXYZ2UID = function (ret,_x,_y,_z)
	{
        var uid = this.xyz2uid(_x,_y,_z);
        if (uid == null)
            uid = -1;
	    ret.set_int(uid);
	};
	Exps.prototype.LZ2UID = function (ret,uid,_z)
	{
	    var ret_uid = this.lz2uid(uid,_z);
		if (ret_uid == null)
		    ret_uid = (-1);
	    ret.set_int(ret_uid);
	};
	Exps.prototype.LXY2PX = function (ret,logic_x,logic_y)
	{
        var px;
        if (this.layout != null)
            px = this.layout.LXYZ2PX(logic_x,logic_y,0);
        else
            px = (-1);
	    ret.set_float(px);
	};
	Exps.prototype.LXY2PY = function (ret,logic_x,logic_y)
	{
        var py;
        if (this.layout != null)
            py = this.layout.LXYZ2PY(logic_x,logic_y,0);
        else
            py = (-1);
	    ret.set_float(py);
	};
	Exps.prototype.UID2PX = function (ret,uid)
	{
        var px;
        var _xyz = this.uid2xyz(uid);
        if ((this.layout != null) && (_xyz != null))
            px = this.layout.LXYZ2PX(_xyz.x,_xyz.y)
        else
            px = (-1);
	    ret.set_float(px);
	};
	Exps.prototype.UID2PY = function (ret,uid)
	{
        var py;
        var _xyz = this.uid2xyz(uid);
        if ((this.layout != null) && (_xyz != null))
            py = this.layout.LXYZ2PY(_xyz.x,_xyz.y)
        else
            py = (-1);
	    ret.set_float(py);
	};
	Exps.prototype.UID2LA = function (ret, uid_o, uid_to)
	{
        var angle;
        var xyz_o = this.uid2xyz(uid_o);
        var xyz_to = this.uid2xyz(uid_to);
        if ((xyz_o == null) || (xyz_to == null))
            angle = (-1);
        else
        {
            angle = this.layout.XYZ2LA(xyz_o, xyz_to);
            if (angle == null)
                angle = (-1);
        }
	    ret.set_float(angle);
	};
	Exps.prototype.LXYZ2PX = function (ret,logic_x,logic_y,logic_z)
	{
        var px;
        if (this.layout != null)
            px = this.layout.LXYZ2PX(logic_x,logic_y,logic_z);
        else
            px = (-1);
	    ret.set_float(px);
	};
	Exps.prototype.LXYZ2PY = function (ret,logic_x,logic_y,logic_z)
	{
        var py;
        if (this.layout != null)
            py = this.layout.LXYZ2PY(logic_x,logic_y,logic_z);
        else
            py = (-1);
	    ret.set_float(py);
	};
	Exps.prototype.UID2ZCnt = function (ret,uid)
	{
        var cnt;
        var _xyz = this.uid2xyz(uid);
        if ((this.layout != null) && (_xyz != null))
            cnt = this.xy2zcnt(_xyz.x, _xyz.y);
        else
            cnt = 0;
	    ret.set_int(cnt);
	};
	Exps.prototype.LXY2ZCnt = function (ret,logic_x,logic_y)
	{
        var cnt;
        if (this.layout != null)
            cnt = this.xy2zcnt(logic_x,logic_y);
        else
            cnt = 0;
	    ret.set_int(cnt);
	};
	Exps.prototype.PXY2LX = function (ret,physical_x,physical_y)
	{
	    var lx = this.layout.PXY2LX(physical_x,physical_y);
		if ((lx<0) || (lx>this.x_max))
		    lx = -1;
	    ret.set_int(lx);
	};
	Exps.prototype.PXY2LY = function (ret,physical_x,physical_y)
	{
	    var ly = this.layout.PXY2LY(physical_x,physical_y);
		if ((ly<0) || (ly>this.y_max))
		    ly = -1;
	    ret.set_int(ly);
	};
	Exps.prototype.DIR2UID = function (ret,uid,dir,lz)
	{
	    var ret_uid = this.dir2uid(uid,dir,lz);
		if (ret_uid == null)
		    ret_uid = (-1);
	    ret.set_int(ret_uid);
	};
	Exps.prototype.BoardWidth = function (ret)
	{
	    ret.set_int(this.x_max+1);
	};
	Exps.prototype.BoardHeight = function (ret)
	{
	    ret.set_int(this.y_max+1);
	};
	Exps.prototype.PXY2NearestPX = function (ret,physical_x,physical_y)
	{
	    var lx = this.layout.PXY2LX(physical_x,physical_y);
	    var ly = this.layout.PXY2LY(physical_x,physical_y);
        lx = cr.clamp(Math.round(lx), 0, this.x_max);
        ly = cr.clamp(Math.round(ly), 0, this.y_max);
	    ret.set_float(this.layout.LXYZ2PX(lx,ly,0));
	};
	Exps.prototype.PXY2NearestPY = function (ret,physical_x,physical_y)
	{
	    var lx = this.layout.PXY2LX(physical_x,physical_y);
	    var ly = this.layout.PXY2LY(physical_x,physical_y);
        lx = cr.clamp(Math.round(lx), 0, this.x_max);
        ly = cr.clamp(Math.round(ly), 0, this.y_max);
	    ret.set_float(this.layout.LXYZ2PY(lx,ly,0));
	};
	Exps.prototype.LogicDistance = function (ret, uid_A, uid_B)
	{
        var xyz_A = this.uid2xyz(uid_A);
        var xyz_B = this.uid2xyz(uid_B);
        var distanc;
        if ((xyz_A == null) || (xyz_B == null))
            distanc = (-1)
        else
        {
            var dx = xyz_B.x - xyz_A.x;
            var dy = xyz_B.y - xyz_A.y;
            distanc = Math.sqrt(dx*dx + dy*dy);
        }
	    ret.set_float(distanc);
	};
}());
;
;
cr.plugins_.Rex_SLGSquareTx = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Rex_SLGSquareTx.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
        this.check_name = "LAYOUT";
        this.is_isometric = (this.properties[0]==1);
        this.SetPOX(this.properties[1]);
        this.SetPOY(this.properties[2]);
        this.SetWidth(this.properties[3]);
        this.SetHeight(this.properties[4]);
	};
	instanceProto.SetPOX = function(pox)
	{
        this.PositionOX = pox;
	};
	instanceProto.SetPOY = function(poy)
	{
        this.PositionOY = poy;
	};
	instanceProto.GetPOX = function()
	{
        return this.PositionOX;
	};
	instanceProto.GetPOY = function()
	{
        return this.PositionOY;
	};
	instanceProto.SetWidth = function(width)
	{
        this.width = width;
        this.half_width = width/2;
	};
	instanceProto.SetHeight = function(height)
	{
        this.height = height;
        this.half_height = height/2;
	};
	instanceProto.LXYZ2PX = function(logic_x, logic_y, logic_z)
	{
        var x = (this.is_isometric)? ((logic_x - logic_y)*this.half_width):
                                     (logic_x*this.width);
        return x+this.PositionOX;
	};
	instanceProto.LXYZ2PY = function(logic_x, logic_y, logic_z)
	{
        var y = (this.is_isometric)? ((logic_x + logic_y)*this.half_height):
                                     (logic_y*this.height);
        return y+this.PositionOY;
	};
	instanceProto.PXY2LX = function(physical_x,physical_y)
	{
	    var lx;
	    if (this.is_isometric)
		{
		    physical_x -= this.PositionOX;
		    physical_y -= this.PositionOY;
		    lx = 0.5*(Math.round(physical_y/this.half_height)+Math.round(physical_x/this.half_width));
		}
		else
		    lx = (physical_x - this.PositionOX)/this.width;
        return lx;
	};
	instanceProto.PXY2LY = function(physical_x,physical_y)
	{
	    var ly;
	    if (this.is_isometric)
		{
		    physical_x -= this.PositionOX;
		    physical_y -= this.PositionOY;
		    ly = 0.5*(Math.round(physical_y/this.half_height)-Math.round(physical_x/this.half_width));
		}
		else
		    ly = (physical_y - this.PositionOY)/this.height;
        return ly;
	};
	instanceProto.CreateItem = function(obj_type,x,y,z,layer)
	{
        return this.runtime.createInstance(obj_type, layer,this.LXYZ2PX(x,y,z),this.LXYZ2PY(x,y,z) );
	};
	instanceProto.GetNeighborLX = function(x, y, dir)
	{
        var dx = (dir==0)? 1:
		         (dir==2)? (-1):
				          0;
		return (x+dx);
	};
	instanceProto.GetNeighborLY = function(x, y, dir)
	{
        var dy = (dir==1)? 1:
		        (dir==3)? (-1):
				          0;
        return (y+dy);
	};
	instanceProto.GetDirCount = function()
	{
        return 4;
	};
	instanceProto.XYZ2LA = function(xyz_o, xyz_to)
	{
	    var dx = xyz_to.x - xyz_o.x;
	    var dy = xyz_to.y - xyz_o.y;
	    var angle;
        if (dy == 0)
            angle = (dx>0)? 0: 180;
        else if (dx == 0)
            angle = (dy>0)? 90: 270;
        else
            angle = cr.to_clamped_degrees(Math.atan2(dy,dx));
        return angle;
	};
	instanceProto.XYZ2Dir = function(xyz_o, xyz_to)
	{
	    var angle = this.XYZ2LA(xyz_o, xyz_to);
	    var dir = (angle==0)?   0:
	              (angle==90)?  1:
	              (angle==180)? 2:
	              (angle==270)? 3:
	              null;  //fixme
        return dir;
	};
	instanceProto.saveToJSON = function ()
	{
		return { "iso": this.is_isometric,
                 "w": this.width,
                 "h": this.height,
                 "ox": this.PositionOX,
                 "oy": this.PositionOY};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.is_isometric = o["iso"];
        this.SetWidth(o["w"]);
        this.SetHeight(o["h"]);
        this.SetPOX(o["ox"]);
        this.SetPOY(o["oy"]);
	};
	function Cnds() {};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	pluginProto.acts = new Acts();
    Acts.prototype.SetOrientation = function (orientation)
    {
        this.is_isometric = (orientation == 1);
	};
    Acts.prototype.SetCellSize = function (width, height)
    {
        this.SetWidth(width);
        this.SetHeight(height);
	};
    Acts.prototype.SetOffset = function (x, y)
    {
        this.SetPOX(x);
        this.SetPOY(y);
	};
	function Exps() {};
	pluginProto.exps = new Exps();
	Exps.prototype.Width = function (ret)
	{
	    ret.set_float(this.width);
	};
	Exps.prototype.Height = function (ret)
    {
	    ret.set_float(this.height);
	};
	Exps.prototype.POX = function (ret)
	{
	    ret.set_float(this.PositionOX);
	};
	Exps.prototype.POY = function (ret)
    {
	    ret.set_float(this.PositionOY);
	};
}());
;
;
cr.plugins_.Sprite = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Sprite.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	function frame_getDataUri()
	{
		if (this.datauri.length === 0)
		{
			var tmpcanvas = document.createElement("canvas");
			tmpcanvas.width = this.width;
			tmpcanvas.height = this.height;
			var tmpctx = tmpcanvas.getContext("2d");
			if (this.spritesheeted)
			{
				tmpctx.drawImage(this.texture_img, this.offx, this.offy, this.width, this.height,
										 0, 0, this.width, this.height);
			}
			else
			{
				tmpctx.drawImage(this.texture_img, 0, 0, this.width, this.height);
			}
			this.datauri = tmpcanvas.toDataURL("image/png");
		}
		return this.datauri;
	};
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		var i, leni, j, lenj;
		var anim, frame, animobj, frameobj, wt, uv;
		this.all_frames = [];
		this.has_loaded_textures = false;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			animobj = {};
			animobj.name = anim[0];
			animobj.speed = anim[1];
			animobj.loop = anim[2];
			animobj.repeatcount = anim[3];
			animobj.repeatto = anim[4];
			animobj.pingpong = anim[5];
			animobj.sid = anim[6];
			animobj.frames = [];
			for (j = 0, lenj = anim[7].length; j < lenj; j++)
			{
				frame = anim[7][j];
				frameobj = {};
				frameobj.texture_file = frame[0];
				frameobj.texture_filesize = frame[1];
				frameobj.offx = frame[2];
				frameobj.offy = frame[3];
				frameobj.width = frame[4];
				frameobj.height = frame[5];
				frameobj.duration = frame[6];
				frameobj.hotspotX = frame[7];
				frameobj.hotspotY = frame[8];
				frameobj.image_points = frame[9];
				frameobj.poly_pts = frame[10];
				frameobj.pixelformat = frame[11];
				frameobj.spritesheeted = (frameobj.width !== 0);
				frameobj.datauri = "";		// generated on demand and cached
				frameobj.getDataUri = frame_getDataUri;
				uv = {};
				uv.left = 0;
				uv.top = 0;
				uv.right = 1;
				uv.bottom = 1;
				frameobj.sheetTex = uv;
				frameobj.webGL_texture = null;
				wt = this.runtime.findWaitingTexture(frame[0]);
				if (wt)
				{
					frameobj.texture_img = wt;
				}
				else
				{
					frameobj.texture_img = new Image();
					frameobj.texture_img["idtkLoadDisposed"] = true;
					frameobj.texture_img.src = frame[0];
					frameobj.texture_img.cr_src = frame[0];
					frameobj.texture_img.cr_filesize = frame[1];
					frameobj.texture_img.c2webGL_texture = null;
					this.runtime.waitForImageLoad(frameobj.texture_img);
				}
				cr.seal(frameobj);
				animobj.frames.push(frameobj);
				this.all_frames.push(frameobj);
			}
			cr.seal(animobj);
			this.animations[i] = animobj;		// swap array data for object
		}
	};
	typeProto.updateAllCurrentTexture = function ()
	{
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.curWebGLTexture = inst.curFrame.webGL_texture;
		}
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.texture_img.c2webGL_texture = null;
			frame.webGL_texture = null;
		}
		this.has_loaded_textures = false;
		this.updateAllCurrentTexture();
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.updateAllCurrentTexture();
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.has_loaded_textures || !this.runtime.glwrap)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.has_loaded_textures = true;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.has_loaded_textures)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			this.runtime.glwrap.deleteTexture(frame.webGL_texture);
			frame.webGL_texture = null;
		}
		this.has_loaded_textures = false;
	};
	var already_drawn_images = [];
	typeProto.preloadCanvas2D = function (ctx)
	{
		var i, len, frameimg;
		already_drawn_images.length = 0;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frameimg = this.all_frames[i].texture_img;
			if (already_drawn_images.indexOf(frameimg) !== -1)
					continue;
			ctx.drawImage(frameimg, 0, 0);
			already_drawn_images.push(frameimg);
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		var poly_pts = this.type.animations[0].frames[0].poly_pts;
		if (this.recycled)
			this.collision_poly.set_pts(poly_pts);
		else
			this.collision_poly = new cr.CollisionPoly(poly_pts);
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);	// 0=visible, 1=invisible
		this.isTicking = false;
		this.inAnimTrigger = false;
		this.collisionsEnabled = (this.properties[3] !== 0);
		if (!(this.type.animations.length === 1 && this.type.animations[0].frames.length === 1) && this.type.animations[0].speed !== 0)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		this.cur_animation = this.getAnimationByName(this.properties[1]) || this.type.animations[0];
		this.cur_frame = this.properties[2];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		var curanimframe = this.cur_animation.frames[this.cur_frame];
		this.collision_poly.set_pts(curanimframe.poly_pts);
		this.hotspotX = curanimframe.hotspotX;
		this.hotspotY = curanimframe.hotspotY;
		this.cur_anim_speed = this.cur_animation.speed;
		if (this.recycled)
			this.animTimer.reset();
		else
			this.animTimer = new cr.KahanAdder();
		this.frameStart = this.getNowTime();
		this.animPlaying = true;
		this.animRepeats = 0;
		this.animForwards = true;
		this.animTriggerName = "";
		this.changeAnimName = "";
		this.changeAnimFrom = 0;
		this.changeAnimFrame = -1;
		this.type.loadTextures();
		var i, leni, j, lenj;
		var anim, frame, uv, maintex;
		for (i = 0, leni = this.type.animations.length; i < leni; i++)
		{
			anim = this.type.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frame = anim.frames[j];
				if (frame.width === 0)
				{
					frame.width = frame.texture_img.width;
					frame.height = frame.texture_img.height;
				}
				if (frame.spritesheeted)
				{
					maintex = frame.texture_img;
					uv = frame.sheetTex;
					uv.left = frame.offx / maintex.width;
					uv.top = frame.offy / maintex.height;
					uv.right = (frame.offx + frame.width) / maintex.width;
					uv.bottom = (frame.offy + frame.height) / maintex.height;
					if (frame.offx === 0 && frame.offy === 0 && frame.width === maintex.width && frame.height === maintex.height)
					{
						frame.spritesheeted = false;
					}
				}
			}
		}
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"a": this.cur_animation.sid,
			"f": this.cur_frame,
			"cas": this.cur_anim_speed,
			"fs": this.frameStart,
			"ar": this.animRepeats,
			"at": this.animTimer.sum
		};
		if (!this.animPlaying)
			o["ap"] = this.animPlaying;
		if (!this.animForwards)
			o["af"] = this.animForwards;
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		var anim = this.getAnimationBySid(o["a"]);
		if (anim)
			this.cur_animation = anim;
		this.cur_frame = o["f"];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		this.cur_anim_speed = o["cas"];
		this.frameStart = o["fs"];
		this.animRepeats = o["ar"];
		this.animTimer.reset();
		this.animTimer.sum = o["at"];
		this.animPlaying = o.hasOwnProperty("ap") ? o["ap"] : true;
		this.animForwards = o.hasOwnProperty("af") ? o["af"] : true;
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
		this.collision_poly.set_pts(this.curFrame.poly_pts);
		this.hotspotX = this.curFrame.hotspotX;
		this.hotspotY = this.curFrame.hotspotY;
	};
	instanceProto.animationFinish = function (reverse)
	{
		this.cur_frame = reverse ? 0 : this.cur_animation.frames.length - 1;
		this.animPlaying = false;
		this.animTriggerName = this.cur_animation.name;
		this.inAnimTrigger = true;
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished, this);
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnimFinished, this);
		this.inAnimTrigger = false;
		this.animRepeats = 0;
	};
	instanceProto.getNowTime = function()
	{
		return this.animTimer.sum;
	};
	instanceProto.tick = function()
	{
		this.animTimer.add(this.runtime.getDt(this));
		if (this.changeAnimName.length)
			this.doChangeAnim();
		if (this.changeAnimFrame >= 0)
			this.doChangeAnimFrame();
		var now = this.getNowTime();
		var cur_animation = this.cur_animation;
		var prev_frame = cur_animation.frames[this.cur_frame];
		var next_frame;
		var cur_frame_time = prev_frame.duration / this.cur_anim_speed;
		if (this.animPlaying && now >= this.frameStart + cur_frame_time)
		{
			if (this.animForwards)
			{
				this.cur_frame++;
			}
			else
			{
				this.cur_frame--;
			}
			this.frameStart += cur_frame_time;
			if (this.cur_frame >= cur_animation.frames.length)
			{
				if (cur_animation.pingpong)
				{
					this.animForwards = false;
					this.cur_frame = cur_animation.frames.length - 2;
				}
				else if (cur_animation.loop)
				{
					this.cur_frame = cur_animation.repeatto;
				}
				else
				{
					this.animRepeats++;
					if (this.animRepeats >= cur_animation.repeatcount)
					{
						this.animationFinish(false);
					}
					else
					{
						this.cur_frame = cur_animation.repeatto;
					}
				}
			}
			if (this.cur_frame < 0)
			{
				if (cur_animation.pingpong)
				{
					this.cur_frame = 1;
					this.animForwards = true;
					if (!cur_animation.loop)
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
					}
				}
				else
				{
					if (cur_animation.loop)
					{
						this.cur_frame = cur_animation.repeatto;
					}
					else
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
						else
						{
							this.cur_frame = cur_animation.repeatto;
						}
					}
				}
			}
			if (this.cur_frame < 0)
				this.cur_frame = 0;
			else if (this.cur_frame >= cur_animation.frames.length)
				this.cur_frame = cur_animation.frames.length - 1;
			if (now > this.frameStart + (cur_animation.frames[this.cur_frame].duration / this.cur_anim_speed))
			{
				this.frameStart = now;
			}
			next_frame = cur_animation.frames[this.cur_frame];
			this.OnFrameChanged(prev_frame, next_frame);
			this.runtime.redraw = true;
		}
	};
	instanceProto.getAnimationByName = function (name_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (cr.equals_nocase(a.name, name_))
				return a;
		}
		return null;
	};
	instanceProto.getAnimationBySid = function (sid_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (a.sid === sid_)
				return a;
		}
		return null;
	};
	instanceProto.doChangeAnim = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var anim = this.getAnimationByName(this.changeAnimName);
		this.changeAnimName = "";
		if (!anim)
			return;
		if (cr.equals_nocase(anim.name, this.cur_animation.name) && this.animPlaying)
			return;
		this.cur_animation = anim;
		this.cur_anim_speed = anim.speed;
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (this.changeAnimFrom === 1)
			this.cur_frame = 0;
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		this.animForwards = true;
		this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
		this.runtime.redraw = true;
	};
	instanceProto.doChangeAnimFrame = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var prev_frame_number = this.cur_frame;
		this.cur_frame = cr.floor(this.changeAnimFrame);
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (prev_frame_number !== this.cur_frame)
		{
			this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
			this.frameStart = this.getNowTime();
			this.runtime.redraw = true;
		}
		this.changeAnimFrame = -1;
	};
	instanceProto.OnFrameChanged = function (prev_frame, next_frame)
	{
		var oldw = prev_frame.width;
		var oldh = prev_frame.height;
		var neww = next_frame.width;
		var newh = next_frame.height;
		if (oldw != neww)
			this.width *= (neww / oldw);
		if (oldh != newh)
			this.height *= (newh / oldh);
		this.hotspotX = next_frame.hotspotX;
		this.hotspotY = next_frame.hotspotY;
		this.collision_poly.set_pts(next_frame.poly_pts);
		this.set_bbox_changed();
		this.curFrame = next_frame;
		this.curWebGLTexture = next_frame.webGL_texture;
		var i, len, b;
		for (i = 0, len = this.behavior_insts.length; i < len; i++)
		{
			b = this.behavior_insts[i];
			if (b.onSpriteFrameChanged)
				b.onSpriteFrameChanged(prev_frame, next_frame);
		}
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnFrameChanged, this);
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		var cur_frame = this.curFrame;
		var spritesheeted = cur_frame.spritesheeted;
		var cur_image = cur_frame.texture_img;
		var myx = this.x;
		var myy = this.y;
		var w = this.width;
		var h = this.height;
		if (this.angle === 0 && w >= 0 && h >= 0)
		{
			myx -= this.hotspotX * w;
			myy -= this.hotspotY * h;
			if (this.runtime.pixel_rounding)
			{
				myx = Math.round(myx);
				myy = Math.round(myy);
			}
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 myx, myy, w, h);
			}
			else
			{
				ctx.drawImage(cur_image, myx, myy, w, h);
			}
		}
		else
		{
			if (this.runtime.pixel_rounding)
			{
				myx = Math.round(myx);
				myy = Math.round(myy);
			}
			ctx.save();
			var widthfactor = w > 0 ? 1 : -1;
			var heightfactor = h > 0 ? 1 : -1;
			ctx.translate(myx, myy);
			if (widthfactor !== 1 || heightfactor !== 1)
				ctx.scale(widthfactor, heightfactor);
			ctx.rotate(this.angle * widthfactor * heightfactor);
			var drawx = 0 - (this.hotspotX * cr.abs(w))
			var drawy = 0 - (this.hotspotY * cr.abs(h));
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 drawx, drawy, cr.abs(w), cr.abs(h));
			}
			else
			{
				ctx.drawImage(cur_image, drawx, drawy, cr.abs(w), cr.abs(h));
			}
			ctx.restore();
		}
		/*
		ctx.strokeStyle = "#f00";
		ctx.lineWidth = 3;
		ctx.beginPath();
		this.collision_poly.cache_poly(this.width, this.height, this.angle);
		var i, len, ax, ay, bx, by;
		for (i = 0, len = this.collision_poly.pts_count; i < len; i++)
		{
			ax = this.collision_poly.pts_cache[i*2] + this.x;
			ay = this.collision_poly.pts_cache[i*2+1] + this.y;
			bx = this.collision_poly.pts_cache[((i+1)%len)*2] + this.x;
			by = this.collision_poly.pts_cache[((i+1)%len)*2+1] + this.y;
			ctx.moveTo(ax, ay);
			ctx.lineTo(bx, by);
		}
		ctx.stroke();
		ctx.closePath();
		*/
		/*
		if (this.behavior_insts.length >= 1 && this.behavior_insts[0].draw)
		{
			this.behavior_insts[0].draw(ctx);
		}
		*/
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.curWebGLTexture);
		glw.setOpacity(this.opacity);
		var cur_frame = this.curFrame;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = Math.round(this.x) - this.x;
			var oy = Math.round(this.y) - this.y;
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, cur_frame.sheetTex);
			else
				glw.quad(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy);
		}
		else
		{
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, cur_frame.sheetTex);
			else
				glw.quad(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly);
		}
	};
	instanceProto.getImagePointIndexByName = function(name_)
	{
		var cur_frame = this.curFrame;
		var i, len;
		for (i = 0, len = cur_frame.image_points.length; i < len; i++)
		{
			if (cr.equals_nocase(name_, cur_frame.image_points[i][0]))
				return i;
		}
		return -1;
	};
	instanceProto.getImagePoint = function(imgpt, getX)
	{
		var cur_frame = this.curFrame;
		var image_points = cur_frame.image_points;
		var index;
		if (cr.is_string(imgpt))
			index = this.getImagePointIndexByName(imgpt);
		else
			index = imgpt - 1;	// 0 is origin
		index = cr.floor(index);
		if (index < 0 || index >= image_points.length)
			return getX ? this.x : this.y;	// return origin
		var x = (image_points[index][1] - cur_frame.hotspotX) * this.width;
		var y = image_points[index][2];
		y = (y - cur_frame.hotspotY) * this.height;
		var cosa = Math.cos(this.angle);
		var sina = Math.sin(this.angle);
		var x_temp = (x * cosa) - (y * sina);
		y = (y * cosa) + (x * sina);
		x = x_temp;
		x += this.x;
		y += this.y;
		return getX ? x : y;
	};
	function Cnds() {};
	var arrCache = [];
	function allocArr()
	{
		if (arrCache.length)
			return arrCache.pop();
		else
			return [0, 0, 0];
	};
	function freeArr(a)
	{
		a[0] = 0;
		a[1] = 0;
		a[2] = 0;
		arrCache.push(a);
	};
	function makeCollKey(a, b)
	{
		if (a < b)
			return "" + a + "," + b;
		else
			return "" + b + "," + a;
	};
	function collmemory_add(collmemory, a, b, tickcount)
	{
		var a_uid = a.uid;
		var b_uid = b.uid;
		var key = makeCollKey(a_uid, b_uid);
		if (collmemory.hasOwnProperty(key))
		{
			collmemory[key][2] = tickcount;
			return;
		}
		var arr = allocArr();
		arr[0] = a_uid;
		arr[1] = b_uid;
		arr[2] = tickcount;
		collmemory[key] = arr;
	};
	function collmemory_remove(collmemory, a, b)
	{
		var key = makeCollKey(a.uid, b.uid);
		if (collmemory.hasOwnProperty(key))
		{
			freeArr(collmemory[key]);
			delete collmemory[key];
		}
	};
	function collmemory_removeInstance(collmemory, inst)
	{
		var uid = inst.uid;
		var p, entry;
		for (p in collmemory)
		{
			if (collmemory.hasOwnProperty(p))
			{
				entry = collmemory[p];
				if (entry[0] === uid || entry[1] === uid)
				{
					freeArr(collmemory[p]);
					delete collmemory[p];
				}
			}
		}
	};
	var last_coll_tickcount = -2;
	function collmemory_has(collmemory, a, b)
	{
		var key = makeCollKey(a.uid, b.uid);
		if (collmemory.hasOwnProperty(key))
		{
			last_coll_tickcount = collmemory[key][2];
			return true;
		}
		else
		{
			last_coll_tickcount = -2;
			return false;
		}
	};
	var candidates1 = [];
	Cnds.prototype.OnCollision = function (rtype)
	{
		if (!rtype)
			return false;
		var runtime = this.runtime;
		var cnd = runtime.getCurrentCondition();
		var ltype = cnd.type;
		if (!cnd.extra["collmemory"])
		{
			cnd.extra["collmemory"] = {};
			runtime.addDestroyCallback((function (collmemory) {
				return function(inst) {
					collmemory_removeInstance(collmemory, inst);
				};
			})(cnd.extra["collmemory"]));
		}
		var collmemory = cnd.extra["collmemory"];
		var lsol = ltype.getCurrentSol();
		var rsol = rtype.getCurrentSol();
		var linstances = lsol.getObjects();
		var rinstances;
		var l, linst, r, rinst;
		var curlsol, currsol;
		var tickcount = this.runtime.tickcount;
		var lasttickcount = tickcount - 1;
		var exists, run;
		var current_event = runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		for (l = 0; l < linstances.length; l++)
		{
			linst = linstances[l];
			if (rsol.select_all)
			{
				linst.update_bbox();
				this.runtime.getCollisionCandidates(linst.layer, rtype, linst.bbox, candidates1);
				rinstances = candidates1;
			}
			else
				rinstances = rsol.getObjects();
			for (r = 0; r < rinstances.length; r++)
			{
				rinst = rinstances[r];
				if (runtime.testOverlap(linst, rinst) || runtime.checkRegisteredCollision(linst, rinst))
				{
					exists = collmemory_has(collmemory, linst, rinst);
					run = (!exists || (last_coll_tickcount < lasttickcount));
					collmemory_add(collmemory, linst, rinst, tickcount);
					if (run)
					{
						runtime.pushCopySol(current_event.solModifiers);
						curlsol = ltype.getCurrentSol();
						currsol = rtype.getCurrentSol();
						curlsol.select_all = false;
						currsol.select_all = false;
						if (ltype === rtype)
						{
							curlsol.instances.length = 2;	// just use lsol, is same reference as rsol
							curlsol.instances[0] = linst;
							curlsol.instances[1] = rinst;
							ltype.applySolToContainer();
						}
						else
						{
							curlsol.instances.length = 1;
							currsol.instances.length = 1;
							curlsol.instances[0] = linst;
							currsol.instances[0] = rinst;
							ltype.applySolToContainer();
							rtype.applySolToContainer();
						}
						current_event.retrigger();
						runtime.popSol(current_event.solModifiers);
					}
				}
				else
				{
					collmemory_remove(collmemory, linst, rinst);
				}
			}
			candidates1.length = 0;
		}
		return false;
	};
	var rpicktype = null;
	var rtopick = new cr.ObjectSet();
	var needscollisionfinish = false;
	var candidates2 = [];
	function DoOverlapCondition(rtype, offx, offy)
	{
		if (!rtype)
			return false;
		var do_offset = (offx !== 0 || offy !== 0);
		var oldx, oldy, ret = false, r, lenr, rinst;
		var cnd = this.runtime.getCurrentCondition();
		var ltype = cnd.type;
		var inverted = cnd.inverted;
		var rsol = rtype.getCurrentSol();
		var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
		var rinstances;
		if (rsol.select_all)
		{
			this.update_bbox();
			this.runtime.getCollisionCandidates(this.layer, rtype, this.bbox, candidates2);
			rinstances = candidates2;
		}
		else if (orblock)
			rinstances = rsol.else_instances;
		else
			rinstances = rsol.instances;
		rpicktype = rtype;
		needscollisionfinish = (ltype !== rtype && !inverted);
		if (do_offset)
		{
			oldx = this.x;
			oldy = this.y;
			this.x += offx;
			this.y += offy;
			this.set_bbox_changed();
		}
		for (r = 0, lenr = rinstances.length; r < lenr; r++)
		{
			rinst = rinstances[r];
			if (this.runtime.testOverlap(this, rinst))
			{
				ret = true;
				if (inverted)
					break;
				if (ltype !== rtype)
					rtopick.add(rinst);
			}
		}
		if (do_offset)
		{
			this.x = oldx;
			this.y = oldy;
			this.set_bbox_changed();
		}
		candidates2.length = 0;
		return ret;
	};
	typeProto.finish = function (do_pick)
	{
		if (!needscollisionfinish)
			return;
		if (do_pick)
		{
			var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
			var sol = rpicktype.getCurrentSol();
			var topick = rtopick.valuesRef();
			var i, len, inst;
			if (sol.select_all)
			{
				sol.select_all = false;
				sol.instances.length = topick.length;
				for (i = 0, len = topick.length; i < len; i++)
				{
					sol.instances[i] = topick[i];
				}
				if (orblock)
				{
					sol.else_instances.length = 0;
					for (i = 0, len = rpicktype.instances.length; i < len; i++)
					{
						inst = rpicktype.instances[i];
						if (!rtopick.contains(inst))
							sol.else_instances.push(inst);
					}
				}
			}
			else
			{
				if (orblock)
				{
					var initsize = sol.instances.length;
					sol.instances.length = initsize + topick.length;
					for (i = 0, len = topick.length; i < len; i++)
					{
						sol.instances[initsize + i] = topick[i];
						cr.arrayFindRemove(sol.else_instances, topick[i]);
					}
				}
				else
				{
					cr.shallowAssignArray(sol.instances, topick);
				}
			}
			rpicktype.applySolToContainer();
		}
		rtopick.clear();
		needscollisionfinish = false;
	};
	Cnds.prototype.IsOverlapping = function (rtype)
	{
		return DoOverlapCondition.call(this, rtype, 0, 0);
	};
	Cnds.prototype.IsOverlappingOffset = function (rtype, offx, offy)
	{
		return DoOverlapCondition.call(this, rtype, offx, offy);
	};
	Cnds.prototype.IsAnimPlaying = function (animname)
	{
		if (this.changeAnimName.length)
			return cr.equals_nocase(this.changeAnimName, animname);
		else
			return cr.equals_nocase(this.cur_animation.name, animname);
	};
	Cnds.prototype.CompareFrame = function (cmp, framenum)
	{
		return cr.do_cmp(this.cur_frame, cmp, framenum);
	};
	Cnds.prototype.CompareAnimSpeed = function (cmp, x)
	{
		var s = (this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed);
		return cr.do_cmp(s, cmp, x);
	};
	Cnds.prototype.OnAnimFinished = function (animname)
	{
		return cr.equals_nocase(this.animTriggerName, animname);
	};
	Cnds.prototype.OnAnyAnimFinished = function ()
	{
		return true;
	};
	Cnds.prototype.OnFrameChanged = function ()
	{
		return true;
	};
	Cnds.prototype.IsMirrored = function ()
	{
		return this.width < 0;
	};
	Cnds.prototype.IsFlipped = function ()
	{
		return this.height < 0;
	};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	Cnds.prototype.IsCollisionEnabled = function ()
	{
		return this.collisionsEnabled;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Spawn = function (obj, layer, imgpt)
	{
		if (!obj || !layer)
			return;
		var inst = this.runtime.createInstance(obj, layer, this.getImagePoint(imgpt, true), this.getImagePoint(imgpt, false));
		if (!inst)
			return;
		if (typeof inst.angle !== "undefined")
		{
			inst.angle = this.angle;
			inst.set_bbox_changed();
		}
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
		var cur_act = this.runtime.getCurrentAction();
		var reset_sol = false;
		if (cr.is_undefined(cur_act.extra["Spawn_LastExec"]) || cur_act.extra["Spawn_LastExec"] < this.runtime.execcount)
		{
			reset_sol = true;
			cur_act.extra["Spawn_LastExec"] = this.runtime.execcount;
		}
		var sol;
		if (obj != this.type)
		{
			sol = obj.getCurrentSol();
			sol.select_all = false;
			if (reset_sol)
			{
				sol.instances.length = 1;
				sol.instances[0] = inst;
			}
			else
				sol.instances.push(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					s = inst.siblings[i];
					sol = s.type.getCurrentSol();
					sol.select_all = false;
					if (reset_sol)
					{
						sol.instances.length = 1;
						sol.instances[0] = s;
					}
					else
						sol.instances.push(s);
				}
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.StopAnim = function ()
	{
		this.animPlaying = false;
	};
	Acts.prototype.StartAnim = function (from)
	{
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		if (from === 1 && this.cur_frame !== 0)
		{
			this.changeAnimFrame = 0;
			if (!this.inAnimTrigger)
				this.doChangeAnimFrame();
		}
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetAnim = function (animname, from)
	{
		this.changeAnimName = animname;
		this.changeAnimFrom = from;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnim();
	};
	Acts.prototype.SetAnimFrame = function (framenumber)
	{
		this.changeAnimFrame = framenumber;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnimFrame();
	};
	Acts.prototype.SetAnimSpeed = function (s)
	{
		this.cur_anim_speed = cr.abs(s);
		this.animForwards = (s >= 0);
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetMirrored = function (m)
	{
		var neww = cr.abs(this.width) * (m === 0 ? -1 : 1);
		if (this.width === neww)
			return;
		this.width = neww;
		this.set_bbox_changed();
	};
	Acts.prototype.SetFlipped = function (f)
	{
		var newh = cr.abs(this.height) * (f === 0 ? -1 : 1);
		if (this.height === newh)
			return;
		this.height = newh;
		this.set_bbox_changed();
	};
	Acts.prototype.SetScale = function (s)
	{
		var cur_frame = this.curFrame;
		var mirror_factor = (this.width < 0 ? -1 : 1);
		var flip_factor = (this.height < 0 ? -1 : 1);
		var new_width = cur_frame.width * s * mirror_factor;
		var new_height = cur_frame.height * s * flip_factor;
		if (this.width !== new_width || this.height !== new_height)
		{
			this.width = new_width;
			this.height = new_height;
			this.set_bbox_changed();
		}
	};
	Acts.prototype.LoadURL = function (url_, resize_)
	{
		var img = new Image();
		var self = this;
		var curFrame_ = this.curFrame;
		img.onload = function ()
		{
			if (curFrame_.texture_img.src === img.src)
			{
				if (self.runtime.glwrap && self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.runtime.redraw = true;
				self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
				return;
			}
			curFrame_.texture_img = img;
			curFrame_.offx = 0;
			curFrame_.offy = 0;
			curFrame_.width = img.width;
			curFrame_.height = img.height;
			curFrame_.spritesheeted = false;
			curFrame_.datauri = "";
			curFrame_.pixelformat = 0;	// reset to RGBA, since we don't know what type of image will have come in
			if (self.runtime.glwrap)
			{
				if (curFrame_.webGL_texture)
					self.runtime.glwrap.deleteTexture(curFrame_.webGL_texture);
				curFrame_.webGL_texture = self.runtime.glwrap.loadTexture(img, false, self.runtime.linearSampling);
				if (self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.type.updateAllCurrentTexture();
			}
			if (resize_ === 0)		// resize to image size
			{
				self.width = img.width;
				self.height = img.height;
				self.set_bbox_changed();
			}
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img["crossOrigin"] = "anonymous";
		img.src = url_;
	};
	Acts.prototype.SetCollisions = function (set_)
	{
		if (this.collisionsEnabled === (set_ !== 0))
			return;		// no change
		this.collisionsEnabled = (set_ !== 0);
		if (this.collisionsEnabled)
			this.set_bbox_changed();		// needs to be added back to cells
		else
		{
			if (this.collcells.right >= this.collcells.left)
				this.type.collision_grid.update(this, this.collcells, null);
			this.collcells.set(0, 0, -1, -1);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.AnimationFrame = function (ret)
	{
		ret.set_int(this.cur_frame);
	};
	Exps.prototype.AnimationFrameCount = function (ret)
	{
		ret.set_int(this.cur_animation.frames.length);
	};
	Exps.prototype.AnimationName = function (ret)
	{
		ret.set_string(this.cur_animation.name);
	};
	Exps.prototype.AnimationSpeed = function (ret)
	{
		ret.set_float(this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed);
	};
	Exps.prototype.ImagePointX = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, true));
	};
	Exps.prototype.ImagePointY = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, false));
	};
	Exps.prototype.ImagePointCount = function (ret)
	{
		ret.set_int(this.curFrame.image_points.length);
	};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.curFrame.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.curFrame.height);
	};
	pluginProto.exps = new Exps();
}());
/* global cr,log,assert2 */
/* jshint globalstrict: true */
/* jshint strict: true */
;
;
cr.plugins_.Spritefont2 = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Spritefont2.prototype;
	pluginProto.onCreate = function ()
	{
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img["idtkLoadDisposed"] = true;
		this.texture_img.src = this.texture_file;
		this.runtime.waitForImageLoad(this.texture_img);
		this.webGL_texture = null;
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, false, this.runtime.linearSampling, this.texture_pixelformat);
		}
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].webGL_texture = this.webGL_texture;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.webGL_texture)
			return;
		this.runtime.glwrap.deleteTexture(this.webGL_texture);
		this.webGL_texture = null;
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onDestroy = function()
	{
		freeAllLines (this.lines);
		freeAllClip  (this.clipList);
		freeAllClipUV(this.clipUV);
		cr.wipe(this.characterWidthList);
	};
	instanceProto.onCreate = function()
	{
		this.texture_img      = this.type.texture_img;
		this.characterWidth   = this.properties[0];
		this.characterHeight  = this.properties[1];
		this.characterSet     = this.properties[2];
		this.text             = this.properties[3];
		this.characterScale   = this.properties[4];
		this.visible          = (this.properties[5] === 0);	// 0=visible, 1=invisible
		this.halign           = this.properties[6]/2.0;			// 0=left, 1=center, 2=right
		this.valign           = this.properties[7]/2.0;			// 0=top, 1=center, 2=bottom
		this.wrapbyword       = (this.properties[9] === 0);	// 0=word, 1=character
		this.characterSpacing = this.properties[10];
		this.lineHeight       = this.properties[11];
		this.textWidth  = 0;
		this.textHeight = 0;
		if (this.recycled)
		{
			this.lines.length = 0;
			cr.wipe(this.clipList);
			cr.wipe(this.clipUV);
			cr.wipe(this.characterWidthList);
		}
		else
		{
			this.lines = [];
			this.clipList = {};
			this.clipUV = {};
			this.characterWidthList = {};
		}
		this.text_changed = true;
		this.lastwrapwidth = this.width;
		if (this.runtime.glwrap)
		{
			if (!this.type.webGL_texture)
			{
				this.type.webGL_texture = this.runtime.glwrap.loadTexture(this.type.texture_img, false, this.runtime.linearSampling, this.type.texture_pixelformat);
			}
			this.webGL_texture = this.type.webGL_texture;
		}
		this.SplitSheet();
	};
	instanceProto.saveToJSON = function ()
	{
		var save = {
			"t": this.text,
			"csc": this.characterScale,
			"csp": this.characterSpacing,
			"lh": this.lineHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick,
			"cw": {}
		};
		for (var ch in this.characterWidthList)
			save["cw"][ch] = this.characterWidthList[ch];
		return save;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.characterScale = o["csc"];
		this.characterSpacing = o["csp"];
		this.lineHeight = o["lh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		for(var ch in o["cw"])
			this.characterWidthList[ch] = o["cw"][ch];
		this.text_changed = true;
		this.lastwrapwidth = this.width;
	};
	function trimRight(text)
	{
		return text.replace(/\s\s*$/, '');
	}
	var MAX_CACHE_SIZE = 1000;
	function alloc(cache,Constructor)
	{
		if (cache.length)
			return cache.pop();
		else
			return new Constructor();
	}
	function free(cache,data)
	{
		if (cache.length < MAX_CACHE_SIZE)
		{
			cache.push(data);
		}
	}
	function freeAll(cache,dataList,isArray)
	{
		if (isArray) {
			var i, len;
			for (i = 0, len = dataList.length; i < len; i++)
			{
				free(cache,dataList[i]);
			}
			dataList.length = 0;
		} else {
			var prop;
			for(prop in dataList) {
				if(Object.prototype.hasOwnProperty.call(dataList,prop)) {
					free(cache,dataList[prop]);
					delete dataList[prop];
				}
			}
		}
	}
	function addLine(inst,lineIndex,cur_line) {
		var lines = inst.lines;
		var line;
		cur_line = trimRight(cur_line);
		if (lineIndex >= lines.length)
			lines.push(allocLine());
		line = lines[lineIndex];
		line.text = cur_line;
		line.width = inst.measureWidth(cur_line);
		inst.textWidth = cr.max(inst.textWidth,line.width);
	}
	var linesCache = [];
	function allocLine()       { return alloc(linesCache,Object); }
	function freeLine(l)       { free(linesCache,l); }
	function freeAllLines(arr) { freeAll(linesCache,arr,true); }
	function addClip(obj,property,x,y,w,h) {
		if (obj[property] === undefined) {
			obj[property] = alloc(clipCache,Object);
		}
		obj[property].x = x;
		obj[property].y = y;
		obj[property].w = w;
		obj[property].h = h;
	}
	var clipCache = [];
	function allocClip()      { return alloc(clipCache,Object); }
	function freeAllClip(obj) { freeAll(clipCache,obj,false);}
	function addClipUV(obj,property,left,top,right,bottom) {
		if (obj[property] === undefined) {
			obj[property] = alloc(clipUVCache,cr.rect);
		}
		obj[property].left   = left;
		obj[property].top    = top;
		obj[property].right  = right;
		obj[property].bottom = bottom;
	}
	var clipUVCache = [];
	function allocClipUV()      { return alloc(clipUVCache,cr.rect);}
	function freeAllClipUV(obj) { freeAll(clipUVCache,obj,false);}
	instanceProto.SplitSheet = function() {
		var texture      = this.texture_img;
		var texWidth     = texture.width;
		var texHeight    = texture.height;
		var charWidth    = this.characterWidth;
		var charHeight   = this.characterHeight;
		var charU        = charWidth /texWidth;
		var charV        = charHeight/texHeight;
		var charSet      = this.characterSet ;
		var cols = Math.floor(texWidth/charWidth);
		var rows = Math.floor(texHeight/charHeight);
		for ( var c = 0; c < charSet.length; c++) {
			if  (c >= cols * rows) break;
			var x = c%cols;
			var y = Math.floor(c/cols);
			var letter = charSet.charAt(c);
			if (this.runtime.glwrap) {
				addClipUV(
					this.clipUV, letter,
					x * charU ,
					y * charV ,
					(x+1) * charU ,
					(y+1) * charV
				);
			} else {
				addClip(
					this.clipList, letter,
					x * charWidth,
					y * charHeight,
					charWidth,
					charHeight
				);
			}
		}
	};
	/*
     *	Word-Wrapping
     */
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	pluginProto.WordWrap = function (inst)
	{
		var text = inst.text;
		var lines = inst.lines;
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		var width = inst.width;
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		var charWidth = inst.characterWidth;
		var charScale = inst.characterScale;
		var charSpacing = inst.characterSpacing;
		if ( (text.length * (charWidth * charScale + charSpacing) - charSpacing) <= width && text.indexOf("\n") === -1)
		{
			var all_width = inst.measureWidth(text);
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				inst.textWidth  = all_width;
				inst.textHeight = inst.characterHeight * charScale + inst.lineHeight;
				return;
			}
		}
		var wrapbyword = inst.wrapbyword;
		this.WrapText(inst);
		inst.textHeight = lines.length * (inst.characterHeight * charScale + inst.lineHeight);
	};
	pluginProto.WrapText = function (inst)
	{
		var wrapbyword = inst.wrapbyword;
		var text       = inst.text;
		var lines      = inst.lines;
		var width      = inst.width;
		var wordArray;
		if (wrapbyword) {
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		} else {
			wordArray = text;
		}
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		var ignore_newline = false;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (ignore_newline === true) {
					ignore_newline = false;
				} else {
					addLine(inst,lineIndex,cur_line);
					lineIndex++;
				}
				cur_line = "";
				continue;
			}
			ignore_newline = false;
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = inst.measureWidth(trimRight(cur_line));
			if (line_width > width)
			{
				if (prev_line === "") {
					addLine(inst,lineIndex,cur_line);
					cur_line = "";
					ignore_newline = true;
				} else {
					addLine(inst,lineIndex,prev_line);
					cur_line = wordArray[i];
				}
				lineIndex++;
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (trimRight(cur_line).length)
		{
			addLine(inst,lineIndex,cur_line);
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	instanceProto.measureWidth = function(text) {
		var spacing = this.characterSpacing;
		var len     = text.length;
		var width   = 0;
		for (var i = 0; i < len; i++) {
			width += this.getCharacterWidth(text.charAt(i)) * this.characterScale + spacing;
		}
		width -= (width > 0) ? spacing : 0;
		return width;
	};
	/***/
	instanceProto.getCharacterWidth = function(character) {
		var widthList = this.characterWidthList;
		if (widthList[character] !== undefined) {
			return widthList[character];
		} else {
			return this.characterWidth;
		}
	};
	instanceProto.rebuildText = function() {
		if (this.text_changed || this.width !== this.lastwrapwidth) {
			this.textWidth = 0;
			this.textHeight = 0;
			this.type.plugin.WordWrap(this);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
	};
	var EPSILON = 0.00001;
	instanceProto.draw = function(ctx, glmode)
	{
		var texture = this.texture_img;
		if (this.text !== "" && texture != null) {
			this.rebuildText();
			if (this.height < this.characterHeight*this.characterScale + this.lineHeight) {
				return;
			}
			ctx.globalAlpha = this.opacity;
			var myx = this.x;
			var myy = this.y;
			if (this.runtime.pixel_rounding)
			{
				myx = Math.round(myx);
				myy = Math.round(myy);
			}
			var viewLeft = this.layer.viewLeft;
			var viewTop = this.layer.viewTop;
			var viewRight = this.layer.viewRight;
			var viewBottom = this.layer.viewBottom;
			ctx.save();
			ctx.translate(myx, myy);
			ctx.rotate(this.angle);
			var ha         = this.halign;
			var va         = this.valign;
			var scale      = this.characterScale;
			var charHeight = this.characterHeight * scale;
			var lineHeight = this.lineHeight;
			var charSpace  = this.characterSpacing;
			var lines = this.lines;
			var textHeight = this.textHeight;
			var letterWidth;
			var halign;
			var valign = va * cr.max(0,(this.height - textHeight));
			var offx = -(this.hotspotX * this.width);
			var offy = -(this.hotspotY * this.height);
			offy += valign;
			var drawX ;
			var drawY = offy;
			var roundX, roundY;
			for(var i = 0; i < lines.length; i++) {
				var line = lines[i].text;
				var len  = lines[i].width;
				halign = ha * cr.max(0,this.width - len);
				drawX = offx + halign;
				drawY += lineHeight;
				if (myy + drawY + charHeight < viewTop)
				{
					drawY += charHeight;
					continue;
				}
				for(var j = 0; j < line.length; j++) {
					var letter = line.charAt(j);
					letterWidth = this.getCharacterWidth(letter);
					var clip = this.clipList[letter];
					if (myx + drawX + letterWidth * scale + charSpace < viewLeft)
					{
						drawX += letterWidth * scale + charSpace;
						continue;
					}
					if ( drawX + letterWidth * scale > this.width + EPSILON ) {
						break;
					}
					if (clip !== undefined) {
						roundX = drawX;
						roundY = drawY;
						if (this.angle === 0)
						{
							roundX = Math.round(roundX);
							roundY = Math.round(roundY);
						}
						ctx.drawImage( this.texture_img,
									 clip.x, clip.y, clip.w, clip.h,
									 roundX,roundY,clip.w*scale,clip.h*scale);
					}
					drawX += letterWidth * scale + charSpace;
					if (myx + drawX > viewRight)
						break;
				}
				drawY += charHeight;
				if (drawY + charHeight + lineHeight > this.height || myy + drawY > viewBottom)
				{
					break;
				}
			}
			ctx.restore();
		}
	};
	var dQuad = new cr.quad();
	function rotateQuad(quad,cosa,sina) {
		var x_temp;
		x_temp   = (quad.tlx * cosa) - (quad.tly * sina);
		quad.tly = (quad.tly * cosa) + (quad.tlx * sina);
		quad.tlx = x_temp;
		x_temp    = (quad.trx * cosa) - (quad.try_ * sina);
		quad.try_ = (quad.try_ * cosa) + (quad.trx * sina);
		quad.trx  = x_temp;
		x_temp   = (quad.blx * cosa) - (quad.bly * sina);
		quad.bly = (quad.bly * cosa) + (quad.blx * sina);
		quad.blx = x_temp;
		x_temp    = (quad.brx * cosa) - (quad.bry * sina);
		quad.bry = (quad.bry * cosa) + (quad.brx * sina);
		quad.brx  = x_temp;
	}
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.webGL_texture);
		glw.setOpacity(this.opacity);
		if (!this.text)
			return;
		this.rebuildText();
		if (this.height < this.characterHeight*this.characterScale + this.lineHeight) {
			return;
		}
		this.update_bbox();
		var q = this.bquad;
		var ox = 0;
		var oy = 0;
		if (this.runtime.pixel_rounding)
		{
			ox = Math.round(this.x) - this.x;
			oy = Math.round(this.y) - this.y;
		}
		var viewLeft = this.layer.viewLeft;
		var viewTop = this.layer.viewTop;
		var viewRight = this.layer.viewRight;
		var viewBottom = this.layer.viewBottom;
		var angle      = this.angle;
		var ha         = this.halign;
		var va         = this.valign;
		var scale      = this.characterScale;
		var charHeight = this.characterHeight * scale;   // to precalculate in onCreate or on change
		var lineHeight = this.lineHeight;
		var charSpace  = this.characterSpacing;
		var lines = this.lines;
		var textHeight = this.textHeight;
		var letterWidth;
		var cosa,sina;
		if (angle !== 0)
		{
			cosa = Math.cos(angle);
			sina = Math.sin(angle);
		}
		var halign;
		var valign = va * cr.max(0,(this.height - textHeight));
		var offx = q.tlx + ox;
		var offy = q.tly + oy;
		var drawX ;
		var drawY = valign;
		var roundX, roundY;
		for(var i = 0; i < lines.length; i++) {
			var line       = lines[i].text;
			var lineWidth  = lines[i].width;
			halign = ha * cr.max(0,this.width - lineWidth);
			drawX = halign;
			drawY += lineHeight;
			if (offy + drawY + charHeight < viewTop)
			{
				drawY += charHeight;
				continue;
			}
			for(var j = 0; j < line.length; j++) {
				var letter = line.charAt(j);
				letterWidth = this.getCharacterWidth(letter);
				var clipUV = this.clipUV[letter];
				if (offx + drawX + letterWidth * scale + charSpace < viewLeft)
				{
					drawX += letterWidth * scale + charSpace;
					continue;
				}
				if (drawX + letterWidth * scale > this.width + EPSILON)
				{
					break;
				}
				if (clipUV !== undefined) {
					var clipWidth  = this.characterWidth*scale;
					var clipHeight = this.characterHeight*scale;
					roundX = drawX;
					roundY = drawY;
					if (angle === 0)
					{
						roundX = Math.round(roundX);
						roundY = Math.round(roundY);
					}
					dQuad.tlx  = roundX;
					dQuad.tly  = roundY;
					dQuad.trx  = roundX + clipWidth;
					dQuad.try_ = roundY ;
					dQuad.blx  = roundX;
					dQuad.bly  = roundY + clipHeight;
					dQuad.brx  = roundX + clipWidth;
					dQuad.bry  = roundY + clipHeight;
					if(angle !== 0)
					{
						rotateQuad(dQuad,cosa,sina);
					}
					dQuad.offset(offx,offy);
					glw.quadTex(
						dQuad.tlx, dQuad.tly,
						dQuad.trx, dQuad.try_,
						dQuad.brx, dQuad.bry,
						dQuad.blx, dQuad.bly,
						clipUV
					);
				}
				drawX += letterWidth * scale + charSpace;
				if (offx + drawX > viewRight)
					break;
			}
			drawY += charHeight;
			if (drawY + charHeight + lineHeight > this.height || offy + drawY > viewBottom)
			{
				break;
			}
		}
	};
	function Cnds() {}
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return cr.equals_nocase(this.text, text_to_compare);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {}
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetScale = function(param)
	{
		if (param !== this.characterScale) {
			this.characterScale = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetCharacterSpacing = function(param)
	{
		if (param !== this.CharacterSpacing) {
			this.characterSpacing = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetLineHeight = function(param)
	{
		if (param !== this.lineHeight) {
			this.lineHeight = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	instanceProto.SetCharWidth = function(character,width) {
		var w = parseInt(width,10);
		if (this.characterWidthList[character] !== w) {
			this.characterWidthList[character] = w;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetCharacterWidth = function(characterSet,width)
	{
		if (characterSet !== "") {
			for(var c = 0; c < characterSet.length; c++) {
				this.SetCharWidth(characterSet.charAt(c),width);
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.SetHAlign = function (a)
	{
		this.halign = a / 2.0;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	Acts.prototype.SetVAlign = function (a)
	{
		this.valign = a / 2.0;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	pluginProto.acts = new Acts();
	function Exps() {}
	Exps.prototype.CharacterWidth = function(ret,character)
	{
		ret.set_int(this.getCharacterWidth(character));
	};
	Exps.prototype.CharacterHeight = function(ret)
	{
		ret.set_int(this.characterHeight);
	};
	Exps.prototype.CharacterScale = function(ret)
	{
		ret.set_float(this.characterScale);
	};
	Exps.prototype.CharacterSpacing = function(ret)
	{
		ret.set_int(this.characterSpacing);
	};
	Exps.prototype.LineHeight = function(ret)
	{
		ret.set_int(this.lineHeight);
	};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		this.rebuildText();
		ret.set_float(this.textWidth);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		this.rebuildText();
		ret.set_float(this.textHeight);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Text = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Text.prototype;
	pluginProto.onCreate = function ()
	{
		pluginProto.acts.SetWidth = function (w)
		{
			if (this.width !== w)
			{
				this.width = w;
				this.text_changed = true;	// also recalculate text wrapping
				this.set_bbox_changed();
			}
		};
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.mycanvas = null;
			inst.myctx = null;
			inst.mytex = null;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		if (this.recycled)
			this.lines.length = 0;
		else
			this.lines = [];		// for word wrapping
		this.text_changed = true;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var requestedWebFonts = {};		// already requested web fonts have an entry here
	instanceProto.onCreate = function()
	{
		this.text = this.properties[0];
		this.visible = (this.properties[1] === 0);		// 0=visible, 1=invisible
		this.font = this.properties[2];
		this.color = this.properties[3];
		this.halign = this.properties[4];				// 0=left, 1=center, 2=right
		this.valign = this.properties[5];				// 0=top, 1=center, 2=bottom
		this.wrapbyword = (this.properties[7] === 0);	// 0=word, 1=character
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
		this.line_height_offset = this.properties[8];
		this.facename = "";
		this.fontstyle = "";
		this.ptSize = 0;
		this.textWidth = 0;
		this.textHeight = 0;
		this.parseFont();
		this.mycanvas = null;
		this.myctx = null;
		this.mytex = null;
		this.need_text_redraw = false;
		this.last_render_tick = this.runtime.tickcount;
		if (this.recycled)
			this.rcTex.set(0, 0, 1, 1);
		else
			this.rcTex = new cr.rect(0, 0, 1, 1);
		if (this.runtime.glwrap)
			this.runtime.tickMe(this);
;
	};
	instanceProto.parseFont = function ()
	{
		var arr = this.font.split(" ");
		var i;
		for (i = 0; i < arr.length; i++)
		{
			if (arr[i].substr(arr[i].length - 2, 2) === "pt")
			{
				this.ptSize = parseInt(arr[i].substr(0, arr[i].length - 2));
				this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
				if (i > 0)
					this.fontstyle = arr[i - 1];
				this.facename = arr[i + 1];
				for (i = i + 2; i < arr.length; i++)
					this.facename += " " + arr[i];
				break;
			}
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"t": this.text,
			"f": this.font,
			"c": this.color,
			"ha": this.halign,
			"va": this.valign,
			"wr": this.wrapbyword,
			"lho": this.line_height_offset,
			"fn": this.facename,
			"fs": this.fontstyle,
			"ps": this.ptSize,
			"pxh": this.pxHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.font = o["f"];
		this.color = o["c"];
		this.halign = o["ha"];
		this.valign = o["va"];
		this.wrapbyword = o["wr"];
		this.line_height_offset = o["lho"];
		this.facename = o["fn"];
		this.fontstyle = o["fs"];
		this.ptSize = o["ps"];
		this.pxHeight = o["pxh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		this.text_changed = true;
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
	};
	instanceProto.tick = function ()
	{
		if (this.runtime.glwrap && this.mytex && (this.runtime.tickcount - this.last_render_tick >= 300))
		{
			var layer = this.layer;
            this.update_bbox();
            var bbox = this.bbox;
            if (bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom)
			{
				this.runtime.glwrap.deleteTexture(this.mytex);
				this.mytex = null;
				this.myctx = null;
				this.mycanvas = null;
			}
		}
	};
	instanceProto.onDestroy = function ()
	{
		this.myctx = null;
		this.mycanvas = null;
		if (this.runtime.glwrap && this.mytex)
			this.runtime.glwrap.deleteTexture(this.mytex);
		this.mytex = null;
	};
	instanceProto.updateFont = function ()
	{
		this.font = this.fontstyle + " " + this.ptSize.toString() + "pt " + this.facename;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	instanceProto.draw = function(ctx, glmode)
	{
		ctx.font = this.font;
		ctx.textBaseline = "top";
		ctx.fillStyle = this.color;
		ctx.globalAlpha = glmode ? 1 : this.opacity;
		var myscale = 1;
		if (glmode)
		{
			myscale = this.layer.getScale();
			ctx.save();
			ctx.scale(myscale, myscale);
		}
		if (this.text_changed || this.width !== this.lastwrapwidth)
		{
			this.type.plugin.WordWrap(this.text, this.lines, ctx, this.width, this.wrapbyword);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
		this.update_bbox();
		var penX = glmode ? 0 : this.bquad.tlx;
		var penY = glmode ? 0 : this.bquad.tly;
		if (this.runtime.pixel_rounding)
		{
			penX = (penX + 0.5) | 0;
			penY = (penY + 0.5) | 0;
		}
		if (this.angle !== 0 && !glmode)
		{
			ctx.save();
			ctx.translate(penX, penY);
			ctx.rotate(this.angle);
			penX = 0;
			penY = 0;
		}
		var endY = penY + this.height;
		var line_height = this.pxHeight;
		line_height += this.line_height_offset;
		var drawX;
		var i;
		if (this.valign === 1)		// center
			penY += Math.max(this.height / 2 - (this.lines.length * line_height) / 2, 0);
		else if (this.valign === 2)	// bottom
			penY += Math.max(this.height - (this.lines.length * line_height) - 2, 0);
		for (i = 0; i < this.lines.length; i++)
		{
			drawX = penX;
			if (this.halign === 1)		// center
				drawX = penX + (this.width - this.lines[i].width) / 2;
			else if (this.halign === 2)	// right
				drawX = penX + (this.width - this.lines[i].width);
			ctx.fillText(this.lines[i].text, drawX, penY);
			penY += line_height;
			if (penY >= endY - line_height)
				break;
		}
		if (this.angle !== 0 || glmode)
			ctx.restore();
		this.last_render_tick = this.runtime.tickcount;
	};
	instanceProto.drawGL = function(glw)
	{
		if (this.width < 1 || this.height < 1)
			return;
		var need_redraw = this.text_changed || this.need_text_redraw;
		this.need_text_redraw = false;
		var layer_scale = this.layer.getScale();
		var layer_angle = this.layer.getAngle();
		var rcTex = this.rcTex;
		var floatscaledwidth = layer_scale * this.width;
		var floatscaledheight = layer_scale * this.height;
		var scaledwidth = Math.ceil(floatscaledwidth);
		var scaledheight = Math.ceil(floatscaledheight);
		var halfw = this.runtime.draw_width / 2;
		var halfh = this.runtime.draw_height / 2;
		if (!this.myctx)
		{
			this.mycanvas = document.createElement("canvas");
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			this.lastwidth = scaledwidth;
			this.lastheight = scaledheight;
			need_redraw = true;
			this.myctx = this.mycanvas.getContext("2d");
		}
		if (scaledwidth !== this.lastwidth || scaledheight !== this.lastheight)
		{
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			if (this.mytex)
			{
				glw.deleteTexture(this.mytex);
				this.mytex = null;
			}
			need_redraw = true;
		}
		if (need_redraw)
		{
			this.myctx.clearRect(0, 0, scaledwidth, scaledheight);
			this.draw(this.myctx, true);
			if (!this.mytex)
				this.mytex = glw.createEmptyTexture(scaledwidth, scaledheight, this.runtime.linearSampling, this.runtime.isMobile);
			glw.videoToTexture(this.mycanvas, this.mytex, this.runtime.isMobile);
		}
		this.lastwidth = scaledwidth;
		this.lastheight = scaledheight;
		glw.setTexture(this.mytex);
		glw.setOpacity(this.opacity);
		glw.resetModelView();
		glw.translate(-halfw, -halfh);
		glw.updateModelView();
		var q = this.bquad;
		var tlx = this.layer.layerToCanvas(q.tlx, q.tly, true, true);
		var tly = this.layer.layerToCanvas(q.tlx, q.tly, false, true);
		var trx = this.layer.layerToCanvas(q.trx, q.try_, true, true);
		var try_ = this.layer.layerToCanvas(q.trx, q.try_, false, true);
		var brx = this.layer.layerToCanvas(q.brx, q.bry, true, true);
		var bry = this.layer.layerToCanvas(q.brx, q.bry, false, true);
		var blx = this.layer.layerToCanvas(q.blx, q.bly, true, true);
		var bly = this.layer.layerToCanvas(q.blx, q.bly, false, true);
		if (this.runtime.pixel_rounding || (this.angle === 0 && layer_angle === 0))
		{
			var ox = ((tlx + 0.5) | 0) - tlx;
			var oy = ((tly + 0.5) | 0) - tly
			tlx += ox;
			tly += oy;
			trx += ox;
			try_ += oy;
			brx += ox;
			bry += oy;
			blx += ox;
			bly += oy;
		}
		if (this.angle === 0 && layer_angle === 0)
		{
			trx = tlx + scaledwidth;
			try_ = tly;
			brx = trx;
			bry = tly + scaledheight;
			blx = tlx;
			bly = bry;
			rcTex.right = 1;
			rcTex.bottom = 1;
		}
		else
		{
			rcTex.right = floatscaledwidth / scaledwidth;
			rcTex.bottom = floatscaledheight / scaledheight;
		}
		glw.quadTex(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex);
		glw.resetModelView();
		glw.scale(layer_scale, layer_scale);
		glw.rotateZ(-this.layer.getAngle());
		glw.translate((this.layer.viewLeft + this.layer.viewRight) / -2, (this.layer.viewTop + this.layer.viewBottom) / -2);
		glw.updateModelView();
		this.last_render_tick = this.runtime.tickcount;
	};
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	var linesCache = [];
	function allocLine()
	{
		if (linesCache.length)
			return linesCache.pop();
		else
			return {};
	};
	function freeLine(l)
	{
		linesCache.push(l);
	};
	function freeAllLines(arr)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; i++)
		{
			freeLine(arr[i]);
		}
		arr.length = 0;
	};
	pluginProto.WordWrap = function (text, lines, ctx, width, wrapbyword)
	{
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		if (text.length <= 100 && text.indexOf("\n") === -1)
		{
			var all_width = ctx.measureText(text).width;
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				return;
			}
		}
		this.WrapText(text, lines, ctx, width, wrapbyword);
	};
	pluginProto.WrapText = function (text, lines, ctx, width, wrapbyword)
	{
		var wordArray;
		if (wrapbyword)
		{
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		}
		else
			wordArray = text;
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = cur_line;
				line.width = ctx.measureText(cur_line).width;
				lineIndex++;
				cur_line = "";
				continue;
			}
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = ctx.measureText(cur_line).width;
			if (line_width >= width)
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = prev_line;
				line.width = ctx.measureText(prev_line).width;
				lineIndex++;
				cur_line = wordArray[i];
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (cur_line.length)
		{
			if (lineIndex >= lines.length)
				lines.push(allocLine());
			line = lines[lineIndex];
			line.text = cur_line;
			line.width = ctx.measureText(cur_line).width;
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	function Cnds() {};
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return cr.equals_nocase(this.text, text_to_compare);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetFontFace = function (face_, style_)
	{
		var newstyle = "";
		switch (style_) {
		case 1: newstyle = "bold"; break;
		case 2: newstyle = "italic"; break;
		case 3: newstyle = "bold italic"; break;
		}
		if (face_ === this.facename && newstyle === this.fontstyle)
			return;		// no change
		this.facename = face_;
		this.fontstyle = newstyle;
		this.updateFont();
	};
	Acts.prototype.SetFontSize = function (size_)
	{
		if (this.ptSize === size_)
			return;
		this.ptSize = size_;
		this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
		this.updateFont();
	};
	Acts.prototype.SetFontColor = function (rgb)
	{
		var newcolor = "rgb(" + cr.GetRValue(rgb).toString() + "," + cr.GetGValue(rgb).toString() + "," + cr.GetBValue(rgb).toString() + ")";
		if (newcolor === this.color)
			return;
		this.color = newcolor;
		this.need_text_redraw = true;
		this.runtime.redraw = true;
	};
	Acts.prototype.SetWebFont = function (familyname_, cssurl_)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Text plugin: 'Set web font' not supported on this platform - the action has been ignored");
			return;		// DC todo
		}
		var self = this;
		var refreshFunc = (function () {
							self.runtime.redraw = true;
							self.text_changed = true;
						});
		if (requestedWebFonts.hasOwnProperty(cssurl_))
		{
			var newfacename = "'" + familyname_ + "'";
			if (this.facename === newfacename)
				return;	// no change
			this.facename = newfacename;
			this.updateFont();
			for (var i = 1; i < 10; i++)
			{
				setTimeout(refreshFunc, i * 100);
				setTimeout(refreshFunc, i * 1000);
			}
			return;
		}
		var wf = document.createElement("link");
		wf.href = cssurl_;
		wf.rel = "stylesheet";
		wf.type = "text/css";
		wf.onload = refreshFunc;
		document.getElementsByTagName('head')[0].appendChild(wf);
		requestedWebFonts[cssurl_] = true;
		this.facename = "'" + familyname_ + "'";
		this.updateFont();
		for (var i = 1; i < 10; i++)
		{
			setTimeout(refreshFunc, i * 100);
			setTimeout(refreshFunc, i * 1000);
		}
;
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.FaceName = function (ret)
	{
		ret.set_string(this.facename);
	};
	Exps.prototype.FaceSize = function (ret)
	{
		ret.set_int(this.ptSize);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		var w = 0;
		var i, len, x;
		for (i = 0, len = this.lines.length; i < len; i++)
		{
			x = this.lines[i].width;
			if (w < x)
				w = x;
		}
		ret.set_int(w);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		ret.set_int(this.lines.length * (this.pxHeight + this.line_height_offset) - this.line_height_offset);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.TiledBg = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.TiledBg.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img["idtkLoadDisposed"] = true;
		this.texture_img.src = this.texture_file;
		this.texture_img.cr_filesize = this.texture_filesize;
		this.runtime.waitForImageLoad(this.texture_img);
		this.pattern = null;
		this.webGL_texture = null;
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
		}
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].webGL_texture = this.webGL_texture;
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.webGL_texture || !this.runtime.glwrap)
			return;
		this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.webGL_texture)
			return;
		this.runtime.glwrap.deleteTexture(this.webGL_texture);
		this.webGL_texture = null;
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);							// 0=visible, 1=invisible
		this.rcTex = new cr.rect(0, 0, 0, 0);
		this.has_own_texture = false;										// true if a texture loaded in from URL
		this.texture_img = this.type.texture_img;
		if (this.runtime.glwrap)
		{
			this.type.loadTextures();
			this.webGL_texture = this.type.webGL_texture;
		}
		else
		{
			if (!this.type.pattern)
				this.type.pattern = this.runtime.ctx.createPattern(this.type.texture_img, "repeat");
			this.pattern = this.type.pattern;
		}
	};
	instanceProto.afterLoad = function ()
	{
		this.has_own_texture = false;
		this.texture_img = this.type.texture_img;
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.glwrap && this.has_own_texture && this.webGL_texture)
		{
			this.runtime.glwrap.deleteTexture(this.webGL_texture);
			this.webGL_texture = null;
		}
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		ctx.save();
		ctx.fillStyle = this.pattern;
		var myx = this.x;
		var myy = this.y;
		if (this.runtime.pixel_rounding)
		{
			myx = Math.round(myx);
			myy = Math.round(myy);
		}
		var drawX = -(this.hotspotX * this.width);
		var drawY = -(this.hotspotY * this.height);
		var offX = drawX % this.texture_img.width;
		var offY = drawY % this.texture_img.height;
		if (offX < 0)
			offX += this.texture_img.width;
		if (offY < 0)
			offY += this.texture_img.height;
		ctx.translate(myx, myy);
		ctx.rotate(this.angle);
		ctx.translate(offX, offY);
		ctx.fillRect(drawX - offX,
					 drawY - offY,
					 this.width,
					 this.height);
		ctx.restore();
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.webGL_texture);
		glw.setOpacity(this.opacity);
		var rcTex = this.rcTex;
		rcTex.right = this.width / this.texture_img.width;
		rcTex.bottom = this.height / this.texture_img.height;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = Math.round(this.x) - this.x;
			var oy = Math.round(this.y) - this.y;
			glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, rcTex);
		}
		else
			glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, rcTex);
	};
	function Cnds() {};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.LoadURL = function (url_)
	{
		var img = new Image();
		var self = this;
		img.onload = function ()
		{
			self.texture_img = img;
			if (self.runtime.glwrap)
			{
				if (self.has_own_texture && self.webGL_texture)
					self.runtime.glwrap.deleteTexture(self.webGL_texture);
				self.webGL_texture = self.runtime.glwrap.loadTexture(img, true, self.runtime.linearSampling);
			}
			else
			{
				self.pattern = self.runtime.ctx.createPattern(img, "repeat");
			}
			self.has_own_texture = true;
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.TiledBg.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.texture_img.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.texture_img.height);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Touch = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Touch.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.touches = [];
		this.mouseDown = false;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var dummyoffset = {left: 0, top: 0};
	instanceProto.findTouch = function (id)
	{
		var i, len;
		for (i = 0, len = this.touches.length; i < len; i++)
		{
			if (this.touches[i]["id"] === id)
				return i;
		}
		return -1;
	};
	var appmobi_accx = 0;
	var appmobi_accy = 0;
	var appmobi_accz = 0;
	function AppMobiGetAcceleration(evt)
	{
		appmobi_accx = evt.x;
		appmobi_accy = evt.y;
		appmobi_accz = evt.z;
	};
	var pg_accx = 0;
	var pg_accy = 0;
	var pg_accz = 0;
	function PhoneGapGetAcceleration(evt)
	{
		pg_accx = evt.x;
		pg_accy = evt.y;
		pg_accz = evt.z;
	};
	var theInstance = null;
	var touchinfo_cache = [];
	function AllocTouchInfo(x, y, id, index)
	{
		var ret;
		if (touchinfo_cache.length)
			ret = touchinfo_cache.pop();
		else
			ret = new TouchInfo();
		ret.init(x, y, id, index);
		return ret;
	};
	function ReleaseTouchInfo(ti)
	{
		if (touchinfo_cache.length < 100)
			touchinfo_cache.push(ti);
	};
	var GESTURE_HOLD_THRESHOLD = 15;		// max px motion for hold gesture to register
	var GESTURE_HOLD_TIMEOUT = 500;			// time for hold gesture to register
	var GESTURE_TAP_TIMEOUT = 333;			// time for tap gesture to register
	var GESTURE_DOUBLETAP_THRESHOLD = 25;	// max distance apart for taps to be
	function TouchInfo()
	{
		this.starttime = 0;
		this.time = 0;
		this.lasttime = 0;
		this.startx = 0;
		this.starty = 0;
		this.x = 0;
		this.y = 0;
		this.lastx = 0;
		this.lasty = 0;
		this["id"] = 0;
		this.startindex = 0;
		this.triggeredHold = false;
		this.tooFarForHold = false;
	};
	TouchInfo.prototype.init = function (x, y, id, index)
	{
		var nowtime = cr.performance_now();
		this.time = nowtime;
		this.lasttime = nowtime;
		this.starttime = nowtime;
		this.startx = x;
		this.starty = y;
		this.x = x;
		this.y = y;
		this.lastx = x;
		this.lasty = y;
		this["id"] = id;
		this.startindex = index;
		this.triggeredHold = false;
		this.tooFarForHold = false;
	};
	TouchInfo.prototype.update = function (nowtime, x, y)
	{
		this.lasttime = this.time;
		this.time = nowtime;
		this.lastx = this.x;
		this.lasty = this.y;
		this.x = x;
		this.y = y;
		if (!this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) >= GESTURE_HOLD_THRESHOLD)
		{
			this.tooFarForHold = true;
		}
	};
	TouchInfo.prototype.maybeTriggerHold = function (inst, index)
	{
		if (this.triggeredHold)
			return;		// already triggered this gesture
		var nowtime = cr.performance_now();
		if (nowtime - this.starttime >= GESTURE_HOLD_TIMEOUT && !this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) < GESTURE_HOLD_THRESHOLD)
		{
			this.triggeredHold = true;
			inst.trigger_index = this.startindex;
			inst.trigger_id = this["id"];
			inst.getTouchIndex = index;
			inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnHoldGesture, inst);
			inst.curTouchX = this.x;
			inst.curTouchY = this.y;
			inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnHoldGestureObject, inst);
			inst.getTouchIndex = 0;
		}
	};
	var lastTapX = -1000;
	var lastTapY = -1000;
	var lastTapTime = -10000;
	TouchInfo.prototype.maybeTriggerTap = function (inst, index)
	{
		if (this.triggeredHold)
			return;
		var nowtime = cr.performance_now();
		if (nowtime - this.starttime <= GESTURE_TAP_TIMEOUT && !this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) < GESTURE_HOLD_THRESHOLD)
		{
			inst.trigger_index = this.startindex;
			inst.trigger_id = this["id"];
			inst.getTouchIndex = index;
			if ((nowtime - lastTapTime <= GESTURE_TAP_TIMEOUT * 2) && cr.distanceTo(lastTapX, lastTapY, this.x, this.y) < GESTURE_DOUBLETAP_THRESHOLD)
			{
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnDoubleTapGesture, inst);
				inst.curTouchX = this.x;
				inst.curTouchY = this.y;
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnDoubleTapGestureObject, inst);
				lastTapX = -1000;
				lastTapY = -1000;
				lastTapTime = -10000;
			}
			else
			{
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTapGesture, inst);
				inst.curTouchX = this.x;
				inst.curTouchY = this.y;
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTapGestureObject, inst);
				lastTapX = this.x;
				lastTapY = this.y;
				lastTapTime = nowtime;
			}
			inst.getTouchIndex = 0;
		}
	};
	instanceProto.onCreate = function()
	{
		theInstance = this;
		this.isWindows8 = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.orient_alpha = 0;
		this.orient_beta = 0;
		this.orient_gamma = 0;
		this.acc_g_x = 0;
		this.acc_g_y = 0;
		this.acc_g_z = 0;
		this.acc_x = 0;
		this.acc_y = 0;
		this.acc_z = 0;
		this.curTouchX = 0;
		this.curTouchY = 0;
		this.trigger_index = 0;
		this.trigger_id = 0;
		this.getTouchIndex = 0;
		this.useMouseInput = (this.properties[0] !== 0);
		var elem = (this.runtime.fullscreen_mode > 0) ? document : this.runtime.canvas;
		var elem2 = document;
		if (this.runtime.isDirectCanvas)
			elem2 = elem = window["Canvas"];
		else if (this.runtime.isCocoonJs)
			elem2 = elem = window;
		var self = this;
		if (window.navigator["pointerEnabled"])
		{
			elem.addEventListener("pointerdown",
				function(info) {
					self.onPointerStart(info);
				},
				false
			);
			elem.addEventListener("pointermove",
				function(info) {
					self.onPointerMove(info);
				},
				false
			);
			elem2.addEventListener("pointerup",
				function(info) {
					self.onPointerEnd(info, false);
				},
				false
			);
			elem2.addEventListener("pointercancel",
				function(info) {
					self.onPointerEnd(info, true);
				},
				false
			);
			if (this.runtime.canvas)
			{
				this.runtime.canvas.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				this.runtime.canvas.addEventListener("gesturehold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("gesturehold", function(e) {
					e.preventDefault();
				}, false);
			}
		}
		else if (window.navigator["msPointerEnabled"])
		{
			elem.addEventListener("MSPointerDown",
				function(info) {
					self.onPointerStart(info);
				},
				false
			);
			elem.addEventListener("MSPointerMove",
				function(info) {
					self.onPointerMove(info);
				},
				false
			);
			elem2.addEventListener("MSPointerUp",
				function(info) {
					self.onPointerEnd(info, false);
				},
				false
			);
			elem2.addEventListener("MSPointerCancel",
				function(info) {
					self.onPointerEnd(info, true);
				},
				false
			);
			if (this.runtime.canvas)
			{
				this.runtime.canvas.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
			}
		}
		else
		{
			elem.addEventListener("touchstart",
				function(info) {
					self.onTouchStart(info);
				},
				false
			);
			elem.addEventListener("touchmove",
				function(info) {
					self.onTouchMove(info);
				},
				false
			);
			elem2.addEventListener("touchend",
				function(info) {
					self.onTouchEnd(info, false);
				},
				false
			);
			elem2.addEventListener("touchcancel",
				function(info) {
					self.onTouchEnd(info, true);
				},
				false
			);
		}
		if (this.isWindows8)
		{
			var win8accelerometerFn = function(e) {
					var reading = e["reading"];
					self.acc_x = reading["accelerationX"];
					self.acc_y = reading["accelerationY"];
					self.acc_z = reading["accelerationZ"];
				};
			var win8inclinometerFn = function(e) {
					var reading = e["reading"];
					self.orient_alpha = reading["yawDegrees"];
					self.orient_beta = reading["pitchDegrees"];
					self.orient_gamma = reading["rollDegrees"];
				};
			var accelerometer = Windows["Devices"]["Sensors"]["Accelerometer"]["getDefault"]();
            if (accelerometer)
			{
                accelerometer["reportInterval"] = Math.max(accelerometer["minimumReportInterval"], 16);
				accelerometer.addEventListener("readingchanged", win8accelerometerFn);
            }
			var inclinometer = Windows["Devices"]["Sensors"]["Inclinometer"]["getDefault"]();
			if (inclinometer)
			{
				inclinometer["reportInterval"] = Math.max(inclinometer["minimumReportInterval"], 16);
				inclinometer.addEventListener("readingchanged", win8inclinometerFn);
			}
			document.addEventListener("visibilitychange", function(e) {
				if (document["hidden"] || document["msHidden"])
				{
					if (accelerometer)
						accelerometer.removeEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.removeEventListener("readingchanged", win8inclinometerFn);
				}
				else
				{
					if (accelerometer)
						accelerometer.addEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.addEventListener("readingchanged", win8inclinometerFn);
				}
			}, false);
		}
		else
		{
			window.addEventListener("deviceorientation", function (eventData) {
				self.orient_alpha = eventData["alpha"] || 0;
				self.orient_beta = eventData["beta"] || 0;
				self.orient_gamma = eventData["gamma"] || 0;
			}, false);
			window.addEventListener("devicemotion", function (eventData) {
				if (eventData["accelerationIncludingGravity"])
				{
					self.acc_g_x = eventData["accelerationIncludingGravity"]["x"] || 0;
					self.acc_g_y = eventData["accelerationIncludingGravity"]["y"] || 0;
					self.acc_g_z = eventData["accelerationIncludingGravity"]["z"] || 0;
				}
				if (eventData["acceleration"])
				{
					self.acc_x = eventData["acceleration"]["x"] || 0;
					self.acc_y = eventData["acceleration"]["y"] || 0;
					self.acc_z = eventData["acceleration"]["z"] || 0;
				}
			}, false);
		}
		if (this.useMouseInput && !this.runtime.isDomFree)
		{
			jQuery(document).mousemove(
				function(info) {
					self.onMouseMove(info);
				}
			);
			jQuery(document).mousedown(
				function(info) {
					self.onMouseDown(info);
				}
			);
			jQuery(document).mouseup(
				function(info) {
					self.onMouseUp(info);
				}
			);
		}
		if (this.runtime.isAppMobi && !this.runtime.isDirectCanvas)
		{
			AppMobi["accelerometer"]["watchAcceleration"](AppMobiGetAcceleration, { "frequency": 40, "adjustForRotation": true });
		}
		if (this.runtime.isPhoneGap && navigator["accelerometer"] && navigator["accelerometer"]["watchAcceleration"])
		{
			navigator["accelerometer"]["watchAcceleration"](PhoneGapGetAcceleration, null, { "frequency": 40 });
		}
		this.runtime.tick2Me(this);
	};
	instanceProto.onPointerMove = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		var nowtime = cr.performance_now();
		if (i >= 0)
		{
			var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
			var t = this.touches[i];
			if (nowtime - t.time < 2)
				return;
			t.update(nowtime, info.pageX - offset.left, info.pageY - offset.top);
		}
	};
	instanceProto.onPointerStart = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var touchx = info.pageX - offset.left;
		var touchy = info.pageY - offset.top;
		var nowtime = cr.performance_now();
		this.trigger_index = this.touches.length;
		this.trigger_id = info["pointerId"];
		this.touches.push(AllocTouchInfo(touchx, touchy, info["pointerId"], this.trigger_index));
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
		this.curTouchX = touchx;
		this.curTouchY = touchy;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onPointerEnd = function (info, isCancel)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		this.trigger_index = (i >= 0 ? this.touches[i].startindex : -1);
		this.trigger_id = (i >= 0 ? this.touches[i]["id"] : -1);
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
		if (i >= 0)
		{
			if (!isCancel)
				this.touches[i].maybeTriggerTap(this, i);
			ReleaseTouchInfo(this.touches[i]);
			this.touches.splice(i, 1);
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onTouchMove = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var nowtime = cr.performance_now();
		var i, len, t, u;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			var j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
				u = this.touches[j];
				if (nowtime - u.time < 2)
					continue;
				u.update(nowtime, t.pageX - offset.left, t.pageY - offset.top);
			}
		}
	};
	instanceProto.onTouchStart = function (info)
	{
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var nowtime = cr.performance_now();
		this.runtime.isInUserInputEvent = true;
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j !== -1)
				continue;
			var touchx = t.pageX - offset.left;
			var touchy = t.pageY - offset.top;
			this.trigger_index = this.touches.length;
			this.trigger_id = t["identifier"];
			this.touches.push(AllocTouchInfo(touchx, touchy, t["identifier"], this.trigger_index));
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
			this.curTouchX = touchx;
			this.curTouchY = touchy;
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onTouchEnd = function (info, isCancel)
	{
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		this.runtime.isInUserInputEvent = true;
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				this.trigger_index = this.touches[j].startindex;
				this.trigger_id = this.touches[j]["id"];
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
				if (!isCancel)
					this.touches[j].maybeTriggerTap(this, j);
				ReleaseTouchInfo(this.touches[j]);
				this.touches.splice(j, 1);
			}
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.getAlpha = function ()
	{
		if (this.runtime.isAppMobi && this.orient_alpha === 0 && appmobi_accz !== 0)
			return appmobi_accz * 90;
		else if (this.runtime.isPhoneGap  && this.orient_alpha === 0 && pg_accz !== 0)
			return pg_accz * 90;
		else
			return this.orient_alpha;
	};
	instanceProto.getBeta = function ()
	{
		if (this.runtime.isAppMobi && this.orient_beta === 0 && appmobi_accy !== 0)
			return appmobi_accy * -90;
		else if (this.runtime.isPhoneGap  && this.orient_beta === 0 && pg_accy !== 0)
			return pg_accy * -90;
		else
			return this.orient_beta;
	};
	instanceProto.getGamma = function ()
	{
		if (this.runtime.isAppMobi && this.orient_gamma === 0 && appmobi_accx !== 0)
			return appmobi_accx * 90;
		else if (this.runtime.isPhoneGap  && this.orient_gamma === 0 && pg_accx !== 0)
			return pg_accx * 90;
		else
			return this.orient_gamma;
	};
	var noop_func = function(){};
	instanceProto.onMouseDown = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click && !this.runtime.isMobile)
			info.preventDefault();
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchStart(fakeinfo);
		this.mouseDown = true;
	};
	instanceProto.onMouseMove = function(info)
	{
		if (!this.mouseDown)
			return;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchMove(fakeinfo);
	};
	instanceProto.onMouseUp = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click && !this.runtime.isMobile)
			info.preventDefault();
		this.runtime.had_a_click = true;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchEnd(fakeinfo);
		this.mouseDown = false;
	};
	instanceProto.tick2 = function()
	{
		var i, len, t;
		var nowtime = cr.performance_now();
		for (i = 0, len = this.touches.length; i < len; ++i)
		{
			t = this.touches[i];
			if (t.time <= nowtime - 50)
				t.lasttime = nowtime;
			t.maybeTriggerHold(this, i);
		}
	};
	function Cnds() {};
	Cnds.prototype.OnTouchStart = function ()
	{
		return true;
	};
	Cnds.prototype.OnTouchEnd = function ()
	{
		return true;
	};
	Cnds.prototype.IsInTouch = function ()
	{
		return this.touches.length;
	};
	Cnds.prototype.OnTouchObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	var touching = [];
	Cnds.prototype.IsTouchingObject = function (type)
	{
		if (!type)
			return false;
		var sol = type.getCurrentSol();
		var instances = sol.getObjects();
		var px, py;
		var i, leni, j, lenj;
		for (i = 0, leni = instances.length; i < leni; i++)
		{
			var inst = instances[i];
			inst.update_bbox();
			for (j = 0, lenj = this.touches.length; j < lenj; j++)
			{
				var touch = this.touches[j];
				px = inst.layer.canvasToLayer(touch.x, touch.y, true);
				py = inst.layer.canvasToLayer(touch.x, touch.y, false);
				if (inst.contains_pt(px, py))
				{
					touching.push(inst);
					break;
				}
			}
		}
		if (touching.length)
		{
			sol.select_all = false;
			cr.shallowAssignArray(sol.instances, touching);
			type.applySolToContainer();
			touching.length = 0;
			return true;
		}
		else
			return false;
	};
	Cnds.prototype.CompareTouchSpeed = function (index, cmp, s)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
			return false;
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		var speed = 0;
		if (timediff > 0)
			speed = dist / timediff;
		return cr.do_cmp(speed, cmp, s);
	};
	Cnds.prototype.OrientationSupported = function ()
	{
		return typeof window["DeviceOrientationEvent"] !== "undefined";
	};
	Cnds.prototype.MotionSupported = function ()
	{
		return typeof window["DeviceMotionEvent"] !== "undefined";
	};
	Cnds.prototype.CompareOrientation = function (orientation_, cmp_, angle_)
	{
		var v = 0;
		if (orientation_ === 0)
			v = this.getAlpha();
		else if (orientation_ === 1)
			v = this.getBeta();
		else
			v = this.getGamma();
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.CompareAcceleration = function (acceleration_, cmp_, angle_)
	{
		var v = 0;
		if (acceleration_ === 0)
			v = this.acc_g_x;
		else if (acceleration_ === 1)
			v = this.acc_g_y;
		else if (acceleration_ === 2)
			v = this.acc_g_z;
		else if (acceleration_ === 3)
			v = this.acc_x;
		else if (acceleration_ === 4)
			v = this.acc_y;
		else if (acceleration_ === 5)
			v = this.acc_z;
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.OnNthTouchStart = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.OnNthTouchEnd = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.HasNthTouch = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return this.touches.length >= touch_ + 1;
	};
	Cnds.prototype.OnHoldGesture = function ()
	{
		return true;
	};
	Cnds.prototype.OnTapGesture = function ()
	{
		return true;
	};
	Cnds.prototype.OnDoubleTapGesture = function ()
	{
		return true;
	};
	Cnds.prototype.OnHoldGestureObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	Cnds.prototype.OnTapGestureObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	Cnds.prototype.OnDoubleTapGestureObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	pluginProto.cnds = new Cnds();
	function Exps() {};
	Exps.prototype.TouchCount = function (ret)
	{
		ret.set_int(this.touches.length);
	};
	Exps.prototype.X = function (ret, layerparam)
	{
		var index = this.getTouchIndex;
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = 1;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = 0;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.XAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = 1;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = 0;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.XForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = 1;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = 0;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.Y = function (ret, layerparam)
	{
		var index = this.getTouchIndex;
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = 1;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = 0;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.YAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = 1;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = 0;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.YForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = 1;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = 0;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.AbsoluteX = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].x);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteXAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].x);
	};
	Exps.prototype.AbsoluteXForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.x);
	};
	Exps.prototype.AbsoluteY = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].y);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteYAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].y);
	};
	Exps.prototype.AbsoluteYForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.y);
	};
	Exps.prototype.SpeedAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.SpeedForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var dist = cr.distanceTo(touch.x, touch.y, touch.lastx, touch.lasty);
		var timediff = (touch.time - touch.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.AngleAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(t.lastx, t.lasty, t.x, t.y)));
	};
	Exps.prototype.AngleForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(touch.lastx, touch.lasty, touch.x, touch.y)));
	};
	Exps.prototype.Alpha = function (ret)
	{
		ret.set_float(this.getAlpha());
	};
	Exps.prototype.Beta = function (ret)
	{
		ret.set_float(this.getBeta());
	};
	Exps.prototype.Gamma = function (ret)
	{
		ret.set_float(this.getGamma());
	};
	Exps.prototype.AccelerationXWithG = function (ret)
	{
		ret.set_float(this.acc_g_x);
	};
	Exps.prototype.AccelerationYWithG = function (ret)
	{
		ret.set_float(this.acc_g_y);
	};
	Exps.prototype.AccelerationZWithG = function (ret)
	{
		ret.set_float(this.acc_g_z);
	};
	Exps.prototype.AccelerationX = function (ret)
	{
		ret.set_float(this.acc_x);
	};
	Exps.prototype.AccelerationY = function (ret)
	{
		ret.set_float(this.acc_y);
	};
	Exps.prototype.AccelerationZ = function (ret)
	{
		ret.set_float(this.acc_z);
	};
	Exps.prototype.TouchIndex = function (ret)
	{
		ret.set_int(this.trigger_index);
	};
	Exps.prototype.TouchID = function (ret)
	{
		ret.set_float(this.trigger_id);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.WebStorage = function(runtime)
{
	this.runtime = runtime;
};
(function()
{
	var pluginProto = cr.plugins_.WebStorage.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var prefix = "";
	var is_arcade = (typeof window["is_scirra_arcade"] !== "undefined");
	if (is_arcade)
		prefix = "arcade" + window["scirra_arcade_id"];
	var logged_sessionnotsupported = false;
	function LogSessionNotSupported()
	{
		if (logged_sessionnotsupported)
			return;
		cr.logexport("[Construct 2] Webstorage plugin: session storage is not supported on this platform. Try using local storage or global variables instead.");
		logged_sessionnotsupported = true;
	};
	instanceProto.onCreate = function()
	{
	};
	function Cnds() {};
	Cnds.prototype.LocalStorageEnabled = function()
	{
		return true;
	};
	Cnds.prototype.SessionStorageEnabled = function()
	{
		return true;
	};
	Cnds.prototype.LocalStorageExists = function(key)
	{
		return localStorage.getItem(prefix + key) != null;
	};
	Cnds.prototype.SessionStorageExists = function(key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return false;
		}
		return sessionStorage.getItem(prefix + key) != null;
	};
	Cnds.prototype.OnQuotaExceeded = function ()
	{
		return true;
	};
	Cnds.prototype.CompareKeyText = function (key, text_to_compare, case_sensitive)
	{
		var value = localStorage.getItem(prefix + key) || "";
		if (case_sensitive)
			return value == text_to_compare;
		else
			return cr.equals_nocase(value, text_to_compare);
	};
	Cnds.prototype.CompareKeyNumber = function (key, cmp, x)
	{
		var value = localStorage.getItem(prefix + key) || "";
		return cr.do_cmp(parseFloat(value), cmp, x);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.StoreLocal = function(key, data)
	{
		try {
			localStorage.setItem(prefix + key, data);
		}
		catch (e)
		{
			this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
		}
	};
	Acts.prototype.StoreSession = function(key,data)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		try {
			sessionStorage.setItem(prefix + key, data);
		}
		catch (e)
		{
			this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
		}
	};
	Acts.prototype.RemoveLocal = function(key)
	{
		localStorage.removeItem(prefix + key);
	};
	Acts.prototype.RemoveSession = function(key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		sessionStorage.removeItem(prefix + key);
	};
	Acts.prototype.ClearLocal = function()
	{
		if (!is_arcade)
			localStorage.clear();
	};
	Acts.prototype.ClearSession = function()
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		if (!is_arcade)
			sessionStorage.clear();
	};
	Acts.prototype.JSONLoad = function (json_, mode_)
	{
		var d;
		try {
			d = JSON.parse(json_);
		}
		catch(e) { return; }
		if (!d["c2dictionary"])			// presumably not a c2dictionary object
			return;
		var o = d["data"];
		if (mode_ === 0 && !is_arcade)	// 'set' mode: must clear webstorage first
			localStorage.clear();
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
			{
				try {
					localStorage.setItem(prefix + p, o[p]);
				}
				catch (e)
				{
					this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
					return;
				}
			}
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LocalValue = function(ret,key)
	{
		ret.set_string(localStorage.getItem(prefix + key) || "");
	};
	Exps.prototype.SessionValue = function(ret,key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		ret.set_string(sessionStorage.getItem(prefix + key) || "");
	};
	Exps.prototype.LocalCount = function(ret)
	{
		ret.set_int(is_arcade ? 0 : localStorage.length);
	};
	Exps.prototype.SessionCount = function(ret)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_int(0);
			return;
		}
		ret.set_int(is_arcade ? 0 : sessionStorage.length);
	};
	Exps.prototype.LocalAt = function(ret,n)
	{
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(localStorage.getItem(localStorage.key(n)) || "");
	};
	Exps.prototype.SessionAt = function(ret,n)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(sessionStorage.getItem(sessionStorage.key(n)) || "");
	};
	Exps.prototype.LocalKeyAt = function(ret,n)
	{
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(localStorage.key(n) || "");
	};
	Exps.prototype.SessionKeyAt = function(ret,n)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(sessionStorage.key(n) || "");
	};
	Exps.prototype.AsJSON = function (ret)
	{
		var o = {}, i, len, k;
		for (i = 0, len = localStorage.length; i < len; i++)
		{
			k = localStorage.key(i);
			if (is_arcade)
			{
				if (k.substr(0, prefix.length) === prefix)
				{
					o[k.substr(prefix.length)] = localStorage.getItem(k);
				}
			}
			else
				o[k] = localStorage.getItem(k);
		}
		ret.set_string(JSON.stringify({
			"c2dictionary": true,
			"data": o
		}));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.cjs = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.cjs.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.nameOfExternalScript = this.properties[0];
		this.returnValue= "";
		var myScriptTag=document.createElement('script');
		myScriptTag.setAttribute("type","text/javascript");
		myScriptTag.setAttribute("src", this.nameOfExternalScript);
		if (typeof myScriptTag != "undefined")
			document.getElementsByTagName("head")[0].appendChild(myScriptTag);
	};
	instanceProto.draw = function(ctx)
	{
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.ExecuteJS = function (myparam)
	{
		this.returnValue= "";
		try
		{
			this.returnValue= eval(myparam);
		} catch(err)
		{
			this.returnValue= err;
        }
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.ReadExecutionReturn = function (ret)
	{
		ret.set_string(this.returnValue);
	};
}());
;
;
cr.behaviors.Anchor = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Anchor.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.anch_left = this.properties[0];		// 0 = left, 1 = right, 2 = none
		this.anch_top = this.properties[1];			// 0 = top, 1 = bottom, 2 = none
		this.anch_right = this.properties[2];		// 0 = none, 1 = right
		this.anch_bottom = this.properties[3];		// 0 = none, 1 = bottom
		this.inst.update_bbox();
		this.xleft = this.inst.bbox.left;
		this.ytop = this.inst.bbox.top;
		this.xright = this.runtime.original_width - this.inst.bbox.left;
		this.ybottom = this.runtime.original_height - this.inst.bbox.top;
		this.rdiff = this.runtime.original_width - this.inst.bbox.right;
		this.bdiff = this.runtime.original_height - this.inst.bbox.bottom;
		this.enabled = (this.properties[4] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"xleft": this.xleft,
			"ytop": this.ytop,
			"xright": this.xright,
			"ybottom": this.ybottom,
			"rdiff": this.rdiff,
			"bdiff": this.bdiff,
			"enabled": this.enabled
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.xleft = o["xleft"];
		this.ytop = o["ytop"];
		this.xright = o["xright"];
		this.ybottom = o["ybottom"];
		this.rdiff = o["rdiff"];
		this.bdiff = o["bdiff"];
		this.enabled = o["enabled"];
	};
	behinstProto.tick = function ()
	{
		if (!this.enabled)
			return;
		var n;
		var layer = this.inst.layer;
		var inst = this.inst;
		var bbox = this.inst.bbox;
		if (this.anch_left === 0)
		{
			inst.update_bbox();
			n = (layer.viewLeft + this.xleft) - bbox.left;
			if (n !== 0)
			{
				inst.x += n;
				inst.set_bbox_changed();
			}
		}
		else if (this.anch_left === 1)
		{
			inst.update_bbox();
			n = (layer.viewRight - this.xright) - bbox.left;
			if (n !== 0)
			{
				inst.x += n;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_top === 0)
		{
			inst.update_bbox();
			n = (layer.viewTop + this.ytop) - bbox.top;
			if (n !== 0)
			{
				inst.y += n;
				inst.set_bbox_changed();
			}
		}
		else if (this.anch_top === 1)
		{
			inst.update_bbox();
			n = (layer.viewBottom - this.ybottom) - bbox.top;
			if (n !== 0)
			{
				inst.y += n;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_right === 1)
		{
			inst.update_bbox();
			n = (layer.viewRight - this.rdiff) - bbox.right;
			if (n !== 0)
			{
				inst.width += n;
				if (inst.width < 0)
					inst.width = 0;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_bottom === 1)
		{
			inst.update_bbox();
			n = (layer.viewBottom - this.bdiff) - bbox.bottom;
			if (n !== 0)
			{
				inst.height += n;
				if (inst.height < 0)
					inst.height = 0;
				inst.set_bbox_changed();
			}
		}
	};
	function Cnds() {};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEnabled = function (e)
	{
		if (this.enabled && e === 0)
			this.enabled = false;
		else if (!this.enabled && e !== 0)
		{
			this.inst.update_bbox();
			this.xleft = this.inst.bbox.left;
			this.ytop = this.inst.bbox.top;
			this.xright = this.runtime.original_width - this.inst.bbox.left;
			this.ybottom = this.runtime.original_height - this.inst.bbox.top;
			this.rdiff = this.runtime.original_width - this.inst.bbox.right;
			this.bdiff = this.runtime.original_height - this.inst.bbox.bottom;
			this.enabled = true;
		}
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Bullet = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Bullet.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		var speed = this.properties[0];
		this.acc = this.properties[1];
		this.g = this.properties[2];
		this.bounceOffSolid = (this.properties[3] !== 0);
		this.setAngle = (this.properties[4] !== 0);
		this.dx = Math.cos(this.inst.angle) * speed;
		this.dy = Math.sin(this.inst.angle) * speed;
		this.lastx = this.inst.x;
		this.lasty = this.inst.y;
		this.lastKnownAngle = this.inst.angle;
		this.travelled = 0;
		this.enabled = (this.properties[5] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"acc": this.acc,
			"g": this.g,
			"dx": this.dx,
			"dy": this.dy,
			"lx": this.lastx,
			"ly": this.lasty,
			"lka": this.lastKnownAngle,
			"t": this.travelled,
			"e": this.enabled
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.acc = o["acc"];
		this.g = o["g"];
		this.dx = o["dx"];
		this.dy = o["dy"];
		this.lastx = o["lx"];
		this.lasty = o["ly"];
		this.lastKnownAngle = o["lka"];
		this.travelled = o["t"];
		this.enabled = o["e"];
	};
	behinstProto.tick = function ()
	{
		if (!this.enabled)
			return;
		var dt = this.runtime.getDt(this.inst);
		var s, a;
		var bounceSolid, bounceAngle;
		if (this.inst.angle !== this.lastKnownAngle)
		{
			if (this.setAngle)
			{
				s = cr.distanceTo(0, 0, this.dx, this.dy);
				this.dx = Math.cos(this.inst.angle) * s;
				this.dy = Math.sin(this.inst.angle) * s;
			}
			this.lastKnownAngle = this.inst.angle;
		}
		if (this.acc !== 0)
		{
			s = cr.distanceTo(0, 0, this.dx, this.dy);
			if (this.dx === 0 && this.dy === 0)
				a = this.inst.angle;
			else
				a = cr.angleTo(0, 0, this.dx, this.dy);
			s += this.acc * dt;
			if (s < 0)
				s = 0;
			this.dx = Math.cos(a) * s;
			this.dy = Math.sin(a) * s;
		}
		if (this.g !== 0)
			this.dy += this.g * dt;
		this.lastx = this.inst.x;
		this.lasty = this.inst.y;
		if (this.dx !== 0 || this.dy !== 0)
		{
			this.inst.x += this.dx * dt;
			this.inst.y += this.dy * dt;
			this.travelled += cr.distanceTo(0, 0, this.dx * dt, this.dy * dt)
			if (this.setAngle)
			{
				this.inst.angle = cr.angleTo(0, 0, this.dx, this.dy);
				this.inst.set_bbox_changed();
				this.lastKnownAngle = this.inst.angle;
			}
			this.inst.set_bbox_changed();
			if (this.bounceOffSolid)
			{
				bounceSolid = this.runtime.testOverlapSolid(this.inst);
				if (bounceSolid)
				{
					this.runtime.registerCollision(this.inst, bounceSolid);
					s = cr.distanceTo(0, 0, this.dx, this.dy);
					bounceAngle = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty);
					this.dx = Math.cos(bounceAngle) * s;
					this.dy = Math.sin(bounceAngle) * s;
					this.inst.x += this.dx * dt;			// move out for one tick since the object can't have spent a tick in the solid
					this.inst.y += this.dy * dt;
					this.inst.set_bbox_changed();
					if (this.setAngle)
					{
						this.inst.angle = bounceAngle;
						this.lastKnownAngle = bounceAngle;
						this.inst.set_bbox_changed();
					}
					if (!this.runtime.pushOutSolid(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30)))
						this.runtime.pushOutSolidNearest(this.inst, 100);
				}
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareSpeed = function (cmp, s)
	{
		return cr.do_cmp(cr.distanceTo(0, 0, this.dx, this.dy), cmp, s);
	};
	Cnds.prototype.CompareTravelled = function (cmp, d)
	{
		return cr.do_cmp(this.travelled, cmp, d);
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetSpeed = function (s)
	{
		var a = cr.angleTo(0, 0, this.dx, this.dy);
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.SetAcceleration = function (a)
	{
		this.acc = a;
	};
	Acts.prototype.SetGravity = function (g)
	{
		this.g = g;
	};
	Acts.prototype.SetAngleOfMotion = function (a)
	{
		a = cr.to_radians(a);
		var s = cr.distanceTo(0, 0, this.dx, this.dy)
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.Bounce = function (objtype)
	{
		if (!objtype)
			return;
		var otherinst = objtype.getFirstPicked(this.inst);
		if (!otherinst)
			return;
		var dt = this.runtime.getDt(this.inst);
		var s = cr.distanceTo(0, 0, this.dx, this.dy);
		var bounceAngle = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty, otherinst);
		this.dx = Math.cos(bounceAngle) * s;
		this.dy = Math.sin(bounceAngle) * s;
		this.inst.x += this.dx * dt;			// move out for one tick since the object can't have spent a tick in the solid
		this.inst.y += this.dy * dt;
		this.inst.set_bbox_changed();
		if (this.setAngle)
		{
			this.inst.angle = bounceAngle;
			this.lastKnownAngle = bounceAngle;
			this.inst.set_bbox_changed();
		}
		if (this.bounceOffSolid)
		{
			if (!this.runtime.pushOutSolid(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30)))
				this.runtime.pushOutSolidNearest(this.inst, 100);
		}
		else
		{
			this.runtime.pushOut(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30), otherinst)
		}
	};
	Acts.prototype.SetEnabled = function (en)
	{
		this.enabled = (en === 1);
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Speed = function (ret)
	{
		var s = cr.distanceTo(0, 0, this.dx, this.dy);
		s = cr.round6dp(s);
		ret.set_float(s);
	};
	Exps.prototype.Acceleration = function (ret)
	{
		ret.set_float(this.acc);
	};
	Exps.prototype.AngleOfMotion = function (ret)
	{
		ret.set_float(cr.to_degrees(cr.angleTo(0, 0, this.dx, this.dy)));
	};
	Exps.prototype.DistanceTravelled = function (ret)
	{
		ret.set_float(this.travelled);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Fade = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Fade.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		var active_at_start = this.properties[0] === 1;
		this.fadeInTime = this.properties[1];
		this.waitTime = this.properties[2];
		this.fadeOutTime = this.properties[3];
		this.destroy = this.properties[4];			// 0 = no, 1 = after fade out
		this.stage = active_at_start ? 0 : 3;		// 0 = fade in, 1 = wait, 2 = fade out, 3 = done
		if (this.recycled)
			this.stageTime.reset();
		else
			this.stageTime = new cr.KahanAdder();
		this.maxOpacity = (this.inst.opacity ? this.inst.opacity : 1.0);
		if (active_at_start)
		{
			if (this.fadeInTime === 0)
			{
				this.stage = 1;
				if (this.waitTime === 0)
					this.stage = 2;
			}
			else
			{
				this.inst.opacity = 0;
				this.runtime.redraw = true;
			}
		}
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"fit": this.fadeInTime,
			"wt": this.waitTime,
			"fot": this.fadeOutTime,
			"s": this.stage,
			"st": this.stageTime.sum,
			"mo": this.maxOpacity,
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.fadeInTime = o["fit"];
		this.waitTime = o["wt"];
		this.fadeOutTime = o["fot"];
		this.stage = o["s"];
		this.stageTime.reset();
		this.stageTime.sum = o["st"];
		this.maxOpacity = o["mo"];
	};
	behinstProto.tick = function ()
	{
		this.stageTime.add(this.runtime.getDt(this.inst));
		if (this.stage === 0)
		{
			this.inst.opacity = (this.stageTime.sum / this.fadeInTime) * this.maxOpacity;
			this.runtime.redraw = true;
			if (this.inst.opacity >= this.maxOpacity)
			{
				this.inst.opacity = this.maxOpacity;
				this.stage = 1;	// wait stage
				this.stageTime.reset();
			}
		}
		if (this.stage === 1)
		{
			if (this.stageTime.sum >= this.waitTime)
			{
				this.stage = 2;	// fade out stage
				this.stageTime.reset();
			}
		}
		if (this.stage === 2)
		{
			if (this.fadeOutTime !== 0)
			{
				this.inst.opacity = this.maxOpacity - ((this.stageTime.sum / this.fadeOutTime) * this.maxOpacity);
				this.runtime.redraw = true;
				if (this.inst.opacity < 0)
				{
					this.inst.opacity = 0;
					this.stage = 3;	// done
					this.stageTime.reset();
					this.runtime.trigger(cr.behaviors.Fade.prototype.cnds.OnFadeOutEnd, this.inst);
					if (this.destroy === 1)
						this.runtime.DestroyInstance(this.inst);
				}
			}
		}
	};
	behinstProto.doStart = function ()
	{
		this.stage = 0;
		this.stageTime.reset();
		if (this.fadeInTime === 0)
		{
			this.stage = 1;
			if (this.waitTime === 0)
				this.stage = 2;
		}
		else
		{
			this.inst.opacity = 0;
			this.runtime.redraw = true;
		}
	};
	function Cnds() {};
	Cnds.prototype.OnFadeOutEnd = function ()
	{
		return true;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.StartFade = function ()
	{
		if (this.stage === 3)
			this.doStart();
	};
	Acts.prototype.RestartFade = function ()
	{
		this.doStart();
	};
	behaviorProto.acts = new Acts();
}());
;
;
cr.behaviors.Flash = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Flash.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.ontime = 0;
		this.offtime = 0;
		this.stage = 0;			// 0 = on, 1 = off
		this.stagetimeleft = 0;
		this.timeleft = 0;
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"ontime": this.ontime,
			"offtime": this.offtime,
			"stage": this.stage,
			"stagetimeleft": this.stagetimeleft,
			"timeleft": this.timeleft
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.ontime = o["ontime"];
		this.offtime = o["offtime"];
		this.stage = o["stage"];
		this.stagetimeleft = o["stagetimeleft"];
		this.timeleft = o["timeleft"];
	};
	behinstProto.tick = function ()
	{
		if (this.timeleft <= 0)
			return;		// not flashing
		var dt = this.runtime.getDt(this.inst);
		this.timeleft -= dt;
		if (this.timeleft <= 0)
		{
			this.timeleft = 0;
			this.inst.visible = true;
			this.runtime.redraw = true;
			this.runtime.trigger(cr.behaviors.Flash.prototype.cnds.OnFlashEnded, this.inst);
			return;
		}
		this.stagetimeleft -= dt;
		if (this.stagetimeleft <= 0)
		{
			if (this.stage === 0)
			{
				this.inst.visible = false;
				this.stage = 1;
				this.stagetimeleft += this.offtime;
			}
			else
			{
				this.inst.visible = true;
				this.stage = 0;
				this.stagetimeleft += this.ontime;
			}
			this.runtime.redraw = true;
		}
	};
	function Cnds() {};
	Cnds.prototype.IsFlashing = function ()
	{
		return this.timeleft > 0;
	};
	Cnds.prototype.OnFlashEnded = function ()
	{
		return true;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Flash = function (on_, off_, dur_)
	{
		this.ontime = on_;
		this.offtime = off_;
		this.stage = 1;		// always start off
		this.stagetimeleft = off_;
		this.timeleft = dur_;
		this.inst.visible = false;
		this.runtime.redraw = true;
	};
	Acts.prototype.StopFlashing = function ()
	{
		this.timeleft = 0;
		this.inst.visible = true;
		this.runtime.redraw = true;
		return;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Rex_Rotate = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Rex_Rotate.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
        this.activated = (this.properties[0]==1);
        this.direction = this.properties[1];
		this.speed = this.properties[2];
		this.acc = this.properties[3];
	};
	behinstProto.tick = function ()
	{
        if (!this.activated)
            return;
		var dt = this.runtime.getDt(this.inst);
		this.speed += (this.acc * dt);
		if (this.speed != 0)
		{
            var angle = this.speed * dt;  // in degree
            if ( this.direction == 0)
               angle = -angle;
            this.inst.angle += cr.to_clamped_radians(angle);
			this.inst.set_bbox_changed();
		}
	};
	behinstProto.saveToJSON = function ()
	{
		return { "en": this.activated,
                 "d": this.direction,
				 "s": this.speed,
				 "a": this.acc};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.activated = o["en"];
		this.direction = o["d"];
		this.speed = o["s"];
		this.acc = o["a"];
	};
	function Cnds() {};
	behaviorProto.cnds = new Cnds();
	Cnds.prototype.CompareSpeed = function (cmp, s)
	{
		return cr.do_cmp(this.speed, cmp, s);
	};
	function Acts() {};
	behaviorProto.acts = new Acts();
	Acts.prototype.SetActivated = function (s)
	{
		this.activated = (s==1);
	};
	Acts.prototype.SetDirection = function (d)
	{
		this.direction = d;
	};
	Acts.prototype.SetSpeed = function (s)
	{
		this.speed = s;
	};
	Acts.prototype.SetAcceleration = function (a)
	{
		this.acc = a;
	};
	function Exps() {};
	behaviorProto.exps = new Exps();
	Exps.prototype.Speed = function (ret)
	{
		ret.set_float(this.speed);
	};
	Exps.prototype.Acceleration = function (ret)
	{
		ret.set_float(this.acc);
	};
	Exps.prototype.Activated = function (ret)
	{
		ret.set_int(this.activated);
	};
}());
;
;
cr.behaviors.jumpthru = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.jumpthru.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.inst.extra["jumpthruEnabled"] = (this.properties[0] !== 0);
	};
	behinstProto.tick = function ()
	{
	};
	function Cnds() {};
	Cnds.prototype.IsEnabled = function ()
	{
		return this.inst.extra["jumpthruEnabled"];
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEnabled = function (e)
	{
		this.inst.extra["jumpthruEnabled"] = !!e;
	};
	behaviorProto.acts = new Acts();
}());
;
;
cr.behaviors.solid = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.solid.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.inst.extra["solidEnabled"] = (this.properties[0] !== 0);
	};
	behinstProto.tick = function ()
	{
	};
	function Cnds() {};
	Cnds.prototype.IsEnabled = function ()
	{
		return this.inst.extra["solidEnabled"];
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEnabled = function (e)
	{
		this.inst.extra["solidEnabled"] = !!e;
	};
	behaviorProto.acts = new Acts();
}());
cr.getProjectModel = function() { return [
	null,
	"Splash",
	[
	[
		cr.plugins_.cjs,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.AJAX,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Arr,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Audio,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Browser,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.CJSAds,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Dictionary,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Rex_CSV,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Rex_CSV2Array,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Function,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Keyboard,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.HTML_iFrame_Pode,
		false,
		true,
		true,
		true,
		true,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Rex_SLGBoard,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Rex_SLGSquareTx,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Sprite,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.Spritefont2,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.Text,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.TiledBg,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.Touch,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Cookie,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.WebStorage,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
	],
	[
	[
		"t0",
		cr.plugins_.Sprite,
		false,
		[1628914001884483],
		2,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			8273773294343789,
			[
				["parkingPanic/images/playbutt-sheet0.png", 87836, 1, 1, 256, 147, 1, 0.5, 0.5034013390541077,[],[],0],
				["parkingPanic/images/playbutt-sheet0.png", 87836, 1, 150, 256, 147, 1, 0.5, 0.5034013390541077,[],[],0],
				["parkingPanic/images/playbutt-sheet0.png", 87836, 1, 299, 256, 147, 1, 0.5, 0.5034013390541077,[],[],0],
				["parkingPanic/images/playbutt-sheet1.png", 85601, 1, 1, 256, 147, 1, 0.5, 0.5034013390541077,[],[],0],
				["parkingPanic/images/playbutt-sheet1.png", 85601, 1, 150, 256, 147, 1, 0.5, 0.5034013390541077,[],[],0],
				["parkingPanic/images/playbutt-sheet1.png", 85601, 1, 299, 256, 147, 1, 0.5, 0.5034013390541077,[],[],0],
				["parkingPanic/images/playbutt-sheet2.png", 57197, 1, 1, 256, 147, 1, 0.5, 0.5034013390541077,[],[],0],
				["parkingPanic/images/playbutt-sheet2.png", 57197, 1, 150, 256, 147, 1, 0.5, 0.5034013390541077,[],[],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			3883536382043854
		]
,		[
			"Jumpthru",
			cr.behaviors.jumpthru,
			2840029542447311
		]
		],
		false,
		false,
		7142381773242731,
		[],
		null
	]
,	[
		"t1",
		cr.plugins_.Sprite,
		false,
		[1628914001884483],
		1,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			7216156578372815,
			[
				["parkingPanic/images/moregame-sheet0.png", 117, 0, 0, 2, 2, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			5378014422055935
		]
		],
		false,
		false,
		86329812699525,
		[],
		null
	]
,	[
		"t2",
		cr.plugins_.Sprite,
		false,
		[1628914001884483,7509596403939889],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			6216117433291606,
			[
				["parkingPanic/images/backbutt-sheet0.png", 5482, 0, 0, 62, 62, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/backbutt-sheet1.png", 5520, 0, 0, 62, 62, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		860104995863788,
		[],
		null
	]
,	[
		"t3",
		cr.plugins_.Sprite,
		false,
		[1628914001884483],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5005882456318982,
			[
				["parkingPanic/images/backtolevelbutt-sheet0.png", 5731, 0, 0, 62, 62, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			9530636533605767
		]
		],
		false,
		false,
		3310465205314988,
		[],
		null
	]
,	[
		"t4",
		cr.plugins_.Sprite,
		false,
		[1628914001884483],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1942309456111619,
			[
				["parkingPanic/images/nextbutt-sheet0.png", 5705, 0, 0, 62, 62, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			643500064910007
		]
		],
		false,
		false,
		873260802668446,
		[],
		null
	]
,	[
		"t5",
		cr.plugins_.Sprite,
		false,
		[1628914001884483],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9496694319228027,
			[
				["parkingPanic/images/replaybutt-sheet0.png", 6418, 0, 0, 62, 62, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			4189657217731298
		]
		],
		false,
		false,
		5679897096620346,
		[],
		null
	]
,	[
		"t6",
		cr.plugins_.Sprite,
		false,
		[1628914001884483],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			9417126907946541,
			[
				["parkingPanic/images/interclose-sheet0.png", 7974, 1, 1, 126, 126, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/interclose-sheet0.png", 7974, 129, 1, 126, 126, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/interclose-sheet0.png", 7974, 1, 129, 126, 126, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/interclose-sheet0.png", 7974, 129, 129, 126, 126, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/interclose-sheet1.png", 7174, 1, 1, 126, 126, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/interclose-sheet1.png", 7174, 129, 1, 126, 126, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/interclose-sheet1.png", 7174, 1, 129, 126, 126, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/interclose-sheet1.png", 7174, 129, 129, 126, 126, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2805459348912768,
		[],
		null
	]
,	[
		"t7",
		cr.plugins_.Sprite,
		false,
		[1628914001884483],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			8945658738008976,
			[
				["parkingPanic/images/ratebtn-sheet0.png", 106, 0, 0, 32, 32, 1, 0.5, 0.5,[],[],3],
				["parkingPanic/images/ratebtn-sheet0.png", 106, 0, 0, 32, 32, 1, 0.5, 0.5,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		246632059196654,
		[],
		null
	]
,	[
		"t8",
		cr.plugins_.Sprite,
		false,
		[1628914001884483],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5145568571127817,
			[
				["parkingPanic/images/howto-sheet0.png", 9848, 0, 0, 120, 120, 1, 0.5, 0.5,[],[-0.5,-0.2322919964790344,0.5,-0.2363280057907105,0.5,0.2360680103302002,-0.5,0.2360680103302002],0]
			]
			]
		],
		[
		],
		false,
		false,
		6167799754639192,
		[],
		null
	]
,	[
		"t9",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2853054680140207,
			[
				["parkingPanic/images/backgrounds-sheet0.png", 625579, 0, 0, 944, 1024, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			4697444953442271
		]
		],
		true,
		false,
		508458937841221,
		[],
		null
	]
,	[
		"t10",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5336722864744838,
			[
				["parkingPanic/images/logo-sheet0.png", 23373, 0, 0, 510, 305, 1, 0.5, 0.5016393661499023,[],[-0.3628849983215332,-0.2725913524627686,0,-0.1887823641300201,0.3033069968223572,-0.1730683743953705,0.487742006778717,-0.001639366149902344,0.4150509834289551,0.3564556241035461,0,0.4945506453514099,-0.4877423048019409,0.4778846502304077,-0.4994298815727234,-0.001639366149902344],0]
			]
			]
		],
		[
		],
		false,
		false,
		332960503809755,
		[],
		null
	]
,	[
		"t11",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3793813787190557,
			[
				["parkingPanic/images/backgrounds3-sheet0.png", 735279, 0, 0, 944, 1024, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			5452738333999151
		]
		],
		true,
		false,
		5253192143374098,
		[],
		null
	]
,	[
		"t12",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8918140096513078,
			[
				["parkingPanic/images/bg_added1-sheet0.png", 104072, 0, 0, 1024, 160, 1, 0.5, 0.5,[],[-0.4619140923023224,-0.2562499940395355,0,-0.3187499940395355,0.4755859971046448,-0.34375,0.5,0,0.5,0.5,0,0.5,-0.4804686903953552,0.375,-0.4951171875,0],0]
			]
			]
		],
		[
		],
		true,
		false,
		6676037395280082,
		[],
		null
	]
,	[
		"t13",
		cr.plugins_.TiledBg,
		false,
		[3909188124215788],
		0,
		0,
		["parkingPanic/images/bgoverlays.png", 93, 4],
		null,
		[
		],
		false,
		false,
		6644630642173032,
		[],
		null
	]
,	[
		"t14",
		cr.plugins_.TiledBg,
		false,
		[3909188124215788],
		1,
		0,
		["parkingPanic/images/bgoverlays.png", 93, 4],
		null,
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			3160327923677992
		]
		],
		false,
		false,
		4060157264220185,
		[],
		null
	]
,	[
		"t15",
		cr.plugins_.TiledBg,
		false,
		[],
		1,
		0,
		["parkingPanic/images/tiledbackground2.png", 103, 3],
		null,
		[
		[
			"Solid",
			cr.behaviors.solid,
			4154613151791438
		]
		],
		false,
		false,
		6139405878814608,
		[],
		null
	]
,	[
		"t16",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["parkingPanic/images/bgoverlays.png", 93, 4],
		null,
		[
		],
		false,
		false,
		4293869702744957,
		[],
		null
	]
,	[
		"t17",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["parkingPanic/images/tiledbackground.png", 106, 0],
		null,
		[
		],
		false,
		false,
		4983019443176682,
		[],
		null
	]
,	[
		"t18",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2885731570718896,
		[],
		null
	]
,	[
		"t19",
		cr.plugins_.Sprite,
		false,
		[1628914001884483,4250141023588771],
		1,
		0,
		null,
		[
			[
			"loading",
			0,
			false,
			1,
			0,
			false,
			2587431902949305,
			[
				["parkingPanic/images/playtouch-sheet0.png", 939216, 241, 671, 236, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 365, 403, 343, 65, 1, 0.5014577507972717, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 510, 135, 501, 65, 1, 0.5009980201721191, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 424, 336, 399, 65, 1, 0.5012531280517578, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 68, 522, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 710, 403, 313, 65, 1, 0.5015974640846252, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 525, 68, 496, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 202, 495, 65, 1, 0.5010101199150085, 0.5076923370361328,[],[],0]
			]
			]
,			[
			"gameover",
			0,
			false,
			1,
			0,
			false,
			6967071229082846,
			[
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 269, 441, 65, 1, 0.5011337995529175, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 269, 441, 65, 1, 0.5011337995529175, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 245, 738, 114, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 498, 202, 471, 65, 1, 0.5010615587234497, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 1, 694, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 607, 537, 249, 65, 1, 0.5020080208778381, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 738, 120, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 444, 269, 427, 65, 1, 0.5011709332466126, 0.5076923370361328,[],[],0]
			]
			]
,			[
			"victory",
			0,
			false,
			1,
			0,
			false,
			1389207976386937,
			[
				["parkingPanic/images/playtouch-sheet0.png", 939216, 858, 537, 164, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 403, 362, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 680, 470, 330, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 697, 1, 317, 65, 1, 0.5015772581100464, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 342, 470, 336, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 123, 738, 120, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 714, 730, 207, 65, 1, 0.5024154782295227, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 479, 671, 233, 65, 1, 0.5021459460258484, 0.5076923370361328,[],[],0]
			]
			]
,			[
			"pause",
			0,
			false,
			1,
			0,
			false,
			2492201014970304,
			[
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 671, 238, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 671, 238, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 315, 537, 290, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 671, 238, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 604, 248, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 499, 604, 245, 65, 1, 0.5020408034324646, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 604, 248, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 135, 507, 65, 1, 0.5009862184524536, 0.5076923370361328,[],[],0]
			]
			]
,			[
			"score",
			0,
			false,
			1,
			0,
			false,
			5560015734142137,
			[
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 470, 339, 65, 1, 0.501474916934967, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 746, 604, 243, 65, 1, 0.5020576119422913, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 537, 312, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 746, 604, 243, 65, 1, 0.5020576119422913, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 1, 336, 421, 65, 1, 0.5011876225471497, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 873, 269, 126, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 251, 604, 246, 65, 1, 0.5, 0.5076923370361328,[],[],0],
				["parkingPanic/images/playtouch-sheet0.png", 939216, 825, 336, 190, 65, 1, 0.5, 0.5076923370361328,[],[],0]
			]
			]
,			[
			"playtouch",
			5,
			false,
			1,
			0,
			false,
			4555694027935269,
			[
				["parkingPanic/images/playtouch-sheet0.png", 939216, 714, 671, 241, 57, 1, 0.4937759339809418, 0.5087719559669495,[],[-0.4937759339809418,-0.05982396006584168,-0.001277923583984375,-0.4032649397850037,0.5062240362167358,-0.09695196151733398,0.5062240362167358,0.07940804958343506,-0.001277923583984375,0.2743340730667114,-0.4937759339809418,0.04228001832962036],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			7581727258451828
		]
		],
		false,
		false,
		5911054889595893,
		[],
		null
	]
,	[
		"t20",
		cr.plugins_.Text,
		false,
		[7871011578727689],
		1,
		0,
		null,
		null,
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			4741539482067307
		]
		],
		false,
		false,
		2378432247257774,
		[],
		null
	]
,	[
		"t21",
		cr.plugins_.Spritefont2,
		false,
		[1663090904888285,6573026681742263,4315169235193924,1967511012516644,8206307576602519],
		2,
		0,
		["parkingPanic/images/lvlnumbersf.png", 124016, 0],
		null,
		[
		[
			"Fade",
			cr.behaviors.Fade,
			768187936679914
		]
,		[
			"Bullet",
			cr.behaviors.Bullet,
			9446481774493398
		]
		],
		false,
		false,
		5698365612177246,
		[],
		null
	]
,	[
		"t22",
		cr.plugins_.Text,
		false,
		[9625309329712813],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4612904292027715,
		[],
		null
	]
,	[
		"t23",
		cr.plugins_.Rex_SLGBoard,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		5933259034972943,
		[],
		null
	]
,	[
		"t24",
		cr.plugins_.Rex_SLGSquareTx,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		9697276577546813,
		[],
		null
	]
,	[
		"t25",
		cr.plugins_.Browser,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2004635338807411,
		[],
		null
		,[]
	]
,	[
		"t26",
		cr.plugins_.Touch,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		6811012510006406,
		[],
		null
		,[1]
	]
,	[
		"t27",
		cr.plugins_.Function,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3939749352237117,
		[],
		null
		,[]
	]
,	[
		"t28",
		cr.plugins_.CJSAds,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4980913638153393,
		[],
		null
		,[0,1]
	]
,	[
		"t29",
		cr.plugins_.cjs,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		4953434224874993,
		[],
		null
	]
,	[
		"t30",
		cr.plugins_.AJAX,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1160813585011013,
		[],
		null
		,[]
	]
,	[
		"t31",
		cr.plugins_.Rex_CSV2Array,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2659740020772869,
		[],
		null
		,[]
	]
,	[
		"t32",
		cr.plugins_.Keyboard,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4102767552857055,
		[],
		null
		,[]
	]
,	[
		"t33",
		cr.plugins_.HTML_iFrame_Pode,
		false,
		[1222007730496653],
		1,
		0,
		null,
		null,
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			4068570939560786
		]
		],
		true,
		false,
		5594887134887296,
		[],
		null
	]
,	[
		"t34",
		cr.plugins_.HTML_iFrame_Pode,
		false,
		[1222007730496653],
		1,
		0,
		null,
		null,
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			9459112683969779
		]
		],
		false,
		false,
		1040354933844671,
		[],
		null
	]
,	[
		"t35",
		cr.plugins_.Sprite,
		false,
		[1628914001884483,876359442677398,875259246477434],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			5003693143221818,
			[
				["parkingPanic/images/lvlstarsunlocked-sheet0.png", 6313, 1, 1, 62, 62, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/lvlstarsunlocked-sheet0.png", 6313, 65, 1, 62, 62, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/lvlstarsunlocked-sheet0.png", 6313, 1, 65, 62, 62, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/lvlstarsunlocked-sheet0.png", 6313, 65, 65, 62, 62, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		7475983279629282,
		[],
		null
	]
,	[
		"t36",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			3110742961975115,
			[
				["parkingPanic/images/dottab-sheet0.png", 103, 0, 0, 1, 1, 1, 1, 1,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		3724081504995745,
		[],
		null
	]
,	[
		"t37",
		cr.plugins_.Sprite,
		false,
		[1628914001884483,3998847531358493,9799273747477096],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9085030944864622,
			[
				["parkingPanic/images/lvlbutt-sheet0.png", 3034, 0, 0, 62, 62, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5834916622227191,
		[],
		null
	]
,	[
		"t38",
		cr.plugins_.Sprite,
		false,
		[1628914001884483,4963788497432212,3421594387235429],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			9352737503391898,
			[
				["parkingPanic/images/lvllock-sheet0.png", 5864, 0, 0, 62, 62, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/lvllock-sheet1.png", 108, 0, 0, 62, 62, 1, 1, 1,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		1307028710773028,
		[],
		null
	]
,	[
		"t39",
		cr.plugins_.WebStorage,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		9863384377838504,
		[],
		null
		,[]
	]
,	[
		"t40",
		cr.plugins_.Arr,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		7946646302087741,
		[],
		null
	]
,	[
		"t41",
		cr.plugins_.Rex_CSV,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		9469447985883232,
		[],
		null
	]
,	[
		"t42",
		cr.plugins_.Dictionary,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		5589255793177495,
		[],
		null
	]
,	[
		"t43",
		cr.plugins_.Cookie,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		194776448781188,
		[],
		null
		,[77]
	]
,	[
		"t44",
		cr.plugins_.Rex_CSV,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		5810276351901775,
		[],
		null
	]
,	[
		"t45",
		cr.plugins_.Arr,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		9631107743925979,
		[],
		null
	]
,	[
		"t46",
		cr.plugins_.Arr,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		8592003963797915,
		[],
		null
	]
,	[
		"t47",
		cr.plugins_.Arr,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		6983282530678159,
		[],
		null
	]
,	[
		"t48",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			7139209011342233,
			[
				["parkingPanic/images/count321-sheet0.png", 43548, 1, 1, 254, 254, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/count321-sheet0.png", 43548, 257, 1, 254, 254, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/count321-sheet0.png", 43548, 1, 257, 254, 254, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/count321-sheet0.png", 43548, 257, 257, 254, 254, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			5591253750895261
		]
		],
		false,
		false,
		4401062936295542,
		[],
		null
	]
,	[
		"t49",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["parkingPanic/images/lifebar.png", 2600, 0],
		null,
		[
		],
		false,
		false,
		5388860310452533,
		[],
		null
	]
,	[
		"t50",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			6579540548437609,
			[
				["parkingPanic/images/pausebutt-sheet0.png", 6784, 0, 0, 126, 126, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/pausebutt-sheet0.png", 6784, 0, 0, 126, 126, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			9887325060783849
		]
		],
		false,
		false,
		3119077550496674,
		[],
		null
	]
,	[
		"t51",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			5877453103631065,
			[
				["parkingPanic/images/bgtimerbar-sheet0.png", 9528, 1, 1, 510, 55, 1, 0.01568627543747425, 0.2363636344671249,[],[0.9843137264251709,-0.2363636344671249,0.9843137264251709,0.7636363506317139,-0.01568627543747425,0.7636363506317139,-0.01568627543747425,-0.2363636344671249],0],
				["parkingPanic/images/bgtimerbar-sheet0.png", 9528, 1, 58, 510, 55, 1, 0.01568627543747425, 0.2363636344671249,[],[0.9843137264251709,-0.2363636344671249,0.9843137264251709,0.7636363506317139,-0.01568627543747425,0.7636363506317139,-0.01568627543747425,-0.2363636344671249],0],
				["parkingPanic/images/bgtimerbar-sheet0.png", 9528, 1, 115, 510, 55, 1, 0.01568627543747425, 0.2363636344671249,[],[0.9843137264251709,-0.2363636344671249,0.9843137264251709,0.7636363506317139,-0.01568627543747425,0.7636363506317139,-0.01568627543747425,-0.2363636344671249],0]
			]
			]
		],
		[
		],
		false,
		false,
		7804284169301494,
		[],
		null
	]
,	[
		"t52",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["parkingPanic/images/filltimerbar.png", 106, 0],
		null,
		[
		],
		false,
		false,
		4236774772883938,
		[],
		null
	]
,	[
		"t53",
		cr.plugins_.Sprite,
		false,
		[1628914001884483],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8038524140904227,
			[
				["parkingPanic/images/loading-sheet0.png", 2962, 0, 0, 100, 100, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rex_Rotate,
			378963826398893
		]
		],
		false,
		false,
		1683494235070758,
		[],
		null
	]
,	[
		"t54",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1553930742249947,
			[
				["parkingPanic/images/deco-sheet0.png", 7842, 65, 1, 2, 2, 1, 0, 0,[],[],0],
				["parkingPanic/images/deco-sheet0.png", 7842, 1, 1, 62, 64, 1, 0.4838709533214569, 0.875,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		9556345193170722,
		[],
		null
	]
,	[
		"t55",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3900290012323774,
			[
				["parkingPanic/images/stardeco-sheet0.png", 4459, 0, 0, 59, 76, 1, 0.508474588394165, 0.4078947305679321,[],[-0.508474588394165,-0.4078947305679321,0.491525411605835,-0.4078947305679321,0.491525411605835,0.3552632927894592,-0.508474588394165,0.3552632927894592],0]
			]
			]
		],
		[
		],
		false,
		false,
		1843729363203411,
		[],
		null
	]
,	[
		"t56",
		cr.plugins_.Sprite,
		false,
		[9954174601008857,6329757243501501,9766211857929196,3841876175699402,404917946560191],
		2,
		0,
		null,
		[
			[
			"car1",
			0,
			false,
			1,
			0,
			false,
			6967875294781498,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 305, 309, 150, 70, 1, 0.753333330154419, 0.5,[],[],0]
			]
			]
,			[
			"car2",
			0,
			false,
			1,
			0,
			false,
			5655861014886646,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 1, 155, 150, 75, 1, 0.753333330154419, 0.5066666603088379,[],[],0]
			]
			]
,			[
			"car3",
			0,
			false,
			1,
			0,
			false,
			6522328998475778,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 153, 155, 150, 75, 1, 0.753333330154419, 0.5066666603088379,[],[],0]
			]
			]
,			[
			"car4",
			0,
			false,
			1,
			0,
			false,
			8315228668113477,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 305, 155, 150, 75, 1, 0.753333330154419, 0.5066666603088379,[],[],0]
			]
			]
,			[
			"car5",
			0,
			false,
			1,
			0,
			false,
			1264282911383259,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 1, 232, 150, 75, 1, 0.753333330154419, 0.5066666603088379,[],[],0]
			]
			]
,			[
			"car6",
			0,
			false,
			1,
			0,
			false,
			1136021502758623,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 153, 232, 150, 75, 1, 0.753333330154419, 0.5066666603088379,[],[],0]
			]
			]
,			[
			"car7",
			0,
			false,
			1,
			0,
			false,
			815278439241776,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 305, 232, 150, 75, 1, 0.753333330154419, 0.5066666603088379,[],[],0]
			]
			]
,			[
			"car8",
			0,
			false,
			1,
			0,
			false,
			1757134636450771,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 1, 309, 150, 75, 1, 0.753333330154419, 0.5066666603088379,[],[],0]
			]
			]
,			[
			"car9",
			0,
			false,
			1,
			0,
			false,
			6684703019452805,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 153, 309, 150, 75, 1, 0.753333330154419, 0.5066666603088379,[],[],0]
			]
			]
,			[
			"car10",
			5,
			false,
			1,
			0,
			false,
			4115709212239355,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 1, 1, 225, 75, 1, 0.8355555534362793, 0.5066666603088379,[],[0.1644444465637207,-0.5066666603088379,0.1644444465637207,0.4933333396911621,-0.8355555534362793,0.4933333396911621,-0.8355555534362793,-0.5066666603088379],0]
			]
			]
,			[
			"car11",
			5,
			false,
			1,
			0,
			false,
			3947925152388953,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 228, 1, 225, 75, 1, 0.8355555534362793, 0.5066666603088379,[],[0.1644444465637207,-0.5066666603088379,0.1644444465637207,0.4933333396911621,-0.8355555534362793,0.4933333396911621,-0.8355555534362793,-0.5066666603088379],0]
			]
			]
,			[
			"car12",
			5,
			false,
			1,
			0,
			false,
			1726359652081436,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 1, 78, 225, 75, 1, 0.8355555534362793, 0.5066666603088379,[],[0.1644444465637207,-0.5066666603088379,0.1644444465637207,0.4933333396911621,-0.8355555534362793,0.4933333396911621,-0.8355555534362793,-0.5066666603088379],0]
			]
			]
,			[
			"car13",
			5,
			false,
			1,
			0,
			false,
			595100900877003,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 228, 78, 225, 75, 1, 0.8355555534362793, 0.5066666603088379,[],[0.1644444465637207,-0.5066666603088379,0.1644444465637207,0.4933333396911621,-0.8355555534362793,0.4933333396911621,-0.8355555534362793,-0.5066666603088379],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			6898082481011241
		]
,		[
			"Bullet",
			cr.behaviors.Bullet,
			85631541676799
		]
		],
		false,
		false,
		3271530656285935,
		[],
		null
	]
,	[
		"t57",
		cr.plugins_.Sprite,
		false,
		[1664815791076262],
		2,
		0,
		null,
		[
			[
			"car1",
			0,
			false,
			1,
			0,
			false,
			8599731688096478,
			[
				["parkingPanic/images/decocars-sheet0.png", 19085, 0, 0, 150, 75, 1, 0.753333330154419, 0.5066666603088379,[],[],0]
			]
			]
,			[
			"car2",
			0,
			false,
			1,
			0,
			false,
			9471110750004294,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 305, 155, 150, 75, 1, 0.753333330154419, 0.5066666603088379,[],[],0]
			]
			]
,			[
			"car3",
			0,
			false,
			1,
			0,
			false,
			9197634495942845,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 153, 309, 150, 75, 1, 0.753333330154419, 0.5066666603088379,[],[],0]
			]
			]
,			[
			"car4",
			5,
			false,
			1,
			0,
			false,
			6628357075663806,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 228, 1, 225, 75, 1, 0.8355555534362793, 0.5066666603088379,[],[0.1644444465637207,-0.5066666603088379,0.1644444465637207,0.4933333396911621,-0.8355555534362793,0.4933333396911621,-0.8355555534362793,-0.5066666603088379],0]
			]
			]
,			[
			"car5",
			5,
			false,
			1,
			0,
			false,
			9621791213261201,
			[
				["parkingPanic/images/cars-sheet0.png", 221199, 1, 1, 225, 75, 1, 0.8355555534362793, 0.5066666603088379,[],[0.1644444465637207,-0.5066666603088379,0.1644444465637207,0.4933333396911621,-0.8355555534362793,0.4933333396911621,-0.8355555534362793,-0.5066666603088379],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			917933991855225
		]
,		[
			"Fade",
			cr.behaviors.Fade,
			1725850326918561
		]
		],
		true,
		false,
		9540653876904893,
		[],
		null
	]
,	[
		"t58",
		cr.plugins_.Sprite,
		false,
		[1628914001884483],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			3096787374734709,
			[
				["parkingPanic/images/newrecordstamp-sheet0.png", 26172, 1, 1, 126, 126, 1, 0.5079365372657776, 0.5555555820465088,[],[],0],
				["parkingPanic/images/newrecordstamp-sheet0.png", 26172, 129, 1, 126, 126, 1, 0.5079365372657776, 0.5555555820465088,[],[],0],
				["parkingPanic/images/newrecordstamp-sheet0.png", 26172, 1, 129, 126, 126, 1, 0.5079365372657776, 0.5555555820465088,[],[],0],
				["parkingPanic/images/newrecordstamp-sheet0.png", 26172, 129, 129, 126, 126, 1, 0.4920634925365448, 0.5555555820465088,[],[],0],
				["parkingPanic/images/newrecordstamp-sheet1.png", 25613, 1, 1, 126, 126, 1, 0.5079365372657776, 0.5555555820465088,[],[],0],
				["parkingPanic/images/newrecordstamp-sheet1.png", 25613, 129, 1, 126, 126, 1, 0.5079365372657776, 0.5079365372657776,[],[],0],
				["parkingPanic/images/newrecordstamp-sheet1.png", 25613, 1, 129, 126, 126, 1, 0.5079365372657776, 0.5079365372657776,[],[],0],
				["parkingPanic/images/newrecordstamp-sheet1.png", 25613, 129, 129, 126, 126, 1, 0.5079365372657776, 0.5079365372657776,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5479477148436373,
		[],
		null
	]
,	[
		"t59",
		cr.plugins_.Sprite,
		false,
		[1628914001884483,6620533882433752,7564054556425916],
		0,
		0,
		null,
		[
			[
			"s0",
			40,
			false,
			1,
			0,
			false,
			8925068432895918,
			[
				["parkingPanic/images/star-sheet0.png", 415125, 346, 581, 79, 81, 2, 0.5316455960273743, 0.3703703582286835,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 934, 750, 85, 88, 2, 0.529411792755127, 0.4090909063816071,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 1, 664, 88, 92, 2, 0.5454545617103577, 0.445652186870575,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 499, 663, 92, 97, 2, 0.5543478131294251, 0.4639175236225128,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 1, 557, 98, 105, 1, 0.5612244606018066, 0.5047619342803955,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 834, 656, 98, 105, 1, 0.5612244606018066, 0.5047619342803955,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 469, 865, 112, 112, 1, 0.5178571343421936, 0.5178571343421936,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 798, 838, 142, 127, 1, 0.5070422291755676, 0.4566929042339325,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 1, 722, 160, 135, 1, 0.5062500238418579, 0.4296296238899231,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 431, 390, 177, 145, 1, 0.508474588394165, 0.4206896424293518,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 826, 371, 195, 158, 1, 0.5076923370361328, 0.4177215099334717,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 611, 371, 213, 170, 1, 0.5070422291755676, 0.4176470637321472,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 751, 1, 232, 183, 1, 0.5043103694915772, 0.4153005480766296,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 1, 1, 248, 193, 1, 0.5040322542190552, 0.4145077764987946,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 211, 439, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0]
			]
			]
,			[
			"s1",
			40,
			false,
			1,
			0,
			false,
			6844220024306182,
			[
				["parkingPanic/images/star-sheet1.png", 409508, 1, 758, 89, 81, 2, 0.5280898809432983, 0.3703703582286835,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 687, 756, 89, 84, 2, 0.5280898809432983, 0.3928571343421936,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 687, 663, 94, 91, 2, 0.521276593208313, 0.4395604431629181,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 301, 663, 97, 96, 2, 0.5257731676101685, 0.46875,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 660, 730, 103, 102, 1, 0.5242718458175659, 0.5,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 834, 552, 103, 102, 1, 0.5242718458175659, 0.5,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 112, 1, 110, 110, 1, 0.5090909004211426, 0.5090909004211426,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 325, 859, 142, 125, 1, 0.5070422291755676, 0.4480000138282776,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 498, 730, 160, 133, 1, 0.5062500238418579, 0.4210526347160339,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 167, 581, 177, 145, 1, 0.508474588394165, 0.4206896424293518,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 826, 531, 195, 158, 1, 0.5076923370361328, 0.4177215099334717,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 1, 381, 213, 170, 1, 0.5070422291755676, 0.4176470637321472,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 751, 186, 232, 183, 1, 0.5043103694915772, 0.4153005480766296,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 251, 1, 248, 193, 1, 0.5040322542190552, 0.4145077764987946,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 224, 1, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0]
			]
			]
,			[
			"s2",
			40,
			false,
			1,
			0,
			false,
			9122695527170835,
			[
				["parkingPanic/images/star-sheet0.png", 415125, 942, 838, 79, 81, 2, 0.5316455960273743, 0.3703703582286835,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 939, 441, 84, 88, 2, 0.523809552192688, 0.4090909063816071,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 934, 656, 89, 92, 2, 0.5056179761886597, 0.445652186870575,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 593, 663, 92, 97, 2, 0.5, 0.4639175236225128,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 101, 659, 98, 105, 1, 0.4897959232330322, 0.5047619342803955,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 201, 661, 98, 105, 1, 0.4897959232330322, 0.5047619342803955,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 1, 1, 109, 112, 1, 0.5045871734619141, 0.5178571343421936,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 1, 859, 142, 127, 1, 0.5070422291755676, 0.4566929042339325,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 163, 728, 160, 135, 1, 0.5062500238418579, 0.4296296238899231,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 788, 691, 177, 145, 1, 0.508474588394165, 0.4206896424293518,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 431, 543, 195, 158, 1, 0.5076923370361328, 0.4177215099334717,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 216, 409, 213, 170, 1, 0.5070422291755676, 0.4176470637321472,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 1, 196, 232, 183, 1, 0.5043103694915772, 0.4153005480766296,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 501, 1, 248, 193, 1, 0.5040322542190552, 0.4145077764987946,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 330, 219, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0]
			]
			]
,			[
			"l0",
			24,
			false,
			1,
			0,
			false,
			6104898917460386,
			[
				["parkingPanic/images/star-sheet1.png", 409508, 315, 441, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 419, 441, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 523, 441, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 627, 441, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 731, 441, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 835, 441, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 106, 444, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 1, 446, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 210, 550, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 314, 552, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 418, 552, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 522, 552, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 626, 552, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 730, 552, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 315, 441, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 315, 441, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 315, 441, 102, 109, 1, 0.5686274766921997, 0.5321100950241089,[],[],0]
			]
			]
,			[
			"l1",
			24,
			false,
			1,
			0,
			false,
			2406284537534663,
			[
				["parkingPanic/images/star-sheet1.png", 409508, 333, 1, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 442, 1, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 551, 1, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 660, 1, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 769, 1, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 878, 1, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 224, 110, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 333, 110, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 442, 110, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 551, 110, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 660, 110, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 769, 110, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 878, 110, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 112, 113, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 1, 115, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 1, 115, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0]
			]
			]
,			[
			"l2",
			24,
			false,
			1,
			0,
			false,
			6215898321704102,
			[
				["parkingPanic/images/star-sheet1.png", 409508, 435, 219, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 540, 219, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 645, 219, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 750, 219, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 855, 219, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 110, 222, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 1, 224, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 215, 328, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 320, 330, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 425, 330, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 530, 330, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 635, 330, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 740, 330, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 845, 330, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 106, 333, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 1, 335, 103, 109, 1, 0.4757281541824341, 0.5321100950241089,[],[],0]
			]
			]
,			[
			"stopOff0",
			0,
			false,
			1,
			0,
			false,
			2926351689018072,
			[
				["parkingPanic/images/star-sheet0.png", 415125, 942, 921, 77, 80, 1, 0.4805194735527039, 0.362500011920929,[],[],0]
			]
			]
,			[
			"stopOff1",
			0,
			false,
			1,
			0,
			false,
			5639063367103692,
			[
				["parkingPanic/images/star-sheet1.png", 409508, 301, 761, 89, 81, 1, 0.5280898809432983, 0.3703703582286835,[],[],0]
			]
			]
,			[
			"stopOff2",
			0,
			false,
			1,
			0,
			false,
			7092717845962662,
			[
				["parkingPanic/images/star-sheet1.png", 409508, 939, 531, 77, 80, 1, 0.5324675440788269, 0.362500011920929,[],[],0]
			]
			]
,			[
			"stopOn0",
			0,
			false,
			1,
			0,
			false,
			9034678693732237,
			[
				["parkingPanic/images/star-sheet0.png", 415125, 942, 921, 77, 80, 1, 0.4805194735527039, 0.362500011920929,[],[],0]
			]
			]
,			[
			"stopOn1",
			0,
			false,
			1,
			0,
			false,
			5789351404263418,
			[
				["parkingPanic/images/star-sheet1.png", 409508, 301, 761, 89, 81, 1, 0.5280898809432983, 0.3703703582286835,[],[],0]
			]
			]
,			[
			"stopOn2",
			0,
			false,
			1,
			0,
			false,
			710475018214415,
			[
				["parkingPanic/images/star-sheet1.png", 409508, 939, 531, 77, 80, 1, 0.5324675440788269, 0.362500011920929,[],[],0]
			]
			]
,			[
			"stand",
			5,
			false,
			1,
			0,
			false,
			5973968336590962,
			[
				["parkingPanic/images/star-sheet1.png", 409508, 1, 758, 89, 81, 1, 0.5280898809432983, 0.3703703582286835,[],[],0]
			]
			]
,			[
			"standFade",
			60,
			false,
			1,
			0,
			false,
			3222759364004246,
			[
				["parkingPanic/images/star-sheet1.png", 409508, 221, 219, 107, 107, 1, 0.5233644843101502, 0.5233644843101502,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 660, 730, 103, 102, 2, 0.5242718458175659, 0.5,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 301, 663, 97, 96, 1, 0.5257731676101685, 0.46875,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 400, 663, 97, 96, 1, 0.5257731676101685, 0.46875,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 105, 555, 102, 102, 1, 0.4803921580314636, 0.4607843160629273,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 145, 865, 121, 128, 1, 0.4380165338516235, 0.4453125,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 660, 838, 136, 141, 1, 0.4411764740943909, 0.432624101638794,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 346, 703, 150, 154, 1, 0.4399999976158142, 0.4285714328289032,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 1, 553, 164, 167, 1, 0.4390243887901306, 0.4191616773605347,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 611, 196, 136, 157, 1, 0.5147058963775635, 0.4394904375076294,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 415, 196, 194, 192, 1, 0.438144326210022, 0.40625,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 628, 543, 158, 185, 1, 0.5126582384109497, 0.4378378391265869,[],[],0],
				["parkingPanic/images/star-sheet0.png", 415125, 235, 196, 178, 211, 1, 0.5056179761886597, 0.4407582879066467,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 392, 761, 89, 81, 1, 0.5280898809432983, 0.3703703582286835,[],[],0],
				["parkingPanic/images/star-sheet1.png", 409508, 483, 762, 89, 81, 1, 0.5056179761886597, 0.5061728358268738,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		9993569692571717,
		[],
		null
	]
,	[
		"t60",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5273723663863578,
			[
				["parkingPanic/images/placeholdertocheckscreen-sheet0.png", 192, 0, 0, 8, 8, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		6288011710990561,
		[],
		null
	]
,	[
		"t61",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1316562315338619,
			[
				["parkingPanic/images/winzone-sheet0.png", 114, 0, 0, 85, 85, 1, 0, 0,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		1098896046049093,
		[],
		null
	]
,	[
		"t62",
		cr.plugins_.Sprite,
		false,
		[4079087121371743],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6505902962187557,
			[
				["parkingPanic/images/spawnareacars-sheet0.png", 105, 0, 0, 10, 10, 1, 0.5, 0.5,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		6137046807380545,
		[],
		null
	]
,	[
		"t63",
		cr.plugins_.Sprite,
		false,
		[6429364259395734],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5324755934935602,
			[
				["parkingPanic/images/emptychess-sheet0.png", 113, 0, 0, 75, 75, 1, 0.5066666603088379, 0.5066666603088379,[],[],3]
			]
			]
		],
		[
		[
			"Flash",
			cr.behaviors.Flash,
			8237444002449857
		]
		],
		false,
		false,
		3486075117460374,
		[],
		null
	]
,	[
		"t64",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3966749387222004,
			[
				["parkingPanic/images/tile-sheet0.png", 188, 0, 0, 73, 73, 1, 0.5068492889404297, 0.5068492889404297,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		8984127657686506,
		[],
		null
	]
,	[
		"t65",
		cr.plugins_.Sprite,
		false,
		[706639242185606],
		0,
		0,
		null,
		[
			[
			"tuto1",
			5,
			false,
			1,
			0,
			false,
			5934544021074373,
			[
				["parkingPanic/images/deco-sheet0.png", 7842, 65, 1, 2, 2, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		3494522246818788,
		[],
		null
	]
,	[
		"t66",
		cr.plugins_.Sprite,
		false,
		[8257720798433592],
		0,
		0,
		null,
		[
			[
			"tuto1",
			0,
			false,
			1,
			0,
			false,
			6727750710551773,
			[
				["parkingPanic/images/deco-sheet0.png", 7842, 65, 1, 2, 2, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		241634170050483,
		[],
		null
	]
,	[
		"t67",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["parkingPanic/images/tiret.png", 220, 0],
		null,
		[
		],
		false,
		false,
		6531446045874358,
		[],
		null
	]
,	[
		"t68",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			9587735736563975,
			[
				["parkingPanic/images/dottab-sheet0.png", 103, 0, 0, 1, 1, 1, 1, 1,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		2559214857250402,
		[],
		null
	]
,	[
		"t69",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["parkingPanic/images/debug_resetscore.png", 117, 0],
		null,
		[
		],
		false,
		false,
		2625546005319177,
		[],
		null
	]
,	[
		"t70",
		cr.plugins_.Sprite,
		false,
		[1628914001884483],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5471449502444341,
			[
				["parkingPanic/images/rate_window-sheet0.png", 74269, 0, 0, 510, 399, 1, 0.5, 0.5012531280517578,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5347961859249166,
		[],
		null
	]
,	[
		"t71",
		cr.plugins_.Dictionary,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		1101155980495117,
		[],
		null
	]
,	[
		"t72",
		cr.plugins_.Audio,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		417313934155143,
		[],
		null
		,[0,0,0,1,1,600,600,10000,1,5000,1]
	]
,	[
		"t73",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			7967948226914402,
			[
				["parkingPanic/images/bonustime-sheet0.png", 465743, 1, 397, 636, 97, 1, 0, 0.5051546096801758,[],[],0],
				["parkingPanic/images/bonustime-sheet0.png", 465743, 1, 298, 663, 97, 1, 0, 0.5051546096801758,[],[],0],
				["parkingPanic/images/bonustime-sheet0.png", 465743, 1, 1, 930, 97, 1, 0, 0.5051546096801758,[],[],0],
				["parkingPanic/images/bonustime-sheet0.png", 465743, 1, 199, 734, 97, 1, 0, 0.5051546096801758,[],[],0],
				["parkingPanic/images/bonustime-sheet0.png", 465743, 1, 100, 735, 97, 1, 0, 0.5051546096801758,[],[],0],
				["parkingPanic/images/bonustime-sheet0.png", 465743, 666, 298, 308, 97, 1, 0, 0.5051546096801758,[],[],0],
				["parkingPanic/images/bonustime-sheet0.png", 465743, 1, 496, 633, 97, 1, 0, 0.5051546096801758,[],[],0],
				["parkingPanic/images/bonustime-sheet0.png", 465743, 1, 595, 513, 97, 1, 0, 0.5051546096801758,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		7538537824338029,
		[],
		null
	]
,	[
		"t74",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5358539635929848,
			[
				["parkingPanic/images/bestmedal-sheet0.png", 5112, 0, 0, 62, 62, 1, 0.5, 0.5,[],[-0.2967979907989502,-0.3189660012722015,0.006157994270324707,-0.4987684786319733,0.3017240166664124,-0.3115760087966919,0.3004930019378662,-0.01600998640060425,0.2487679719924927,0.2266010046005249,0.006157994270324707,0.1699510216712952,-0.2623150050640106,0.2524629831314087,-0.2992610037326813,-0.01600998640060425],0]
			]
			]
		],
		[
		],
		false,
		false,
		6964302167549843,
		[],
		null
	]
,	[
		"t75",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9757424758947576,
			[
				["parkingPanic/images/api_playtouch_v1_btnbackground-sheet0.png", 2353, 0, 0, 85, 85, 1, 0.5058823823928833, 0.5058823823928833,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4145798083408898,
		[],
		null
	]
,	[
		"t76",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			6425712300104914,
			[
				["parkingPanic/images/api_playtouch_v1_flagsdeck-sheet0.png", 6663, 1, 1, 60, 60, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/api_playtouch_v1_flagsdeck-sheet0.png", 6663, 63, 1, 60, 60, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/api_playtouch_v1_flagsdeck-sheet0.png", 6663, 1, 63, 60, 60, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/api_playtouch_v1_flagsdeck-sheet0.png", 6663, 63, 63, 60, 60, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/api_playtouch_v1_flagsdeck-sheet1.png", 6180, 1, 1, 60, 60, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/api_playtouch_v1_flagsdeck-sheet1.png", 6180, 63, 1, 60, 60, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/api_playtouch_v1_flagsdeck-sheet1.png", 6180, 1, 63, 60, 60, 1, 0.5, 0.5,[],[],0],
				["parkingPanic/images/api_playtouch_v1_flagsdeck-sheet1.png", 6180, 63, 63, 60, 60, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		9142163197944523,
		[],
		null
	]
,	[
		"t77",
		cr.plugins_.Sprite,
		false,
		[963227841643023,9184256868886504],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			6798652637886942,
			[
				["parkingPanic/images/api_playtouch_v1_masterbackground-sheet0.png", 26370, 0, 0, 812, 812, 1, 0.4963054060935974, 0.346059113740921,[["MoreGameBtn", 0.2721674740314484, 0.4802955687046051],["RateBtn", 0.7192118167877197, 0.4802955687046051],["rearR", 0.8411329984664917, 0.4827586114406586],["rearL", 0.1613300442695618, 0.4827586114406586],["logoPortrait", 0.4987684786319733, 0.3805418610572815],["logoBG1Portrait", 0.8054187297821045, 0.3805418610572815],["logoBG2Portrait", 0.1896551698446274, 0.3805418610572815],["L_MoreGameBtn", 0.8300492763519287, 0.3842364549636841],["L_RateBtn", 0.5935960412025452, 0.3842364549636841],["L_sound", 0.371921181678772, 0.3903940916061401],["L_i18n", 0.2032019644975662, 0.3903940916061401],["logoLandscape", 0.08374384045600891, 0.3903940916061401]],[],0],
				["parkingPanic/images/api_playtouch_v1_masterbackground-sheet1.png", 19149, 0, 0, 812, 812, 1, 0.4963054060935974, 0.346059113740921,[["MoreGameBtn", 0.2931034564971924, 0.5123152732849121],["RateBtn", 0.7118226885795593, 0.5123152732849121],["rearR", 0.8411329984664917, 0.4827586114406586],["rearL", 0.1588670015335083, 0.4827586114406586],["logoPortrait", 0.5, 0.3953202068805695],["logoBG1Portrait", 0.8103448152542114, 0.3953202068805695],["logoBG2Portrait", 0.1896551698446274, 0.3953202068805695]],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2947973312058454,
		[],
		null
	]
,	[
		"t78",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			4128490237081704,
			[
				["parkingPanic/images/api_playtouch_v1_moregamebtn-sheet0.png", 10984, 0, 0, 135, 135, 1, 0.5037037134170532, 0.5037037134170532,[],[-0.5037037134170532,-0.3111107349395752,0.4962962865829468,-0.3111107349395752,0.4962962865829468,0.2814812660217285,-0.5037037134170532,0.2814812660217285],0],
				["parkingPanic/images/api_playtouch_v1_moregamebtn-sheet1.png", 11427, 0, 0, 135, 135, 1, 0.5037037134170532, 0.5037037134170532,[],[-0.5037037134170532,-0.3111107349395752,0.4962962865829468,-0.3111107349395752,0.4962962865829468,0.2814812660217285,-0.5037037134170532,0.2814812660217285],0]
			]
			]
		],
		[
		],
		false,
		false,
		9638347087732185,
		[],
		null
	]
,	[
		"t79",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			6790039612179933,
			[
				["parkingPanic/images/api_playtouch_v1_ratebtn-sheet0.png", 13526, 0, 0, 135, 135, 1, 0.5037037134170532, 0.5037037134170532,[],[-0.5037037134170532,-0.3259257078170776,0.4962962865829468,-0.3259257078170776,0.4962962865829468,0.2888882756233215,-0.5037037134170532,0.2888882756233215],0],
				["parkingPanic/images/api_playtouch_v1_ratebtn-sheet1.png", 13319, 0, 0, 135, 135, 1, 0.5037037134170532, 0.5037037134170532,[],[-0.5037037134170532,-0.3259257078170776,0.4962962865829468,-0.3259257078170776,0.4962962865829468,0.2888882756233215,-0.5037037134170532,0.2888882756233215],0]
			]
			]
		],
		[
		],
		false,
		false,
		7646347980660001,
		[],
		null
	]
,	[
		"t80",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3790405379100293,
			[
				["parkingPanic/images/api_playtouch_v1_logo-sheet0.png", 2601, 0, 0, 80, 80, 1, 0.5, 0.5,[],[-0.4896906912326813,-0.1248230040073395,0.4896910190582275,-0.1248230040073395,0.4896910190582275,0.1248229742050171,-0.4896906912326813,0.1248229742050171],0]
			]
			]
		],
		[
		],
		false,
		false,
		3168874370512496,
		[],
		null
	]
,	[
		"t81",
		cr.plugins_.Sprite,
		false,
		[2432402970830727],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4242093540539639,
			[
				["parkingPanic/images/api_playtouch_v1_rearbackground-sheet0.png", 2420, 0, 0, 140, 140, 1, 1, 0.5,[["Imagepoint 1", 0.3642857074737549, 0.5071428418159485]],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5263080064939314,
		[],
		null
	]
,	[
		"t82",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			0,
			false,
			1,
			0,
			false,
			2240198173088656,
			[
				["parkingPanic/images/api_playtouch_v1_soundbtn-sheet0.png", 3260, 0, 0, 54, 54, 1, 0.5, 0.5185185074806213,[],[],0],
				["parkingPanic/images/api_playtouch_v1_soundbtn-sheet1.png", 3112, 0, 0, 54, 54, 1, 0.5, 0.5185185074806213,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		6832927962916489,
		[],
		null
	]
,	[
		"t83",
		cr.plugins_.Sprite,
		true,
		[1628914001884483],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7504796669242237,
		[],
		null
	]
,	[
		"t84",
		cr.plugins_.TiledBg,
		true,
		[3909188124215788],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2292769969775719,
		[],
		null
	]
,	[
		"t85",
		cr.plugins_.Spritefont2,
		true,
		[1663090904888285],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7906694031636493,
		[],
		null
	]
,	[
		"t86",
		cr.plugins_.HTML_iFrame_Pode,
		true,
		[1222007730496653],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2489895114348177,
		[],
		null
	]
,	[
		"t87",
		cr.plugins_.Sprite,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3518174122385512,
		[],
		null
	]
	],
	[
		[83,2,3,8,6,53,37,38,35,1,58,4,0,19,70,7,5,59]
,		[84,13,14]
,		[85,21]
,		[86,33,34]
,		[87,75,76,80,77,78,79,81,82]
	],
	[
	[
		"Splash",
		510,
		907,
		true,
		"SplashScript",
		1280290498594942,
		[
		[
			"BG",
			0,
			1053592432289137,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-155.4999694824219, 453.4999694824219, 0, 842.2968139648438, 913.6779174804688, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				1,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[665.5, 452.5, 0, 840, 913, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				109,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[569, 79, 0, 1024, 160, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				12,
				14,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-130.5, 929.5, 0, 10, 10, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				62,
				322,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[-51, -30.5, 0, 10, 10, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				62,
				323,
				[
					[-1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[-47.5, 448.5, 0, 8, 8, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				60,
				324,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Butt",
			1,
			8138835821928994,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[269, 656, 0, 256, 147, 0, 0, 1, 0.5, 0.5034013390541077, 0, 0, []],
				0,
				0,
				[
					[3]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[393.0727844238281, 85.90261840820313, 0, 1.610512375831604, 1.610512375831604, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				1,
				4,
				[
					[3]
				],
				[
				[
					1,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Overlays",
			2,
			6574730054560444,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[255, 339, 0, 510, 305, 0, 0, 1, 0.5, 0.5016393661499023, 0, 0, []],
				10,
				15,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 0",
			3,
			5149779599235521,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-754, 407.5, 0, 2018, 92, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				2,
				[
					[0]
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[255, 453, 0, 164, 65, 0, 0, 1, 0.5, 0.5076923370361328, 0, 0, []],
				19,
				3,
				[
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"victory",
					0,
					0
				]
			]
,			[
				[122, 876, 0, 241, 57, 0, 0, 1, 0.4937759339809418, 0.5087719559669495, 0, 0, []],
				19,
				161,
				[
					[3],
					[1]
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"playtouch",
					0,
					0
				]
			]
,			[
				[0, 784.6810302734375, 0, 510, 121, 0, 0, 1, 0, 0, 0, 0, []],
				33,
				125,
				[
					[0]
				],
				[
				[
					0,
					1,
					1,
					0,
					1
				]
				],
				[
					1,
					"",
					"border:0px;",
					"my_iframe",
					2
				]
			]
,			[
				[0, 389, 0, 907, 121, 0, 0, 1, 0, 0, 0, 0, []],
				33,
				200,
				[
					[1]
				],
				[
				[
					0,
					1,
					1,
					0,
					1
				]
				],
				[
					1,
					"",
					"border:0px;",
					"my_iframe",
					2
				]
			]
,			[
				[-555.5, 209, 0, 2018, 92, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				201,
				[
					[1]
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[453.5, 255, 0, 164, 65, 0, 0, 1, 0.5, 0.5076923370361328, 0, 0, []],
				19,
				202,
				[
					[1],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"victory",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"rate",
			4,
			3237183009042569,
			false,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-576, -6, 0, 2138, 916, 0, 0, 1, 0, 0, 0, 0, []],
				17,
				16,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[255, 454, 0, 319.7523803710938, 250.1592102050781, 0, 0, 1, 0.5, 0.5012531280517578, 0, 0, []],
				70,
				9,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[332.5, 536.5, 0, 154, 71, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				192,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[177.5, 536, 0, 152, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				190,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[453.4999694824219, 255.3134918212891, 0, 319.7523803710938, 250.1592102050781, 0, 0, 1, 0.5, 0.5012531280517578, 0, 0, []],
				70,
				204,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[530.5, 338.3134765625, 0, 154, 71, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				205,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[375.4999694824219, 337.3134765625, 0, 152, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				206,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
			],
			[			]
		]
,		[
			"loading",
			5,
			654968648537566,
			false,
			[0, 0, 0],
			false,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[255, 461, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				183,
				[
					[0]
				],
				[
				[
					1,
					1,
					360,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[453.5, 255, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				203,
				[
					[1]
				],
				[
				[
					1,
					1,
					360,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"APIPlaytouch",
			6,
			6086113657512097,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-1714.5, -1288.5, 0, 140, 140, 0, 0, 1, 1, 0.5, 0, 0, []],
				81,
				340,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[-2132.5, -1215.5, 0, 324, 324, 0, 0, 1, 0.4963054060935974, 0.346059113740921, 0, 0, []],
				77,
				342,
				[
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[-1800.5, -778.5, 0, 41.80730056762695, 41.80730056762695, 0, 0, 1, 0.5, 0.5185185074806213, 0, 0, []],
				82,
				345,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-1795.5, -980.5, 0, 60, 60, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				76,
				346,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-1802.5, -679.5, 0, 135, 135, 0, 0, 1, 0.5037037134170532, 0.5037037134170532, 0, 0, []],
				79,
				347,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-1798.5, -574.5, 0, 135, 135, 0, 0, 1, 0.5037037134170532, 0.5037037134170532, 0, 0, []],
				78,
				348,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-1802.5, -883.5, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				80,
				349,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[-1785.5, -1071.5, 0, 85, 85, 0, 0, 1, 0.5058823823928833, 0.5058823823928833, 0, 0, []],
				75,
				350,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
			[
				null,
				29,
				10,
				[
				],
				[
				],
				[
					"cocooncaller.js"
				]
			]
,			[
				null,
				44,
				18,
				[
				],
				[
				],
				[
					","
				]
			]
,			[
				null,
				40,
				103,
				[
				],
				[
				],
				[
					5,
					3,
					1
				]
			]
,			[
				null,
				31,
				107,
				[
				],
				[
				],
				[
				]
			]
,			[
				null,
				45,
				112,
				[
				],
				[
				],
				[
					13,
					13,
					1
				]
			]
,			[
				null,
				46,
				106,
				[
				],
				[
				],
				[
					100,
					1,
					1
				]
			]
,			[
				null,
				47,
				145,
				[
				],
				[
				],
				[
					11,
					3,
					1
				]
			]
,			[
				null,
				41,
				159,
				[
				],
				[
				],
				[
					","
				]
			]
,			[
				null,
				42,
				185,
				[
				],
				[
				],
				[
				]
			]
,			[
				null,
				71,
				339,
				[
				],
				[
				],
				[
				]
			]
		],
		[]
	]
,	[
		"LevelSelect",
		510,
		907,
		false,
		"LevelSelectScript",
		6917873429696928,
		[
		[
			"BG",
			0,
			8470333797642874,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-122, 441, 0, 8, 8, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				60,
				325,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					0
				]
			]
,			[
				[-46, -31, 0, 10, 10, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				62,
				326,
				[
					[-1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[-122, 942, 0, 10, 10, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				62,
				327,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Butt",
			1,
			952560944111497,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[82, 753.5, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				17,
				[
					[0],
					["previous"]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 754, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				41,
				[
					[0],
					["next"]
				],
				[
				],
				[
					0,
					"Default",
					1,
					0
				]
			]
,			[
				[-1991, -693, 0, 254, 254, 0, 0, 1, 1, 1, 0, 0, []],
				36,
				104,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					0
				]
			]
,			[
				[639, 344, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				229,
				[
					[1],
					["previous"]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[857, 344, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				230,
				[
					[1],
					["next"]
				],
				[
				],
				[
					0,
					"Default",
					1,
					0
				]
			]
			],
			[			]
		]
,		[
			"lvlStars",
			2,
			5421274237068839,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[82, 94, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				80,
				[
					[0],
					[1],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 94, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				81,
				[
					[0],
					[4],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 94, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				82,
				[
					[0],
					[2],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 94, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				83,
				[
					[0],
					[3],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 236, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				84,
				[
					[0],
					[5],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 236, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				85,
				[
					[0],
					[8],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 236, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				86,
				[
					[0],
					[6],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 236, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				87,
				[
					[0],
					[7],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 377, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				88,
				[
					[0],
					[9],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 377, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				89,
				[
					[0],
					[12],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 377, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				90,
				[
					[0],
					[10],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 377, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				91,
				[
					[0],
					[11],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 519, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				92,
				[
					[0],
					[13],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 519, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				93,
				[
					[0],
					[16],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 519, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				94,
				[
					[0],
					[14],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 519, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				95,
				[
					[0],
					[15],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 660, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				96,
				[
					[0],
					[17],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 660, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				97,
				[
					[0],
					[20],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 660, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				98,
				[
					[0],
					[18],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 660, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				99,
				[
					[0],
					[19],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[63, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				231,
				[
					[1],
					[1],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				232,
				[
					[1],
					[4],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				233,
				[
					[1],
					[2],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				234,
				[
					[1],
					[3],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				235,
				[
					[1],
					[5],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 171, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				236,
				[
					[1],
					[8],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[63, 171, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				237,
				[
					[1],
					[6],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 171, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				238,
				[
					[1],
					[7],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 171, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				239,
				[
					[1],
					[9],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 265, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				240,
				[
					[1],
					[12],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 171, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				241,
				[
					[1],
					[10],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[63, 265, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				242,
				[
					[1],
					[11],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 265, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				243,
				[
					[1],
					[13],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[63, 359, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				244,
				[
					[1],
					[16],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 265, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				245,
				[
					[1],
					[14],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 265, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				246,
				[
					[1],
					[15],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 359, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				247,
				[
					[1],
					[17],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 359, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				248,
				[
					[1],
					[20],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 359, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				249,
				[
					[1],
					[18],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 359, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				250,
				[
					[1],
					[19],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"lvlButt",
			3,
			8344783339749386,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[82, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				19,
				[
					[0],
					[1],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				22,
				[
					[0],
					[4],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				23,
				[
					[0],
					[3],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				24,
				[
					[0],
					[2],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 219, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				26,
				[
					[0],
					[5],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 219, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				27,
				[
					[0],
					[8],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 219, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				28,
				[
					[0],
					[7],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 219, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				29,
				[
					[0],
					[6],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 360, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				25,
				[
					[0],
					[9],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 360, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				30,
				[
					[0],
					[12],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 360, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				31,
				[
					[0],
					[11],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 360, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				32,
				[
					[0],
					[10],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 502, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				33,
				[
					[0],
					[13],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 502, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				34,
				[
					[0],
					[16],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 502, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				35,
				[
					[0],
					[15],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 502, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				36,
				[
					[0],
					[14],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 643, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				37,
				[
					[0],
					[17],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 643, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				38,
				[
					[0],
					[20],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 643, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				39,
				[
					[0],
					[19],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 643, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				40,
				[
					[0],
					[18],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[63, 60, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				251,
				[
					[1],
					[1],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 60, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				252,
				[
					[1],
					[4],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 60, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				253,
				[
					[1],
					[3],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 60, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				254,
				[
					[1],
					[2],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 60, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				255,
				[
					[1],
					[5],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 154, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				256,
				[
					[1],
					[8],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 154, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				257,
				[
					[1],
					[7],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[63, 154, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				258,
				[
					[1],
					[6],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 154, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				259,
				[
					[1],
					[9],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 248, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				260,
				[
					[1],
					[12],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[63, 248, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				261,
				[
					[1],
					[11],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 154, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				262,
				[
					[1],
					[10],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 248, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				263,
				[
					[1],
					[13],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[63, 342, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				264,
				[
					[1],
					[16],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 248, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				265,
				[
					[1],
					[15],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 248, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				266,
				[
					[1],
					[14],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 342, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				267,
				[
					[1],
					[17],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 342, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				268,
				[
					[1],
					[20],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 342, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				269,
				[
					[1],
					[19],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 342, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				270,
				[
					[1],
					[18],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"lvlNumber",
			4,
			7175925895068132,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[435.568115234375, 77.56812286376953, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				21,
				[
					[0],
					[4],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[82.568115234375, 77.56812286376953, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				42,
				[
					[0],
					[1],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"21",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[200.568115234375, 77.56812286376953, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				43,
				[
					[0],
					[2],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"2",
					0.8,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[317.568115234375, 77.56812286376953, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				44,
				[
					[0],
					[3],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"3",
					0.8,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[435.568115234375, 219.568115234375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				45,
				[
					[0],
					[8],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[82.568115234375, 219.568115234375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				46,
				[
					[0],
					[5],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[200.568115234375, 219.568115234375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				47,
				[
					[0],
					[6],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[317.568115234375, 219.568115234375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				48,
				[
					[0],
					[7],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[435.568115234375, 360.5681457519531, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				49,
				[
					[0],
					[12],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[82.568115234375, 360.5681457519531, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				50,
				[
					[0],
					[9],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[200.568115234375, 360.5681457519531, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				51,
				[
					[0],
					[10],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[317.568115234375, 360.5681457519531, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				52,
				[
					[0],
					[11],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[435.568115234375, 502.5681457519531, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				53,
				[
					[0],
					[16],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[82.568115234375, 502.5681457519531, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				54,
				[
					[0],
					[13],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[200.568115234375, 502.5681457519531, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				55,
				[
					[0],
					[14],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[317.568115234375, 502.5681457519531, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				56,
				[
					[0],
					[15],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[435.568115234375, 643.568115234375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				57,
				[
					[0],
					[20],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[82.568115234375, 643.568115234375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				58,
				[
					[0],
					[17],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[200.568115234375, 643.568115234375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				59,
				[
					[0],
					[18],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[317.568115234375, 643.568115234375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				60,
				[
					[0],
					[19],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[255, 755, 0, 296, 48, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				117,
				[
					[0],
					[0],
					[-2000],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"1 / 25",
					0.3,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[415.27490234375, 59.87103271484375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				271,
				[
					[1],
					[4],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[62.27491760253906, 59.87103271484375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				272,
				[
					[1],
					[1],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"21",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[180.2749176025391, 59.87103271484375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				273,
				[
					[1],
					[2],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"2",
					0.8,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[297.27490234375, 59.87103271484375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				274,
				[
					[1],
					[3],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"3",
					0.8,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[298.27490234375, 153.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				275,
				[
					[1],
					[8],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[533.27490234375, 58.87103271484375, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				276,
				[
					[1],
					[5],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[63.27491760253906, 153.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				277,
				[
					[1],
					[6],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[181.2749176025391, 153.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				278,
				[
					[1],
					[7],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[181.2749176025391, 247.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				279,
				[
					[1],
					[12],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[416.27490234375, 153.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				280,
				[
					[1],
					[9],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[533.27490234375, 153.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				281,
				[
					[1],
					[10],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[63.27491760253906, 247.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				282,
				[
					[1],
					[11],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[63.27491760253906, 341.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				283,
				[
					[1],
					[16],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[298.27490234375, 247.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				284,
				[
					[1],
					[13],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[416.27490234375, 247.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				285,
				[
					[1],
					[14],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[533.27490234375, 247.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				286,
				[
					[1],
					[15],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[533.27490234375, 341.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				287,
				[
					[1],
					[20],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[181.2749176025391, 341.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				288,
				[
					[1],
					[17],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[298.27490234375, 341.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				289,
				[
					[1],
					[18],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[416.27490234375, 341.8710327148438, 0, 77.13624572753906, 77.13624572753906, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				290,
				[
					[1],
					[19],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"20",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[748.27490234375, 342.8710327148438, 0, 296, 48, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				291,
				[
					[1],
					[0],
					[-2000],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"1 / 25",
					0.3,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[1, 390, 0, 907, 121, 0, 0, 1, 0, 0, 0, 0, []],
				33,
				310,
				[
					[1]
				],
				[
				[
					0,
					1,
					1,
					0,
					1
				]
				],
				[
					1,
					"",
					"border:0px;",
					"my_iframe",
					2
				]
			]
			],
			[			]
		]
,		[
			"lvlLock",
			5,
			830135658594897,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[82, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				20,
				[
					[0],
					[1],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				61,
				[
					[0],
					[4],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				62,
				[
					[0],
					[2],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 77, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				63,
				[
					[0],
					[3],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 219, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				64,
				[
					[0],
					[5],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 219, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				65,
				[
					[0],
					[8],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 219, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				66,
				[
					[0],
					[6],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 219, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				67,
				[
					[0],
					[7],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 360, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				68,
				[
					[0],
					[9],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 360, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				69,
				[
					[0],
					[12],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 360, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				70,
				[
					[0],
					[10],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 360, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				71,
				[
					[0],
					[11],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 502, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				72,
				[
					[0],
					[13],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 502, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				73,
				[
					[0],
					[16],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 502, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				74,
				[
					[0],
					[14],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 502, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				75,
				[
					[0],
					[15],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[82, 643, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				76,
				[
					[0],
					[17],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[435, 643, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				77,
				[
					[0],
					[20],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[200, 643, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				78,
				[
					[0],
					[18],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[317, 643, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				79,
				[
					[0],
					[19],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[749, 215, 0, 120, 120, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				114,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[63, 59, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				209,
				[
					[1],
					[1],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 59, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				210,
				[
					[1],
					[4],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 59, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				211,
				[
					[1],
					[2],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 59, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				212,
				[
					[1],
					[3],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 59, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				213,
				[
					[1],
					[5],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 153, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				214,
				[
					[1],
					[8],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[63, 153, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				215,
				[
					[1],
					[6],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 153, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				216,
				[
					[1],
					[7],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 153, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				217,
				[
					[1],
					[9],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 247, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				218,
				[
					[1],
					[12],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 153, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				219,
				[
					[1],
					[10],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[63, 247, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				220,
				[
					[1],
					[11],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 247, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				221,
				[
					[1],
					[13],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[63, 341, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				222,
				[
					[1],
					[16],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 247, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				223,
				[
					[1],
					[14],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 247, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				224,
				[
					[1],
					[15],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[181, 341, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				225,
				[
					[1],
					[17],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[533, 341, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				226,
				[
					[1],
					[20],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[298, 341, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				227,
				[
					[1],
					[18],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[416, 341, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				228,
				[
					[1],
					[19],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Overlays",
			6,
			7250843570226766,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-754, 407.5, 0, 2018, 92, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				11,
				[
					[0]
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[258, 454, 0, 164, 65, 0, 0, 1, 0.5, 0.5076923370361328, 0, 0, []],
				19,
				12,
				[
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"victory",
					0,
					0
				]
			]
,			[
				[-555.5, 209, 0, 2018, 92, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				207,
				[
					[1]
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[456.5, 255, 0, 164, 65, 0, 0, 1, 0.5, 0.5076923370361328, 0, 0, []],
				19,
				208,
				[
					[1],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"victory",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"APIPlaytouch",
			7,
			6294002130408634,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"GameMain",
		510,
		907,
		true,
		"GameMainScript",
		6826661155644332,
		[
		[
			"BG",
			0,
			8123145777269789,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-123, 935, 0, 10, 10, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				62,
				113,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[-49, -28, 0, 10, 10, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				62,
				311,
				[
					[-1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[-35, 183, 0, 580, 35, 0, 0, 1, 0, 0, 0, 0, []],
				17,
				312,
				[
				],
				[
				],
				[
					1,
					0
				]
			]
,			[
				[-13, 173, 0, 35, 580, 0, 0, 1, 0, 0, 0, 0, []],
				17,
				313,
				[
				],
				[
				],
				[
					1,
					0
				]
			]
,			[
				[-20, 688, 0, 580, 35, 0, 0, 1, 0, 0, 0, 0, []],
				17,
				314,
				[
				],
				[
				],
				[
					1,
					0
				]
			]
,			[
				[481, 169, 0, 35, 580, 0, 0, 1, 0, 0, 0, 0, []],
				17,
				315,
				[
				],
				[
				],
				[
					1,
					0
				]
			]
,			[
				[461, 399, 0, 26, 24, 0, 0, 1, 0, 0, 0, 0, []],
				61,
				316,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-710, -497, 0, 66.17646789550781, 66.17646789550781, 0, 0, 1, 0.5066666603088379, 0.5066666603088379, 0, 0, []],
				63,
				317,
				[
					[0]
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-830, -393, 0, 150, 75, 0, 0, 1, 0.753333330154419, 0.5066666603088379, 0, 0, []],
				57,
				318,
				[
					[200]
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
					1,
					0,
					5,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"subGrid",
			1,
			1806671943762803,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-824, -584, 0, 75, 75, 0, 0, 1, 0.5068492889404297, 0.5068492889404297, 0, 0, []],
				64,
				319,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"paral2",
			2,
			9941272272085132,
			true,
			[255, 255, 255],
			true,
			0,
			0.1500000059604645,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"paral1",
			3,
			8359534810982602,
			true,
			[255, 255, 255],
			true,
			0,
			0.800000011920929,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"platforms",
			4,
			7365960483262967,
			true,
			[255, 255, 255],
			true,
			0,
			1,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-407, -371, 0, 98, 33, 0, 0, 1, 0, 0, 0, 0, []],
				49,
				143,
				[
				],
				[
				],
				[
					1,
					0
				]
			]
			],
			[			]
		]
,		[
			"explosion",
			5,
			1568397701987464,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-632, -404, 0, 150, 70, 0, 0, 1, 0.753333330154419, 0.5, 0, 0, []],
				56,
				320,
				[
					[0],
					[1],
					[0],
					[0],
					[-1]
				],
				[
				[
					1
				],
				[
					400,
					100,
					0,
					0,
					1,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-62, 448, 0, 8, 8, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				60,
				321,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"trigger",
			6,
			945189406427156,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-673, -306, 0, 59, 76, 0, 0, 1, 0.508474588394165, 0.4078947305679321, 0, 0, []],
				55,
				181,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"explosions",
			7,
			3806353071106913,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[23.7189998626709, 863.947021484375, 0, 378, 25.48900032043457, 0, 0, 1, 0, 0, 0, 0, []],
				52,
				108,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[258, 808, 0, 210.6130065917969, 36.00400161743164, 0, 0, 1, 0, 0, 0, 0, []],
				21,
				144,
				[
					[3],
					[0],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					": x s",
					0.7,
					0,
					0,
					1,
					0,
					0,
					-11,
					0
				]
			]
,			[
				[461, 50, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				13,
				[
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[24.85499954223633, 866.8159790039063, 0, 387.3076477050781, 35.11596298217773, 0, 0, 1, 0.01568627543747425, 0.2363636344671249, 0, 0, []],
				51,
				100,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					0
				]
			]
,			[
				[-674, -307, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				179,
				[
					[3],
					[-999],
					[1212],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"0",
					0.3,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[-678, -228, 0, 39.08985137939453, 40.35081481933594, 0, 0, 1, 0.4838709533214569, 0.875, 0, 0, []],
				54,
				172,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					0
				]
			]
,			[
				[-707, -426, 0, 88, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				123,
				[
					[3],
					[-99],
					[1212],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"0",
					0.3,
					0,
					2,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[21, 827, 0, 232.2117919921875, 35.41594696044922, 0, 0, 1, 0, 0.5051546096801758, 0, 0, []],
				73,
				343,
				[
				],
				[
				],
				[
					0,
					"default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"pauseOverlay",
			8,
			7192210310799902,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-755, 235.5, 0, 2029, 436, 0, 0, 1, 0, 0, 0, 0, []],
				14,
				120,
				[
					[0]
				],
				[
				[
					0,
					0,
					1,
					0,
					0
				]
				],
				[
					0,
					0
				]
			]
,			[
				[253, 284, 0, 238, 65, 0, 0, 1, 0.5, 0.5076923370361328, 0, 0, []],
				19,
				156,
				[
					[0],
					[1]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"pause",
					0,
					0
				]
			]
,			[
				[244.7380065917969, 613.5, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				146,
				[
					[0]
				],
				[
				[
					0,
					1,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[102.7379989624023, 613.5, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				147,
				[
					[0]
				],
				[
				[
					0,
					1,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[150.738037109375, 402.5, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				148,
				[
					[0],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[150.738037109375, 507.5, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				149,
				[
					[0],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[190.738037109375, 507.5, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				150,
				[
					[0],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[108.738037109375, 507.5, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				151,
				[
					[0],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[129.738037109375, 454.5, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				152,
				[
					[0],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[170.738037109375, 454.5, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				153,
				[
					[0],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[390.7380065917969, 613.5, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				157,
				[
					[0],
					["next"]
				],
				[
				],
				[
					0,
					"Default",
					1,
					0
				]
			]
,			[
				[127.4999465942383, 163.875, 0, 2, 2, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				1,
				158,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[267.5, 408, 0, 292, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				121,
				[
					[0],
					[1],
					[0],
					[1],
					["pause"]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"1 000 000",
					0.7,
					0,
					2,
					1,
					1,
					1,
					-6,
					0
				]
			]
,			[
				[268, 462, 0, 292, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				154,
				[
					[0],
					[1],
					[1],
					[1],
					["pause"]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"1 000 000",
					0.7,
					0,
					2,
					1,
					1,
					1,
					-6,
					0
				]
			]
,			[
				[268, 515, 0, 292, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				155,
				[
					[0],
					[1],
					[2],
					[1],
					["pause"]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"1 000 000",
					0.7,
					0,
					2,
					1,
					1,
					1,
					-6,
					0
				]
			]
,			[
				[382.4999389648438, 160.875, 0, 161.75, 161.75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				174,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-561, 37, 0, 2029, 436, 0, 0, 1, 0, 0, 0, 0, []],
				14,
				294,
				[
					[1]
				],
				[
				[
					0,
					0,
					1,
					0,
					0
				]
				],
				[
					0,
					0
				]
			]
,			[
				[447, 86, 0, 238, 65, 0, 0, 1, 0.5, 0.5076923370361328, 0, 0, []],
				19,
				295,
				[
					[1],
					[1]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"pause",
					0,
					0
				]
			]
,			[
				[131, 318.5, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				296,
				[
					[1]
				],
				[
				[
					0,
					1,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[131, 201.5, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				297,
				[
					[1]
				],
				[
				[
					0,
					1,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[345, 204, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				298,
				[
					[1],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[345, 309, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				299,
				[
					[1],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[385, 309, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				300,
				[
					[1],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[303, 309, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				301,
				[
					[1],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[324, 256, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				302,
				[
					[1],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[365, 256, 0, 42.38095092773438, 38.57142639160156, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				303,
				[
					[1],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stand",
					0,
					0
				]
			]
,			[
				[774, 255, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				304,
				[
					[1],
					["next"]
				],
				[
				],
				[
					0,
					"Default",
					1,
					0
				]
			]
,			[
				[461, 210, 0, 292, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				305,
				[
					[1],
					[1],
					[0],
					[1],
					["pause"]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"1 000 000",
					0.7,
					0,
					2,
					1,
					1,
					1,
					-6,
					0
				]
			]
,			[
				[462, 264, 0, 292, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				306,
				[
					[1],
					[1],
					[1],
					[1],
					["pause"]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"1 000 000",
					0.7,
					0,
					2,
					1,
					1,
					1,
					-6,
					0
				]
			]
,			[
				[462, 317, 0, 292, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				307,
				[
					[1],
					[1],
					[2],
					[1],
					["pause"]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"1 000 000",
					0.7,
					0,
					2,
					1,
					1,
					1,
					-6,
					0
				]
			]
,			[
				[97, 99, 0, 2, 2, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				1,
				308,
				[
					[1]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[808, 99, 0, 161.75, 161.75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				309,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"overlays",
			9,
			8502933838243718,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-754, 407.5, 0, 2018, 92, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				128,
				[
					[0]
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[255, 454, 0, 164, 65, 0, 0, 1, 0.5, 0.5076923370361328, 0, 0, []],
				19,
				129,
				[
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"victory",
					0,
					0
				]
			]
,			[
				[431, -291, 0, 254, 254, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				48,
				130,
				[
				],
				[
				[
					1,
					0,
					0.5,
					0.25,
					1
				]
				],
				[
					0,
					"Default",
					3,
					0
				]
			]
,			[
				[-555.5, 209, 0, 2018, 92, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				292,
				[
					[1]
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[453.5, 256, 0, 164, 65, 0, 0, 1, 0.5, 0.5076923370361328, 0, 0, []],
				19,
				293,
				[
					[1],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"victory",
					0,
					0
				]
			]
,			[
				[35, 875, 0, 50, 50, 0, 0, 1, 0.5233644843101502, 0.5233644843101502, 0, 0, []],
				59,
				330,
				[
					[0],
					[0],
					["timer"]
				],
				[
				],
				[
					0,
					"l1",
					0,
					0
				]
			]
,			[
				[35, 875, 0, 50, 50, 0, 0, 1, 0.5233644843101502, 0.5233644843101502, 0, 0, []],
				59,
				331,
				[
					[0],
					[1],
					["timer"]
				],
				[
				],
				[
					0,
					"l1",
					0,
					0
				]
			]
,			[
				[35, 875, 0, 50, 50, 0, 0, 1, 0.5233644843101502, 0.5233644843101502, 0, 0, []],
				59,
				332,
				[
					[0],
					[2],
					["timer"]
				],
				[
				],
				[
					0,
					"l1",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"APIPlaytouch",
			10,
			9629334516143936,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"inter",
			11,
			2363339355096633,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-577, 0, 0, 2454, 1061, 0, 0, 1, 0, 0, 0, 0, []],
				17,
				333,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[-16, -32, 0, -32, -25, 0, 0, 1, 0, 0, 0, 0, []],
				16,
				334,
				[
				],
				[
				],
				[
					1,
					0
				]
			]
,			[
				[126, 51, 0, 656, 417, 0, 0, 1, 0, 0, 0, 0, []],
				34,
				335,
				[
					[1]
				],
				[
				[
					0,
					0,
					1,
					0,
					1
				]
				],
				[
					1,
					"",
					"border:0px;",
					"my_inters",
					2
				]
			]
,			[
				[-1, 259, 0, 126, 126, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				6,
				336,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-1, 240, 0, 510, 435, 0, 0, 1, 0, 0, 0, 0, []],
				34,
				337,
				[
					[0]
				],
				[
				[
					0,
					0,
					1,
					0,
					1
				]
				],
				[
					1,
					"",
					"border:0px;",
					"my_inters",
					2
				]
			]
,			[
				[191, 209, 0, 126, 126, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				6,
				338,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
			[
				null,
				23,
				328,
				[
				],
				[
				],
				[
					6,
					6
				]
			]
,			[
				null,
				24,
				329,
				[
				],
				[
				],
				[
					0,
					65,
					267,
					75,
					75
				]
			]
		],
		[]
	]
,	[
		"GameOver",
		510,
		907,
		false,
		"GameOverScript",
		1726186851589204,
		[
		[
			"BG",
			0,
			8789702328912364,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 0",
			1,
			2733067527950769,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			5245270480274264,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			6880408730612549,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 4",
			4,
			9149982876308753,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 5",
			5,
			4577319277389679,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-762, 235.5, 0, 2034, 436, 0, 0, 1, 0, 0, 0, 0, []],
				14,
				175,
				[
					[0]
				],
				[
				[
					0,
					0,
					1,
					0,
					0
				]
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 6",
			6,
			1297370610693317,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-563.5, 37, 0, 2034, 436, 0, 0, 1, 0, 0, 0, 0, []],
				14,
				136,
				[
					[1]
				],
				[
				[
					0,
					0,
					1,
					0,
					0
				]
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 7",
			7,
			5991613040856981,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 8",
			8,
			8214101781055038,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 1",
			9,
			9875562257535415,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[1445, -672, 0, 62, 62, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				74,
				344,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"overlaysP",
			10,
			8176583917247391,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[253, 563, 0, 309, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				160,
				[
					[0],
					[0],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"",
					0.3,
					0,
					1,
					1,
					1,
					0,
					-25,
					0
				]
			]
,			[
				[253, 284, 0, 339, 65, 0, 0, 1, 0.501474916934967, 0.5076923370361328, 0, 0, []],
				19,
				137,
				[
					[0],
					[1]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"score",
					0,
					0
				]
			]
,			[
				[118.6949996948242, 407, 0, 93.18192291259766, 96.8123779296875, 0, -0.2130657732486725, 1, 0.4805194735527039, 0.362500011920929, 0, 0, []],
				59,
				133,
				[
					[0],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stopOff0",
					0,
					0
				]
			]
,			[
				[255.3849945068359, 381, 0, 107.7037811279297, 98.02254486083984, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				134,
				[
					[0],
					[1],
					[""]
				],
				[
				],
				[
					0,
					"stopOff1",
					0,
					0
				]
			]
,			[
				[389.6950073242188, 407, 0, 93.18192291259766, 96.81238555908203, 0, 0.2268927991390228, 1, 0.5324675440788269, 0.362500011920929, 0, 0, []],
				59,
				135,
				[
					[0],
					[2],
					[""]
				],
				[
				],
				[
					0,
					"stopOff2",
					0,
					0
				]
			]
,			[
				[254.9999847412109, 480.5, 0, 126, 126, 0, 0, 1, 0.5079365372657776, 0.5555555820465088, 0, 0, []],
				58,
				138,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[255, 618, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				139,
				[
					[0]
				],
				[
				[
					0,
					1,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[396.5, 618, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				140,
				[
					[0]
				],
				[
				[
					0,
					1,
					0,
					0,
					0
				]
				],
				[
					1,
					"Default",
					0,
					0
				]
			]
,			[
				[113.5, 618, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				141,
				[
					[0]
				],
				[
				[
					0,
					1,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[253, 524, 0, 309, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				142,
				[
					[0],
					[1],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-25,
					0
				]
			]
,			[
				[-754, 407.5, 0, 2018, 92, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				131,
				[
					[0]
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[255, 454, 0, 164, 65, 0, 0, 1, 0.5, 0.5076923370361328, 0, 0, []],
				19,
				132,
				[
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"victory",
					0,
					0
				]
			]
,			[
				[789, -666, 0, 256, 147, 0, 0, 1, 0.5, 0.5034013390541077, 0, 0, []],
				0,
				191,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
			],
			[			]
		]
,		[
			"overlaysL",
			11,
			2179960155481033,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[452.7253112792969, 340.6153564453125, 0, 309, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				176,
				[
					[1],
					[0],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"",
					0.3,
					0,
					1,
					1,
					1,
					0,
					-25,
					0
				]
			]
,			[
				[452.7253112792969, 75.6153564453125, 0, 255, 75, 0, 0, 1, 0.501474916934967, 0.5076923370361328, 0, 0, []],
				19,
				177,
				[
					[1],
					[1]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"score",
					0,
					0
				]
			]
,			[
				[318.4203186035156, 184.6153564453125, 0, 93.18192291259766, 96.8123779296875, 0, -0.2130657732486725, 1, 0.4805194735527039, 0.362500011920929, 0, 0, []],
				59,
				178,
				[
					[1],
					[0],
					[""]
				],
				[
				],
				[
					0,
					"stopOff0",
					0,
					0
				]
			]
,			[
				[455.1103210449219, 158.6153564453125, 0, 107.7037811279297, 98.02254486083984, 0, 0, 1, 0.5280898809432983, 0.3703703582286835, 0, 0, []],
				59,
				180,
				[
					[1],
					[1],
					[""]
				],
				[
				],
				[
					0,
					"stopOff1",
					0,
					0
				]
			]
,			[
				[589.4202880859375, 184.6153564453125, 0, 93.18192291259766, 96.81238555908203, 0, 0.2268927991390228, 1, 0.5324675440788269, 0.362500011920929, 0, 0, []],
				59,
				182,
				[
					[1],
					[2],
					[""]
				],
				[
				],
				[
					0,
					"stopOff2",
					0,
					0
				]
			]
,			[
				[454.7253112792969, 258.1153564453125, 0, 160.8891296386719, 160.8891296386719, 0, 0, 1, 0.5079365372657776, 0.5555555820465088, 0, 0, []],
				58,
				184,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[131, 318.5, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				186,
				[
					[1]
				],
				[
				[
					0,
					1,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[774, 255, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				187,
				[
					[1]
				],
				[
				[
					0,
					1,
					0,
					0,
					0
				]
				],
				[
					1,
					"Default",
					0,
					0
				]
			]
,			[
				[131, 191.5, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				188,
				[
					[1]
				],
				[
				[
					0,
					1,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[452.7253112792969, 301.6153564453125, 0, 309, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				189,
				[
					[1],
					[1],
					[0],
					[0],
					[""]
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				],
				[
					200,
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					50,
					50,
					"0123456abcdefgklmnopquvwxyz+789hijrst.,:/%üó ",
					"",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-25,
					0
				]
			]
,			[
				[-556, 209, 0, 2018, 92, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				197,
				[
					[1]
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[453.5, 253.6153564453125, 0, 330, 62, 0, 0, 1, 0.5, 0.5076923370361328, 0, 0, []],
				19,
				198,
				[
					[1],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"victory",
					0,
					0
				]
			]
,			[
				[777, 111, 0, 203.3385162353516, 203.3385009765625, 0, 0, 1, 0.5, 0.5034013390541077, 0, 0, []],
				0,
				199,
				[
					[1]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
			],
			[			]
		]
,		[
			"APIPlaytouch",
			12,
			3422235747630717,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"inter",
			13,
			4580351442566643,
			false,
			[0, 0, 0],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-575.5, -4.5, 0, 2454, 1061, 0, 0, 1, 0, 0, 0, 0, []],
				17,
				110,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[-15, -36, 0, -32, -25, 0, 0, 1, 0, 0, 0, 0, []],
				16,
				195,
				[
				],
				[
				],
				[
					1,
					0
				]
			]
,			[
				[127, 46.5, 0, 656, 417, 0, 0, 1, 0, 0, 0, 0, []],
				34,
				193,
				[
					[1]
				],
				[
				[
					0,
					0,
					1,
					0,
					1
				]
				],
				[
					1,
					"",
					"border:0px;",
					"my_inters",
					2
				]
			]
,			[
				[0, 255, 0, 126, 126, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				6,
				194,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[0, 236, 0, 510, 435, 0, 0, 1, 0, 0, 0, 0, []],
				34,
				105,
				[
					[0]
				],
				[
				[
					0,
					0,
					1,
					0,
					1
				]
				],
				[
					1,
					"",
					"border:0px;",
					"my_inters",
					2
				]
			]
,			[
				[192, 205, 0, 126, 126, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				6,
				162,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"tuto",
		510,
		907,
		false,
		"tutoScript",
		183017126146144,
		[
		[
			"Layer 2",
			0,
			2652395396669802,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 3",
			1,
			2586435238275284,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 4",
			2,
			419280812746648,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 5",
			3,
			2548356234497609,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 6",
			4,
			8530134940589829,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 7",
			5,
			9581483075470054,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 8",
			6,
			3738969094393747,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 9",
			7,
			512561220944473,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 1",
			8,
			1067112313934322,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 0",
			9,
			9413704413530676,
			true,
			[0, 0, 0],
			false,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-753, -899, 0, 2.202072620391846, 2.195122003555298, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				65,
				102,
				[
					[1]
				],
				[
				],
				[
					0,
					"tuto1",
					0,
					1
				]
			]
,			[
				[-752, -644, 0, 2.185090065002441, 2.195122003555298, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				65,
				115,
				[
					[3]
				],
				[
				],
				[
					0,
					"tuto3",
					0,
					1
				]
			]
,			[
				[-305, -644, 0, 2.196382522583008, 2.195122003555298, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				65,
				116,
				[
					[4]
				],
				[
				],
				[
					0,
					"tuto4",
					0,
					1
				]
			]
,			[
				[-305, -900, 0, 2.207792282104492, 2.227722644805908, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				65,
				118,
				[
					[2]
				],
				[
				],
				[
					0,
					"tuto2",
					3,
					1
				]
			]
,			[
				[-943, -997, 0, 2.291277885437012, 2.290056467056274, 0, 0, 1, 0, 0, 0, 0, []],
				66,
				119,
				[
					[1]
				],
				[
				],
				[
					0,
					"tuto1",
					1,
					1
				]
			]
,			[
				[-948, -741, 0, 2.428355932235718, 2.222411870956421, 0, 0, 1, 0, 0, 0, 0, []],
				66,
				122,
				[
					[3]
				],
				[
				],
				[
					0,
					"tuto4",
					1,
					1
				]
			]
,			[
				[-88, -743, 0, 2.28134298324585, 2.236986398696899, 0, 0, 1, 0, 0, 0, 0, []],
				66,
				124,
				[
					[4]
				],
				[
				],
				[
					0,
					"tuto2",
					1,
					1
				]
			]
,			[
				[-105, -998, 0, 2.282359838485718, 2.241058111190796, 0, 0, 1, 0, 0, 0, 0, []],
				66,
				126,
				[
					[2]
				],
				[
				],
				[
					0,
					"tuto3",
					1,
					1
				]
			]
,			[
				[-116, -771, 0, 70, 70, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				163,
				[
					[3]
				],
				[
				[
					1,
					1,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[-760, -771, 0, 146, 15, 0, 0, 1, 1, 1, 0, 0, []],
				68,
				164,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-288, -771, 0, 154, 17, 0, 0, 1, 1, 1, 0, 0, []],
				68,
				165,
				[
				],
				[
				],
				[
					0,
					"Default",
					1,
					1
				]
			]
,			[
				[-537, -1330, 0, 16, 1220, 0, 0, 1, 0, 0, 0, 0, []],
				67,
				166,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[255, 148.4158782958984, 0, 2.482878923416138, 2.47504186630249, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				65,
				167,
				[
					[1]
				],
				[
				],
				[
					0,
					"tuto1",
					0,
					1
				]
			]
,			[
				[255.6214447021484, 454.1269226074219, 0, 2.486433029174805, 2.50764274597168, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				65,
				168,
				[
					[2]
				],
				[
				],
				[
					0,
					"tuto2",
					3,
					1
				]
			]
,			[
				[65, 50.41587829589844, 0, 2.63757586479187, 2.621753692626953, 0, 0, 1, 0, 0, 0, 0, []],
				66,
				169,
				[
					[1]
				],
				[
				],
				[
					0,
					"tuto1",
					1,
					1
				]
			]
,			[
				[455.6213989257813, 356.1269226074219, 0, 2.607859373092651, 2.608901739120483, 0, 0, 1, 0, 0, 0, 0, []],
				66,
				170,
				[
					[2]
				],
				[
				],
				[
					0,
					"tuto3",
					1,
					1
				]
			]
,			[
				[249.3121185302734, 756.416015625, 0, 2.463730573654175, 2.47504186630249, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				65,
				171,
				[
					[3]
				],
				[
				],
				[
					0,
					"tuto3",
					0,
					1
				]
			]
,			[
				[28.31216430664063, 648.416015625, 0, 2.76289701461792, 2.578831672668457, 0, 0, 1, 0, 0, 0, 0, []],
				66,
				173,
				[
					[3]
				],
				[
				],
				[
					0,
					"tuto4",
					1,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
	],
	[
	[
		"SplashScript",
		[
		[
			2,
			"FUNCTIONS",
			false
		]
,		[
			0,
			[true, "DO NOT MODIFY   "],
			false,
			null,
			1974560283413733,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1974560283413733,
				false
				,[
				[
					1,
					[
						2,
						"DO NOT MODIFY   "
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "RATE"],
				false,
				null,
				4411967251030188,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					4411967251030188,
					false
					,[
					[
						1,
						[
							2,
							"RATE"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7201448240802465,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2298274313874725,
						false
						,[
						[
							4,
							7
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						false,
						false,
						3157235851173077,
						false
						,[
						[
							5,
							[
								2,
								"rate"
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						5661510815746566,
						false
						,[
						[
							1,
							[
								2,
								"hideRate"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8616643831697679,
						false
						,[
						[
							11,
							"splashShown"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2227500194984531,
						[
						[
							7,
							cr.plugins_.Sprite.prototype.cnds.CompareFrame,
							null,
							0,
							false,
							false,
							false,
							9532039083083231,
							false
							,[
							[
								8,
								0
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							7447480550300475,
							false
							,[
							[
								1,
								[
									2,
									"doRate"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6869170077844418,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					2355536593962789,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					3993165535532379,
					false
					,[
					[
						5,
						[
							2,
							"rate"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					2161056384481265,
					false
					,[
					[
						1,
						[
							2,
							"setClientID"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					2088136934039247,
					false
					,[
					[
						1,
						[
							2,
							"prepareOverlays"
						]
					]
,					[
						13,
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					2633878109284401,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3128201181401882,
						false
						,[
						[
							11,
							"splashShown"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetLayerVisible,
						null,
						6236584964705746,
						false
						,[
						[
							5,
							[
								2,
								"loading"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						2678703658139302,
						false
						,[
						[
							1,
							[
								2,
								"initDefaultConfig"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						2954742095058129,
						false
						,[
						[
							0,
							[
								1,
								0.2
							]
						]
						]
					]
,					[
						29,
						cr.plugins_.cjs.prototype.acts.ExecuteJS,
						null,
						1185561614295323,
						false
						,[
						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														2,
														"setGameName('"
													]
													,[
														23,
														"GAMENAME"
													]
												]
												,[
													2,
													"', "
												]
											]
											,[
												23,
												"client_ID"
											]
										]
										,[
											2,
											", '"
										]
									]
									,[
										23,
										"FORCE_PLATFORM"
									]
								]
								,[
									2,
									"');"
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						9288145347203837,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						4410497802524109,
						false
						,[
						[
							1,
							[
								2,
								"initWorkingData"
							]
						]
,						[
							13,
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						7727703240406555,
						[
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							9895014738687773,
							false
							,[
							[
								1,
								[
									2,
									"initStarsData"
								]
							]
,							[
								13,
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							1811469107605799,
							false
							,[
							[
								0,
								[
									0,
									2
								]
							]
							]
						]
,						[
							29,
							cr.plugins_.cjs.prototype.acts.ExecuteJS,
							null,
							4757344325925424,
							false
							,[
							[
								1,
								[
									2,
									"getConfigDatas();"
								]
							]
							]
						]
,						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							4744906749214623,
							false
							,[
							[
								1,
								[
									2,
									"loadConfigFromServer"
								]
							]
,							[
								13,
																	[
										7,
										[
											20,
											29,
											cr.plugins_.cjs.prototype.exps.ReadExecutionReturn,
											true,
											null
										]
									]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4749155605722817,
							false
							,[
							[
								11,
								"waitingForConfig"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							4776401597984729,
							false
							,[
							[
								1,
								[
									2,
									"loadLevelsConfig"
								]
							]
,							[
								13,
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							1920892022931453,
							[
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								6877859463241855,
								false
								,[
								[
									1,
									[
										2,
										"APIPlaytouch_init"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							8952686861939743,
							[
							[
								25,
								cr.plugins_.Browser.prototype.cnds.IsOnline,
								null,
								0,
								false,
								false,
								false,
								9746960333283864,
								false
							]
							],
							[
							[
								29,
								cr.plugins_.cjs.prototype.acts.ExecuteJS,
								null,
								7038090187570351,
								false
								,[
								[
									1,
									[
										2,
										"startOnline();"
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							2218272900988463,
							[
							[
								25,
								cr.plugins_.Browser.prototype.cnds.IsOnline,
								null,
								0,
								false,
								true,
								false,
								2690499020529951,
								false
							]
							],
							[
							[
								29,
								cr.plugins_.cjs.prototype.acts.ExecuteJS,
								null,
								4787872048255661,
								false
								,[
								[
									1,
									[
										2,
										"startOffline();"
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3849982353069472,
							[
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.Wait,
								null,
								2520060375409772,
								false
								,[
								[
									0,
									[
										0,
										2
									]
								]
								]
							]
,							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								5708998291440484,
								false
								,[
								[
									1,
									[
										2,
										"pubWebView"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3233735471079534,
							[
							[
								-1,
								cr.system_object.prototype.cnds.LayerVisible,
								null,
								0,
								false,
								false,
								false,
								7573075201391063,
								false
								,[
								[
									5,
									[
										2,
										"loading"
									]
								]
								]
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.Wait,
								null,
								3834125938068307,
								false
								,[
								[
									0,
									[
										0,
										10
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								true,
								null,
								6063241554022774,
								[
								[
									-1,
									cr.system_object.prototype.cnds.CompareVar,
									null,
									0,
									false,
									true,
									false,
									7398609563720744,
									false
									,[
									[
										11,
										"isLevelConfigLoaded"
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.cnds.CompareVar,
									null,
									0,
									false,
									true,
									false,
									7235092671494597,
									false
									,[
									[
										11,
										"waitingForServer"
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									25,
									cr.plugins_.Browser.prototype.acts.ConsoleLog,
									null,
									7229095430580642,
									false
									,[
									[
										3,
										0
									]
,									[
										7,
										[
											2,
											"Unable to connect to server"
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.acts.SetVar,
									null,
									6721819090295857,
									false
									,[
									[
										11,
										"isLevelConfigLoaded"
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.acts.SetVar,
									null,
									4132107661618523,
									false
									,[
									[
										11,
										"waitingForConfig"
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.acts.SetVar,
									null,
									4824631028599168,
									false
									,[
									[
										11,
										"waitingForServer"
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6092834202605493,
				[
				[
					-1,
					cr.system_object.prototype.cnds.LayerVisible,
					null,
					0,
					false,
					false,
					false,
					2670941297033881,
					false
					,[
					[
						5,
						[
							2,
							"loading"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3313419417221291,
					false
					,[
					[
						11,
						"isLevelConfigLoaded"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					1771337017938696,
					false
					,[
					[
						11,
						"waitingForConfig"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3876594607254028,
					false
					,[
					[
						11,
						"waitingForServer"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					2932830039474233,
					false
					,[
					[
						5,
						[
							2,
							"loading"
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Touch"],
			false,
			null,
			2893394709076832,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2893394709076832,
				false
				,[
				[
					1,
					[
						2,
						"Touch"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "DO NOT MODIFY      "],
				false,
				null,
				3848265394431306,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					3848265394431306,
					false
					,[
					[
						1,
						[
							2,
							"DO NOT MODIFY      "
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8061517470585045,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						4685761645308827,
						false
						,[
						[
							4,
							0
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1407033217556714,
						false
						,[
						[
							11,
							"isLevelConfigLoaded"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						true,
						false,
						1306812212873732,
						false
						,[
						[
							5,
							[
								2,
								"rate"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						9718923203775796,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							6873712564143665,
							false
							,[
							[
								11,
								"TUTO_ENABLE"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							8066462149103645,
							false
							,[
							[
								11,
								"TUTO_SPLASH_2_LEVELSELECT"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							6926168046946939,
							false
							,[
							[
								1,
								[
									2,
									"showTutoThenGoto"
								]
							]
,							[
								13,
																	[
										7,
										[
											2,
											"LevelSelect"
										]
									]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3651624935596172,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							4594722121720498,
							false
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							1236537746223801,
							false
							,[
							[
								1,
								[
									2,
									"gotoLayout"
								]
							]
,							[
								13,
																	[
										7,
										[
											2,
											"LevelSelect"
										]
									]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2568188544374675,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						1688780400551953,
						false
						,[
						[
							4,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						true,
						false,
						848582219065185,
						false
						,[
						[
							5,
							[
								2,
								"rate"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						5065430276738765,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							false,
							false,
							7952837184659393,
							false
						]
						],
						[
						[
							29,
							cr.plugins_.cjs.prototype.acts.ExecuteJS,
							null,
							7286554854207798,
							false
							,[
							[
								1,
								[
									2,
									"CocoonJS.App.forwardAsync('showmoregames();');"
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						9805258511675501,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							true,
							false,
							8038484712132932,
							false
						]
						],
						[
						[
							29,
							cr.plugins_.cjs.prototype.acts.ExecuteJS,
							null,
							6805366146791213,
							false
							,[
							[
								1,
								[
									2,
									"showMG();"
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "DEBUG"],
			false,
			null,
			6674019786276308,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6674019786276308,
				false
				,[
				[
					1,
					[
						2,
						"DEBUG"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				900941395455896,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					4310728001106577,
					false
					,[
					[
						4,
						69
					]
					]
				]
				],
				[
				[
					40,
					cr.plugins_.Arr.prototype.acts.Clear,
					null,
					1152100698239321,
					false
				]
,				[
					40,
					cr.plugins_.Arr.prototype.acts.SetSize,
					null,
					8518962175521313,
					false
					,[
					[
						0,
						[
							0,
							501
						]
					]
,					[
						0,
						[
							0,
							2
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					39,
					cr.plugins_.WebStorage.prototype.acts.ClearLocal,
					null,
					1815496502901503,
					false
				]
,				[
					39,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					8102353141801308,
					false
					,[
					[
						1,
						[
							23,
							"GAMENAME"
						]
					]
,					[
						7,
						[
							20,
							21,
							cr.plugins_.Spritefont2.prototype.exps.Text,
							true,
							null
						]
					]
					]
				]
,				[
					40,
					cr.plugins_.Arr.prototype.acts.JSONLoad,
					null,
					902555699608463,
					false
					,[
					[
						1,
						[
							20,
							39,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								23,
								"GAMENAME"
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "GAME SPECIFIC"],
			false,
			null,
			2121329831562353,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2121329831562353,
				false
				,[
				[
					1,
					[
						2,
						"GAME SPECIFIC"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4751240496517944,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.IsOnScreen,
					null,
					0,
					false,
					false,
					false,
					6794585636784075,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					2294904496411079,
					false
					,[
					[
						11,
						"delayBeforeDecoCarSpawn"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.dt
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					5614034356407417,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3157976885676344,
						false
						,[
						[
							7,
							[
								23,
								"delayBeforeDecoCarSpawn"
							]
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						2936950132629715,
						false
						,[
						[
							1,
							[
								2,
								"spawnDecoCar"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8102499887353754,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					5254281642701401,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					1194036395068164,
					false
					,[
					[
						1,
						[
							2,
							"destroyDecoCars"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "SPLASH_SOUND"],
			false,
			null,
			8259225406771655,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8259225406771655,
				false
				,[
				[
					1,
					[
						2,
						"SPLASH_SOUND"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				8819973894316836,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					6709717121389961,
					false
					,[
					[
						4,
						1
					]
					]
				]
,				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					542455827481841,
					false
					,[
					[
						4,
						76
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8372707855412977,
					[
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.Stop,
						null,
						8423429662189274,
						false
						,[
						[
							1,
							[
								2,
								"butt_sound"
							]
						]
						]
					]
,					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						3991571132715287,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"butt"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"butt_sound"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1092569860400338,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					2255235013418431,
					false
					,[
					[
						4,
						0
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6503398634825037,
					[
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						4642688627765102,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"butt_play"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"butt_play_sound"
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Restore Music Menu2"],
			false,
			null,
			7302689206472444,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7302689206472444,
				false
				,[
				[
					1,
					[
						2,
						"Restore Music Menu2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2954461295361359,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4614210612855073,
					false
					,[
					[
						11,
						"isLevelConfigLoaded"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2720702046909682,
					false
					,[
					[
						11,
						"waitingForConfig"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7161770009363085,
					false
					,[
					[
						11,
						"waitingForServer"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					4188867839350564,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					true,
					null,
					2993140977007739,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsMobile,
						null,
						0,
						false,
						true,
						false,
						9718090827958766,
						false
					]
,					[
						28,
						cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
						null,
						0,
						false,
						false,
						false,
						1226401165579333,
						false
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						377380742007209,
						[
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							4046602337305212,
							false
							,[
							[
								1,
								[
									2,
									"restoreMusic"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8687513773861987,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					9049422425066806,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					true,
					null,
					1869045271896954,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsMobile,
						null,
						0,
						false,
						true,
						false,
						9965961422166064,
						false
					]
,					[
						28,
						cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
						null,
						0,
						false,
						false,
						false,
						194949734343995,
						false
					]
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PreloadByName,
						null,
						5973735703966652,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"music_ingame"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7961010798623728,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					7776958913628993,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5459571187683389,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsMobile,
						null,
						0,
						false,
						false,
						false,
						1971745551441125,
						false
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						8672258337232117,
						[
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							8906062419164757,
							false
							,[
							[
								1,
								[
									2,
									"restoreMusic"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				203629988247631,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					555862870207283,
					false
					,[
					[
						1,
						[
							2,
							"restoreMusic"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5925048406152379,
					[
					[
						72,
						cr.plugins_.Audio.prototype.cnds.IsTagPlaying,
						null,
						0,
						false,
						true,
						false,
						2232490521874621,
						false
						,[
						[
							1,
							[
								2,
								"music_ingame"
							]
						]
						]
					]
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						6968627508479765,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"music_ingame"
							]
						]
,						[
							3,
							1
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"music_ingame"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8448045136712376,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					8575220278207029,
					false
					,[
					[
						1,
						[
							2,
							"CB_unMute"
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					2588618806282457,
					false
					,[
					[
						1,
						[
							2,
							"restoreMusic"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"LevelSelectScript",
		[
		[
			2,
			"FUNCTIONS",
			false
		]
,		[
			0,
			[true, "DO NOT MODIFY     "],
			false,
			null,
			5742391817968821,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5742391817968821,
				false
				,[
				[
					1,
					[
						2,
						"DO NOT MODIFY     "
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				3313306001394919,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8168865030715846,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6411902098680788,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6226735049981846,
						false
						,[
						[
							11,
							"toInit"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8732302297639032,
						false
						,[
						[
							11,
							"toInit"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.RestartLayout,
						null,
						4631955165655916,
						false
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4559234676715298,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						5126831299714782,
						false
						,[
						[
							11,
							"TUTO_ENABLE"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4648139049356368,
						false
						,[
						[
							11,
							"TUTO_BUTTON_LEVELSELECT"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						8,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						928387018886026,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6130332777717295,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						8683928174880979,
						false
					]
					],
					[
					[
						8,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						8251828980009769,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5467668803188577,
					[
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetScale,
						null,
						3648274880246646,
						false
						,[
						[
							0,
							[
								1,
								0.5
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						7745736837103296,
						false
						,[
						[
							1,
							[
								2,
								"prepareOverlays"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						4494969913280622,
						false
						,[
						[
							1,
							[
								2,
								"initLvlButt"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1003210006213691,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetTimescale,
						null,
						4291287022197834,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "OnCreated"],
			false,
			null,
			4413545625515866,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4413545625515866,
				false
				,[
				[
					1,
					[
						2,
						"OnCreated"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "DO NOT MODIFY    "],
				false,
				null,
				8682159223310689,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					8682159223310689,
					false
					,[
					[
						1,
						[
							2,
							"DO NOT MODIFY    "
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6989435736634819,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.OnCreated,
						null,
						1,
						false,
						false,
						false,
						2566617683388516,
						false
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterSpacing,
						null,
						4188671300080547,
						false
						,[
						[
							0,
							[
								23,
								"SPRITEFONT_WIDTH"
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
						null,
						311429406069722,
						false
						,[
						[
							1,
							[
								2,
								"1"
							]
						]
,						[
							0,
							[
								0,
								40
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
						null,
						7817122386482744,
						false
						,[
						[
							1,
							[
								2,
								" "
							]
						]
,						[
							0,
							[
								0,
								30
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Touch"],
			false,
			null,
			1791553170233318,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1791553170233318,
				false
				,[
				[
					1,
					[
						2,
						"Touch"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "DO NOT MODIFY             "],
				false,
				null,
				8682876644352718,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					8682876644352718,
					false
					,[
					[
						1,
						[
							2,
							"DO NOT MODIFY             "
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7249362042896855,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						3387794178337171,
						false
						,[
						[
							4,
							37
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						9953367162179592,
						[
						[
							40,
							cr.plugins_.Arr.prototype.cnds.CompareXY,
							null,
							0,
							false,
							false,
							false,
							5223181586110689,
							false
							,[
							[
								0,
								[
									21,
									37,
									false,
									null
									,1
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							2452056052574984,
							false
							,[
							[
								1,
								[
									2,
									"launchLevel"
								]
							]
,							[
								13,
																	[
										7,
										[
											21,
											37,
											false,
											null
											,1
										]
									]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6058598311879289,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						9121414878055814,
						false
						,[
						[
							4,
							2
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						7897848025017266,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickAll,
							null,
							0,
							false,
							false,
							false,
							5984970017239717,
							false
							,[
							[
								4,
								2
							]
							]
						]
						],
						[
						[
							2,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							1789320331947821,
							false
							,[
							[
								3,
								1
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2220485509270742,
						[
						[
							2,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							5933820973035949,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"next"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							582463183573062,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								4481375749908379,
								false
								,[
								[
									11,
									"lvlPageNb"
								]
,								[
									8,
									2
								]
,								[
									7,
									[
										7,
										[
											23,
											"MAX_LVL"
										]
										,[
											0,
											20
										]
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								1864776944894377,
								false
								,[
								[
									1,
									[
										2,
										"changePageTo"
									]
								]
,								[
									13,
																			[
											7,
											[
												4,
												[
													23,
													"lvlPageNb"
												]
												,[
													0,
													1
												]
											]
										]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							8891378339685,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								164382019653923,
								false
								,[
								[
									11,
									"lvlPageNb"
								]
,								[
									8,
									5
								]
,								[
									7,
									[
										7,
										[
											23,
											"MAX_LVL"
										]
										,[
											0,
											20
										]
									]
								]
								]
							]
							],
							[
							[
								2,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								7970783390543128,
								false
								,[
								[
									3,
									0
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						8353790557888507,
						[
						[
							2,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							6609452820292266,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"previous"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							4540600594746224,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								9636666531017215,
								false
								,[
								[
									11,
									"lvlPageNb"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								8689441708892986,
								false
								,[
								[
									1,
									[
										2,
										"gotoLayout"
									]
								]
,								[
									13,
																			[
											7,
											[
												2,
												"Splash"
											]
										]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							7243777194729611,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								4060365192672225,
								false
								,[
								[
									11,
									"lvlPageNb"
								]
,								[
									8,
									4
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								2084622537919201,
								false
								,[
								[
									1,
									[
										2,
										"changePageTo"
									]
								]
,								[
									13,
																			[
											7,
											[
												5,
												[
													23,
													"lvlPageNb"
												]
												,[
													0,
													1
												]
											]
										]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3188298730498598,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						4248353963630838,
						false
						,[
						[
							4,
							8
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						7109667894556825,
						false
						,[
						[
							1,
							[
								2,
								"showTutoThenGoto"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"LevelSelect"
									]
								]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "GAME SPECIFIC"],
			false,
			null,
			8239854766320044,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8239854766320044,
				false
				,[
				[
					1,
					[
						2,
						"GAME SPECIFIC"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4751240496517944,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.IsOnScreen,
					null,
					0,
					false,
					false,
					false,
					6794585636784075,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					2294904496411079,
					false
					,[
					[
						11,
						"delayBeforeDecoCarSpawn"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.dt
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					5614034356407417,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3157976885676344,
						false
						,[
						[
							7,
							[
								23,
								"delayBeforeDecoCarSpawn"
							]
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						2936950132629715,
						false
						,[
						[
							1,
							[
								2,
								"spawnDecoCar"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8102499887353754,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					5254281642701401,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					1194036395068164,
					false
					,[
					[
						1,
						[
							2,
							"destroyDecoCars"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "LEVELSELECT_SOUND"],
			false,
			null,
			1693281180321368,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1693281180321368,
				false
				,[
				[
					1,
					[
						2,
						"LEVELSELECT_SOUND"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				230122682459267,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					3388563940204618,
					false
					,[
					[
						1,
						[
							2,
							"butt_sound"
						]
					]
					]
				]
				],
				[
				[
					72,
					cr.plugins_.Audio.prototype.acts.Stop,
					null,
					2727762613919166,
					false
					,[
					[
						1,
						[
							2,
							"butt_sound"
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Audio.prototype.acts.PlayByName,
					null,
					599811847383169,
					false
					,[
					[
						3,
						0
					]
,					[
						1,
						[
							2,
							"butt"
						]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							"butt_sound"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6941505837379418,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					8803817987131818,
					false
					,[
					[
						4,
						2
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					826333269306885,
					false
					,[
					[
						1,
						[
							2,
							"butt_sound"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4893692420218502,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					985498346684593,
					false
					,[
					[
						1,
						[
							2,
							"lock_sound"
						]
					]
					]
				]
				],
				[
				[
					72,
					cr.plugins_.Audio.prototype.acts.PlayByName,
					null,
					3483164700715452,
					false
					,[
					[
						3,
						0
					]
,					[
						1,
						[
							2,
							"lock"
						]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							"lock_sound"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3144362585513067,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					3294180059293088,
					false
					,[
					[
						4,
						37
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9187011303956754,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						false,
						false,
						9140289016934405,
						false
						,[
						[
							4,
							38
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						2446110851927769,
						[
						[
							38,
							cr.plugins_.Sprite.prototype.cnds.CompareFrame,
							null,
							0,
							false,
							false,
							false,
							6926573364729052,
							false
							,[
							[
								8,
								0
							]
,							[
								0,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							2370228942171194,
							false
							,[
							[
								1,
								[
									2,
									"unlock_sound"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2883286007198082,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						5355123875489149,
						false
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						1672911506646924,
						false
						,[
						[
							1,
							[
								2,
								"unlock_sound"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9226800086316504,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					8819391150605212,
					false
					,[
					[
						4,
						38
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					333476978223192,
					[
					[
						38,
						cr.plugins_.Sprite.prototype.cnds.CompareFrame,
						null,
						0,
						false,
						false,
						false,
						6965324891141134,
						false
						,[
						[
							8,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6210758827136434,
						false
						,[
						[
							1,
							[
								2,
								"lock_sound"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2443896024413821,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						84804732017248,
						false
					]
					],
					[
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2566163112578765,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5623315135206219,
					false
					,[
					[
						1,
						[
							2,
							"unlock_sound"
						]
					]
					]
				]
				],
				[
				[
					72,
					cr.plugins_.Audio.prototype.acts.Stop,
					null,
					7973772408221254,
					false
					,[
					[
						1,
						[
							2,
							"butt_sound"
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Audio.prototype.acts.PlayByName,
					null,
					1766997630752084,
					false
					,[
					[
						3,
						0
					]
,					[
						1,
						[
							2,
							"butt_play"
						]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							"unlock_sound"
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"VARS",
		[
		[
			0,
			[true, "YOU NEED TO SET THE FOLLOWING VARS"],
			false,
			null,
			780953363157514,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				780953363157514,
				false
				,[
				[
					1,
					[
						2,
						"YOU NEED TO SET THE FOLLOWING VARS"
					]
				]
				]
			]
			],
			[
			]
		]
,		[
			1,
			"IS_LANDSCAPE",
			0,
			0,
false,true,2554453121113068,false
		]
,		[
			1,
			"GAMENAME",
			1,
			"parkingPanic_CMATHW",
false,true,5493624587180116,false
		]
,		[
			1,
			"FULL_GAMENAME",
			1,
			"Parking Panic",
false,true,4719478464291331,false
		]
,		[
			1,
			"MAX_LVL",
			0,
			40,
false,true,956201279115544,false
		]
,		[
			1,
			"TUTO_ENABLE",
			0,
			0,
false,true,2056881577876256,false
		]
,		[
			1,
			"TUTO_SPLASH_2_LEVELSELECT",
			0,
			0,
false,true,5488452126333061,false
		]
,		[
			1,
			"TUTO_BUTTON_LEVELSELECT",
			0,
			0,
false,true,2428370813091538,false
		]
,		[
			1,
			"TUTO_BUTTON_PAUSE",
			0,
			0,
false,true,7859052820358157,false
		]
,		[
			1,
			"NB_PAGE_OF_TUTO",
			0,
			2,
false,true,3231333907260702,false
		]
,		[
			1,
			"NB_TUTO_PER_PAGE",
			0,
			3,
false,true,1617234031290164,false
		]
,		[
			1,
			"ACTIVATE321",
			0,
			1,
false,true,130930581207024,false
		]
,		[
			0,
			[true, "DO NOT MODIFY THIS GROUP OF VAR"],
			false,
			null,
			7662603226062063,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7662603226062063,
				false
				,[
				[
					1,
					[
						2,
						"DO NOT MODIFY THIS GROUP OF VAR"
					]
				]
				]
			]
			],
			[
			]
		]
,		[
			1,
			"ACTIVE_AD",
			0,
			0,
false,true,4153465786351657,false
		]
,		[
			1,
			"ACTIVE_MG",
			0,
			0,
false,true,2405777338203855,false
		]
,		[
			1,
			"FORCE_PLATFORM",
			1,
			"",
false,true,5747061547600617,false
		]
,		[
			1,
			"SERVER_URI",
			1,
			"http://23.21.152.106/SaveNScores/",
false,true,8071251875456814,false
		]
,		[
			1,
			"MAX_LVL_SAVE",
			0,
			20,
false,true,2445245074882397,false
		]
,		[
			1,
			"FORCE_LOAD_TIME",
			0,
			0.1,
false,true,6990790905333931,false
		]
,		[
			1,
			"LVL_BUTTS_PER_COL",
			0,
			4,
false,true,7715256028231162,false
		]
,		[
			1,
			"LVL_BUTTS_PER_ROW",
			0,
			5,
false,true,6890266986988335,false
		]
,		[
			1,
			"SPRITEFONT_WIDTH",
			0,
			-8,
false,true,2805592563550654,false
		]
,		[
			1,
			"POP_PREFIX",
			1,
			"+ ",
false,true,1970327431423241,false
		]
,		[
			1,
			"POP_DIR",
			0,
			3,
false,true,2395919116794449,false
		]
,		[
			1,
			"AD_FREQ",
			0,
			3,
false,true,3046030891740415,false
		]
,		[
			1,
			"INTER_FREQ",
			0,
			3,
false,true,462229902169935,false
		]
,		[
			1,
			"backFrom",
			1,
			"",
false,false,971664189269852,false
		]
,		[
			1,
			"currTutoPage",
			0,
			1,
false,false,21883848512253,false
		]
,		[
			1,
			"client_ID",
			0,
			-1,
false,false,7767088799694433,false
		]
,		[
			1,
			"waitingForServer",
			0,
			1,
false,false,1095067354506553,false
		]
,		[
			1,
			"waitingForConfig",
			0,
			1,
false,false,6080823099616789,false
		]
,		[
			1,
			"saveSRC",
			1,
			"",
false,false,476171372551054,false
		]
,		[
			1,
			"splashShown",
			0,
			0,
false,false,4197644184036815,false
		]
,		[
			1,
			"whereToGo",
			1,
			"",
false,false,1095349578530454,false
		]
,		[
			1,
			"actionQueued",
			1,
			"",
false,false,4012063408235259,false
		]
,		[
			1,
			"fullscreenAdTriggerCount",
			0,
			0,
false,false,4920566965300952,false
		]
,		[
			1,
			"allowAccess2NextLvl",
			0,
			0,
false,false,5633445529954985,false
		]
,		[
			1,
			"currentScoreDisplayed",
			0,
			0,
false,false,377525097210218,false
		]
,		[
			1,
			"score2AddByStep",
			0,
			0,
false,false,172680070517257,false
		]
,		[
			1,
			"Score",
			0,
			0,
false,false,1473200176186835,false
		]
,		[
			1,
			"starUnlocked",
			0,
			0,
false,false,6939780882383838,false
		]
,		[
			1,
			"levelNumber",
			0,
			0,
false,false,6796391415574014,false
		]
,		[
			1,
			"isPaused",
			0,
			0,
false,false,2297245906241508,false
		]
,		[
			1,
			"lvlPageNb",
			0,
			1,
false,false,3609985613684546,false
		]
,		[
			1,
			"toInit",
			0,
			0,
false,false,9101602424049609,false
		]
,		[
			1,
			"restart",
			0,
			0,
false,false,4740851954372983,false
		]
,		[
			1,
			"lifes",
			0,
			3,
false,false,4767839450643503,false
		]
,		[
			1,
			"gameStarted",
			0,
			0,
false,false,2304410398253372,false
		]
,		[
			1,
			"gameOverTrigged",
			0,
			0,
false,false,9204915904740085,false
		]
,		[
			1,
			"isLevelConfigLoaded",
			0,
			0,
false,false,7700955381145986,false
		]
,		[
			1,
			"timer",
			0,
			0,
false,false,2371531283389915,false
		]
,		[
			1,
			"isTheFirstStart",
			0,
			0,
false,false,4146323850369845,false
		]
,		[
			1,
			"GOadShown",
			1,
			"",
false,false,7013648000383679,false
		]
,		[
			0,
			[true, "GAME SPECIFIC"],
			false,
			null,
			8808051117797296,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8808051117797296,
				false
				,[
				[
					1,
					[
						2,
						"GAME SPECIFIC"
					]
				]
				]
			]
			],
			[
			]
		]
,		[
			1,
			"POINT_PER_LIFE",
			0,
			0,
false,true,1746415115235725,false
		]
,		[
			1,
			"GAME_MAX_TIME",
			0,
			120,
false,true,1860397002562508,false
		]
,		[
			1,
			"MAX_POINTS_BONUS",
			0,
			1200000,
false,true,8148694118075553,false
		]
,		[
			1,
			"GAME_MAX_SCORE",
			0,
			3000000,
false,true,740543439305046,false
		]
,		[
			1,
			"DEAD_ZONE_CAR_MOVES",
			0,
			5,
false,true,8219879016928768,false
		]
,		[
			1,
			"delayBeforeDecoCarSpawn",
			0,
			0,
false,false,2102299058285326,false
		]
,		[
			1,
			"deltaX",
			0,
			-1,
false,false,5360877306998711,false
		]
,		[
			1,
			"deltaY",
			0,
			-1,
false,false,5606502991864808,false
		]
,		[
			1,
			"tilesRemaining",
			0,
			0,
false,false,2395086173841648,false
		]
,		[
			1,
			"timer2",
			0,
			0,
false,false,1758831724479407,false
		]
,		[
			1,
			"currCarID",
			0,
			0,
false,false,3901552940712773,false
		]
,		[
			1,
			"actualBonusPoints",
			0,
			0,
false,false,7658984873340225,false
		]
,		[
			1,
			"diffX",
			0,
			0,
false,false,4126624232932205,false
		]
,		[
			1,
			"diffY",
			0,
			0,
false,false,3279537836642258,false
		]
,		[
			1,
			"dragStart",
			0,
			0,
false,false,8126261554734284,false
		]
,		[
			1,
			"moveCount",
			0,
			0,
false,false,6443022387451262,false
		]
,		[
			1,
			"maxMovesCount",
			0,
			0,
false,false,2715863576369153,false
		]
,		[
			1,
			"carsVectorVelocity",
			0,
			1000,
false,false,5423249800145492,false
		]
,		[
			1,
			"carsMovingDistance",
			0,
			1,
false,false,1859939242420536,false
		]
,		[
			1,
			"exY",
			0,
			0,
false,false,3737341528470767,false
		]
,		[
			1,
			"exX",
			0,
			0,
false,false,5067314324383095,false
		]
,		[
			1,
			"touchedStartY",
			0,
			0,
false,false,9460320561083858,false
		]
,		[
			1,
			"ghostCarUID",
			0,
			0,
false,false,6832669595991093,false
		]
,		[
			1,
			"touchedCarUID",
			0,
			0,
false,false,3027364781378721,false
		]
,		[
			1,
			"touchedStartX",
			0,
			0,
false,false,1344028382302023,false
		]
,		[
			1,
			"placedCarUID",
			0,
			0,
false,false,4284765418893674,false
		]
,		[
			1,
			"end",
			0,
			0,
false,false,7734697303510406,false
		]
,		[
			1,
			"starting",
			0,
			0,
false,false,965753277797088,false
		]
,		[
			0,
			[true, "Multilang Vars"],
			false,
			null,
			4959969690157153,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4959969690157153,
				false
				,[
				[
					1,
					[
						2,
						"Multilang Vars"
					]
				]
				]
			]
			],
			[
			]
		]
,		[
			1,
			"timeToValidLang",
			0,
			0.01,
false,false,1642164033692883,false
		]
,		[
			1,
			"itemsLoading",
			0,
			0,
false,false,8743978000449158,false
		]
,		[
			0,
			[true, "Propagation VARS"],
			false,
			null,
			900061003097934,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				900061003097934,
				false
				,[
				[
					1,
					[
						2,
						"Propagation VARS"
					]
				]
				]
			]
			],
			[
			]
		]
,		[
			1,
			"touchid",
			0,
			0,
false,false,2480489450138834,false
		]
,		[
			1,
			"lastTouch",
			0,
			-1,
false,false,7548699996662373,false
		]
		]
	]
,	[
		"FUNCTIONS",
		[
		[
			2,
			"VARS",
			false
		]
,		[
			0,
			[true, "DO NOT TOUCH OR EVEN LOOK AT THIS OR I WILL BURN YOU !"],
			false,
			null,
			7475488492849937,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7475488492849937,
				false
				,[
				[
					1,
					[
						2,
						"DO NOT TOUCH OR EVEN LOOK AT THIS OR I WILL BURN YOU !"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6997755125129646,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					6869673770873575,
					false
					,[
					[
						1,
						[
							2,
							"initTutoPage"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1607830720333592,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsMobile,
						null,
						0,
						false,
						false,
						false,
						2064131482097202,
						false
					]
					],
					[
					[
						67,
						cr.plugins_.TiledBg.prototype.acts.SetVisible,
						null,
						1777623845236532,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						68,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						8157170074805059,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3164122371575415,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						3529264158611711,
						false
					]
					],
					[
					[
						67,
						cr.plugins_.TiledBg.prototype.acts.SetVisible,
						null,
						7738563122615271,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						68,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						9060326819210018,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					715634306735983,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						5718140218337477,
						false
						,[
						[
							4,
							65
						]
						]
					]
					],
					[
					[
						65,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						4407843480227143,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"tuto"
								]
								,[
									4,
									[
										21,
										65,
										false,
										null
										,0
									]
									,[
										6,
										[
											23,
											"NB_TUTO_PER_PAGE"
										]
										,[
											5,
											[
												23,
												"currTutoPage"
											]
											,[
												0,
												1
											]
										]
									]
								]
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						65,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						7519310750033455,
						false
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9934271295541011,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						5184409104868421,
						false
						,[
						[
							4,
							66
						]
						]
					]
					],
					[
					[
						66,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						850818089726234,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"tuto"
								]
								,[
									4,
									[
										21,
										66,
										false,
										null
										,0
									]
									,[
										6,
										[
											23,
											"NB_TUTO_PER_PAGE"
										]
										,[
											5,
											[
												23,
												"currTutoPage"
											]
											,[
												0,
												1
											]
										]
									]
								]
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						8560874754064092,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsMobile,
							null,
							0,
							false,
							false,
							false,
							5375268630297955,
							false
						]
						],
						[
						[
							66,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							255448925844488,
							false
							,[
							[
								0,
								[
									0,
									1
								]
							]
							]
						]
,						[
							66,
							cr.plugins_.Sprite.prototype.acts.StopAnim,
							null,
							3996482698012769,
							false
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2064465934821095,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							4434088242699206,
							false
						]
						],
						[
						[
							66,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							2806099238198351,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
							]
						]
,						[
							66,
							cr.plugins_.Sprite.prototype.acts.StopAnim,
							null,
							4155917792139502,
							false
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				670372239175209,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					7877867035102007,
					false
					,[
					[
						1,
						[
							2,
							"showTutoThenGoto"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5281455450976478,
					false
					,[
					[
						11,
						"backFrom"
					]
,					[
						7,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Param,
							false,
							null
							,[
[
								0,
								0
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					21872233214462,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						788514269436278,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						1069050371101118,
						false
						,[
						[
							1,
							[
								2,
								"gotoLayout"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"tuto"
									]
								]
,
								[
									7,
									[
										20,
										27,
										cr.plugins_.Function.prototype.exps.Param,
										false,
										null
										,[
[
											0,
											0
										]
										]
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2046206752974937,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						5208571921650294,
						false
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						731913318255651,
						false
						,[
						[
							1,
							[
								2,
								"gotoLayout"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"tuto"
									]
								]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "ON/OFF"],
				false,
				null,
				1618696717627778,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					1618696717627778,
					false
					,[
					[
						1,
						[
							2,
							"ON/OFF"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9677301271864019,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6692127130162899,
						false
						,[
						[
							11,
							"ACTIVE_AD"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						86,
						cr.plugins_.HTML_iFrame_Pode.prototype.acts.Destroy,
						null,
						2266418087485096,
						false
					]
,					[
						29,
						cr.plugins_.cjs.prototype.acts.ExecuteJS,
						null,
						6498128857813702,
						false
						,[
						[
							1,
							[
								2,
								"CocoonJS.App.forwardAsync('hideBanner();');"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8859243085872332,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4912825272961155,
						false
						,[
						[
							11,
							"ACTIVE_MG"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						1,
						cr.plugins_.Sprite.prototype.acts.Destroy,
						null,
						1966765626367393,
						false
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9311829927291582,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					7455472131090216,
					false
					,[
					[
						1,
						[
							2,
							"setClientID"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6574768931008616,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7110826402861666,
						false
						,[
						[
							11,
							"client_ID"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						910962088177027,
						[
						[
							39,
							cr.plugins_.WebStorage.prototype.cnds.LocalStorageExists,
							null,
							0,
							false,
							false,
							false,
							7287168035182151,
							false
							,[
							[
								1,
								[
									2,
									"PLAYTOUCH_client_ID"
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							6658275272273004,
							false
							,[
							[
								11,
								"client_ID"
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										20,
										39,
										cr.plugins_.WebStorage.prototype.exps.LocalValue,
										true,
										null
										,[
[
											2,
											"PLAYTOUCH_client_ID"
										]
										]
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						5343774954276396,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							4350802764069101,
							false
						]
						],
						[
						[
							39,
							cr.plugins_.WebStorage.prototype.acts.StoreLocal,
							null,
							4226032757582859,
							false
							,[
							[
								1,
								[
									2,
									"test"
								]
							]
,							[
								7,
								[
									2,
									"a"
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						6451774012630468,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							4458479312958016,
							false
							,[
							[
								7,
								[
									20,
									39,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"test"
									]
									]
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"a"
								]
							]
							]
						]
						],
						[
						]
					]
,					[
						0,
						null,
						false,
						null,
						578881050823833,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							2724157284120127,
							false
						]
						],
						[
						[
							43,
							cr.plugins_.Cookie.prototype.acts.GetCookie,
							null,
							972946992037492,
							false
							,[
							[
								1,
								[
									2,
									"PLAYTOUCH_client_ID"
								]
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							2884826749736521,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								8628880807786859,
								false
								,[
								[
									7,
									[
										20,
										43,
										cr.plugins_.Cookie.prototype.exps.value,
										true,
										null
									]
								]
,								[
									8,
									1
								]
,								[
									7,
									[
										2,
										""
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								8261248175496015,
								false
								,[
								[
									7,
									[
										20,
										43,
										cr.plugins_.Cookie.prototype.exps.value,
										true,
										null
									]
								]
,								[
									8,
									1
								]
,								[
									7,
									[
										2,
										"0"
									]
								]
								]
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								9848913994534581,
								false
								,[
								[
									11,
									"client_ID"
								]
,								[
									7,
									[
										20,
										43,
										cr.plugins_.Cookie.prototype.exps.value,
										true,
										null
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5613552360970019,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						4105669679169102,
						false
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						5179936664447077,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							5091648443838187,
							false
							,[
							[
								11,
								"saveSRC"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"local"
								]
							]
							]
						]
						],
						[
						[
							39,
							cr.plugins_.WebStorage.prototype.acts.StoreLocal,
							null,
							3571100357685675,
							false
							,[
							[
								1,
								[
									2,
									"PLAYTOUCH_client_ID"
								]
							]
,							[
								7,
								[
									23,
									"client_ID"
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2815995931183629,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							4932718133134033,
							false
							,[
							[
								11,
								"saveSRC"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"cookie"
								]
							]
							]
						]
						],
						[
						[
							43,
							cr.plugins_.Cookie.prototype.acts.SetCookie,
							null,
							342085166823824,
							false
							,[
							[
								1,
								[
									2,
									"PLAYTOUCH_client_ID"
								]
							]
,							[
								1,
								[
									23,
									"client_ID"
								]
							]
,							[
								0,
								[
									0,
									730
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2048994748093888,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						9288918969285223,
						false
						,[
						[
							7,
							[
								23,
								"client_ID"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9429715187844974,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					2309431138305784,
					false
					,[
					[
						1,
						[
							2,
							"unlockNextLevel"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5060425797512964,
					[
					[
						40,
						cr.plugins_.Arr.prototype.cnds.CompareXY,
						null,
						0,
						false,
						false,
						false,
						3548688057585222,
						false
						,[
						[
							0,
							[
								4,
								[
									23,
									"levelNumber"
								]
								,[
									0,
									1
								]
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						9220744057199221,
						false
						,[
						[
							1,
							[
								2,
								"analytics"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"nbLvlUnlocked"
									]
								]
,
								[
									7,
									[
										2,
										"set"
									]
								]
,
								[
									7,
									[
										4,
										[
											23,
											"levelNumber"
										]
										,[
											0,
											1
										]
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5524789302798604,
					[
					],
					[
					[
						40,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						5792314322190032,
						false
						,[
						[
							0,
							[
								4,
								[
									23,
									"levelNumber"
								]
								,[
									0,
									1
								]
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				113413224068765,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					2568320666972269,
					false
					,[
					[
						1,
						[
							2,
							"analytics"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7752560906670759,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3377689021771647,
						false
						,[
						[
							11,
							"client_ID"
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
,					[
						42,
						cr.plugins_.Dictionary.prototype.cnds.CompareValue,
						null,
						0,
						false,
						false,
						false,
						2199641424278929,
						false
						,[
						[
							1,
							[
								2,
								"ANALYTICS"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"YES"
							]
						]
						]
					]
					],
					[
					[
						29,
						cr.plugins_.cjs.prototype.acts.ExecuteJS,
						null,
						3038562088596163,
						false
						,[
						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															10,
															[
																10,
																[
																	10,
																	[
																		2,
																		"sendAnalytics('"
																	]
																	,[
																		23,
																		"GAMENAME"
																	]
																]
																,[
																	2,
																	"', "
																]
															]
															,[
																23,
																"client_ID"
															]
														]
														,[
															2,
															", '"
														]
													]
													,[
														20,
														27,
														cr.plugins_.Function.prototype.exps.Param,
														false,
														null
														,[
[
															0,
															0
														]
														]
													]
												]
												,[
													2,
													"', '"
												]
											]
											,[
												20,
												27,
												cr.plugins_.Function.prototype.exps.Param,
												false,
												null
												,[
[
													0,
													1
												]
												]
											]
										]
										,[
											2,
											"', "
										]
									]
									,[
										20,
										27,
										cr.plugins_.Function.prototype.exps.Param,
										false,
										null
										,[
[
											0,
											2
										]
										]
									]
								]
								,[
									2,
									");"
								]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				204761557157382,
				[
				[
					28,
					cr.plugins_.CJSAds.prototype.cnds.IsShowingBanner,
					null,
					0,
					false,
					false,
					false,
					4258319945749426,
					false
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				2355410947657683,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5573452809472978,
					false
					,[
					[
						1,
						[
							2,
							"pubWebView"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5390576839417343,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8148989896257078,
						false
						,[
						[
							11,
							"splashShown"
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1576623005702801,
						false
						,[
						[
							11,
							"ACTIVE_AD"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						1,
						"forcedLayoutName",
						1,
						"",
false,false,3191137058533148,false
					]
,					[
						0,
						null,
						false,
						null,
						44653317002033,
						[
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1180476316391217,
							false
							,[
							[
								11,
								"forcedLayoutName"
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutname
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1578675283125334,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							314411452280538,
							false
							,[
							[
								7,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.ParamCount,
									false,
									null
								]
							]
,							[
								8,
								4
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5862004794296869,
							false
							,[
							[
								11,
								"forcedLayoutName"
							]
,							[
								7,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Param,
									false,
									null
									,[
[
										0,
										0
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						634220938106701,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							4426241903763492,
							false
							,[
							[
								11,
								"forcedLayoutName"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"pause"
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							230679994239838,
							false
							,[
							[
								1,
								[
									2,
									"interPause"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						4711043628581194,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							false,
							false,
							8812076958817624,
							false
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							4019633023860061,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								8512117616982189,
								false
								,[
								[
									11,
									"forcedLayoutName"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										2,
										"GameOver"
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								5525901436043644,
								[
								[
									42,
									cr.plugins_.Dictionary.prototype.cnds.HasKey,
									null,
									0,
									false,
									false,
									false,
									4852349340227487,
									false
									,[
									[
										1,
										[
											2,
											"AD_FREQ"
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									3043424305044722,
									false
									,[
									[
										7,
										[
											8,
											[
												23,
												"fullscreenAdTriggerCount"
											]
											,[
												19,
												cr.system_object.prototype.exps["int"]
												,[
[
													20,
													42,
													cr.plugins_.Dictionary.prototype.exps.Get,
													false,
													null
													,[
[
														2,
														"AD_FREQ"
													]
													]
												]
												]
											]
										]
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									29,
									cr.plugins_.cjs.prototype.acts.ExecuteJS,
									null,
									5220838183942122,
									false
									,[
									[
										1,
										[
											2,
											"CocoonJS.App.forwardAsync('hideBanner();');"
										]
									]
									]
								]
								]
								,[
								[
									0,
									null,
									false,
									null,
									7890404743217052,
									[
									[
										42,
										cr.plugins_.Dictionary.prototype.cnds.CompareValue,
										null,
										0,
										false,
										false,
										false,
										1467227645770974,
										false
										,[
										[
											1,
											[
												2,
												"SHOW_AD"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												2,
												"YES"
											]
										]
										]
									]
									],
									[
									[
										28,
										cr.plugins_.CJSAds.prototype.acts.ShowBanner,
										null,
										8377460184726912,
										false
										,[
										[
											3,
											1
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									6374064442417177,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										4287318940663488,
										false
									]
									],
									[
									[
										28,
										cr.plugins_.CJSAds.prototype.acts.HideBanner,
										null,
										3983930304157061,
										false
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								2322761210178724,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Else,
									null,
									0,
									false,
									false,
									false,
									4212218744586194,
									false
								]
,								[
									42,
									cr.plugins_.Dictionary.prototype.cnds.HasKey,
									null,
									0,
									false,
									false,
									false,
									2749616945559961,
									false
									,[
									[
										1,
										[
											2,
											"AD_FREQ"
										]
									]
									]
								]
								],
								[
								[
									28,
									cr.plugins_.CJSAds.prototype.acts.HideBanner,
									null,
									504129581458615,
									false
								]
								]
								,[
								[
									0,
									null,
									false,
									null,
									6141924452384903,
									[
									[
										42,
										cr.plugins_.Dictionary.prototype.cnds.CompareValue,
										null,
										0,
										false,
										false,
										false,
										2873475728976184,
										false
										,[
										[
											1,
											[
												2,
												"SHOW_APPLIFT"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												2,
												"YES"
											]
										]
										]
									]
									],
									[
									[
										29,
										cr.plugins_.cjs.prototype.acts.ExecuteJS,
										null,
										9167182886308202,
										false
										,[
										[
											1,
											[
												10,
												[
													10,
													[
														10,
														[
															10,
															[
																2,
																"CocoonJS.App.forwardAsync('loadIframedPub("
															]
															,[
																23,
																"forcedLayoutName"
															]
														]
														,[
															2,
															", "
														]
													]
													,[
														23,
														"fullscreenAdTriggerCount"
													]
												]
												,[
													2,
													");');"
												]
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									1470447282485477,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										5967737759176862,
										false
									]
									],
									[
									[
										29,
										cr.plugins_.cjs.prototype.acts.ExecuteJS,
										null,
										9689889591212013,
										false
										,[
										[
											1,
											[
												2,
												"CocoonJS.App.forwardAsync('hideBanner();');"
											]
										]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								4738643772546299,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Else,
									null,
									0,
									false,
									false,
									false,
									3273262936228364,
									false
								]
								],
								[
								[
									28,
									cr.plugins_.CJSAds.prototype.acts.HideBanner,
									null,
									4861202736516923,
									false
								]
,								[
									29,
									cr.plugins_.cjs.prototype.acts.ExecuteJS,
									null,
									5946497554452111,
									false
									,[
									[
										1,
										[
											2,
											"CocoonJS.App.forwardAsync('hideBanner();');"
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							5348897113520224,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								610466402434975,
								false
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								4473416332970186,
								[
								[
									42,
									cr.plugins_.Dictionary.prototype.cnds.HasKey,
									null,
									0,
									false,
									false,
									false,
									8569308623092281,
									false
									,[
									[
										1,
										[
											10,
											[
												2,
												"AD_"
											]
											,[
												23,
												"forcedLayoutName"
											]
										]
									]
									]
								]
,								[
									42,
									cr.plugins_.Dictionary.prototype.cnds.CompareValue,
									null,
									0,
									false,
									false,
									false,
									8998266245862386,
									false
									,[
									[
										1,
										[
											10,
											[
												2,
												"AD_"
											]
											,[
												23,
												"forcedLayoutName"
											]
										]
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											2,
											"Natif"
										]
									]
									]
								]
								],
								[
								[
									29,
									cr.plugins_.cjs.prototype.acts.ExecuteJS,
									null,
									2986537483002195,
									false
									,[
									[
										1,
										[
											2,
											"CocoonJS.App.forwardAsync('hideBanner();');"
										]
									]
									]
								]
								]
								,[
								[
									0,
									null,
									false,
									null,
									5098691176017945,
									[
									[
										42,
										cr.plugins_.Dictionary.prototype.cnds.CompareValue,
										null,
										0,
										false,
										false,
										false,
										1482609253681226,
										false
										,[
										[
											1,
											[
												2,
												"SHOW_AD"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												2,
												"YES"
											]
										]
										]
									]
									],
									[
									[
										28,
										cr.plugins_.CJSAds.prototype.acts.ShowBanner,
										null,
										7474747203096601,
										false
										,[
										[
											3,
											1
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									3768322175580546,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										3158848221928601,
										false
									]
									],
									[
									[
										28,
										cr.plugins_.CJSAds.prototype.acts.HideBanner,
										null,
										3606448851083403,
										false
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								6254695778877504,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Else,
									null,
									0,
									false,
									false,
									false,
									6453247188133494,
									false
								]
,								[
									42,
									cr.plugins_.Dictionary.prototype.cnds.HasKey,
									null,
									0,
									false,
									false,
									false,
									3027007881971206,
									false
									,[
									[
										1,
										[
											10,
											[
												2,
												"AD_"
											]
											,[
												23,
												"forcedLayoutName"
											]
										]
									]
									]
								]
,								[
									42,
									cr.plugins_.Dictionary.prototype.cnds.CompareValue,
									null,
									0,
									false,
									false,
									false,
									6261500601802014,
									false
									,[
									[
										1,
										[
											10,
											[
												2,
												"AD_"
											]
											,[
												23,
												"forcedLayoutName"
											]
										]
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											2,
											"Iframe"
										]
									]
									]
								]
								],
								[
								[
									28,
									cr.plugins_.CJSAds.prototype.acts.HideBanner,
									null,
									6419286118486812,
									false
								]
								]
								,[
								[
									0,
									null,
									false,
									null,
									5323423737892385,
									[
									[
										42,
										cr.plugins_.Dictionary.prototype.cnds.CompareValue,
										null,
										0,
										false,
										false,
										false,
										987716575417697,
										false
										,[
										[
											1,
											[
												2,
												"SHOW_APPLIFT"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												2,
												"YES"
											]
										]
										]
									]
									],
									[
									[
										29,
										cr.plugins_.cjs.prototype.acts.ExecuteJS,
										null,
										2357810149693043,
										false
										,[
										[
											1,
											[
												10,
												[
													10,
													[
														10,
														[
															10,
															[
																2,
																"CocoonJS.App.forwardAsync('loadIframedPub("
															]
															,[
																23,
																"forcedLayoutName"
															]
														]
														,[
															2,
															", "
														]
													]
													,[
														23,
														"fullscreenAdTriggerCount"
													]
												]
												,[
													2,
													");');"
												]
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									4185546374467122,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										2979702636501149,
										false
									]
									],
									[
									[
										29,
										cr.plugins_.cjs.prototype.acts.ExecuteJS,
										null,
										1033137787964244,
										false
										,[
										[
											1,
											[
												2,
												"CocoonJS.App.forwardAsync('hideBanner();');"
											]
										]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								9992212248358849,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Else,
									null,
									0,
									false,
									false,
									false,
									5070289899299926,
									false
								]
								],
								[
								[
									28,
									cr.plugins_.CJSAds.prototype.acts.HideBanner,
									null,
									1324584876019546,
									false
								]
,								[
									29,
									cr.plugins_.cjs.prototype.acts.ExecuteJS,
									null,
									3332718366618036,
									false
									,[
									[
										1,
										[
											2,
											"CocoonJS.App.forwardAsync('hideBanner();');"
										]
									]
									]
								]
,								[
									33,
									cr.plugins_.HTML_iFrame_Pode.prototype.acts.SetVisible,
									null,
									1044723151093546,
									false
									,[
									[
										3,
										0
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						6336172971811172,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							true,
							false,
							2416409922079273,
							false
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							6542781694199003,
							[
							[
								42,
								cr.plugins_.Dictionary.prototype.cnds.HasKey,
								null,
								0,
								false,
								false,
								false,
								4009127055748272,
								false
								,[
								[
									1,
									[
										10,
										[
											2,
											"AD_HTML_"
										]
										,[
											23,
											"forcedLayoutName"
										]
									]
								]
								]
							]
,							[
								42,
								cr.plugins_.Dictionary.prototype.cnds.CompareValue,
								null,
								0,
								false,
								false,
								false,
								3243113236599316,
								false
								,[
								[
									1,
									[
										10,
										[
											2,
											"AD_HTML_"
										]
										,[
											23,
											"forcedLayoutName"
										]
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										2,
										"YES"
									]
								]
								]
							]
							],
							[
							[
								33,
								cr.plugins_.HTML_iFrame_Pode.prototype.acts.SetURL,
								null,
								1701336920308963,
								false
								,[
								[
									1,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															10,
															[
																10,
																[
																	10,
																	[
																		10,
																		[
																			2,
																			"http://games.playtouch.net/ad/IGBanner/index.php?gamename="
																		]
																		,[
																			23,
																			"GAMENAME"
																		]
																	]
																	,[
																		2,
																		"&layout="
																	]
																]
																,[
																	23,
																	"forcedLayoutName"
																]
															]
															,[
																2,
																"&triggerCount="
															]
														]
														,[
															23,
															"fullscreenAdTriggerCount"
														]
													]
													,[
														2,
														"&screenH="
													]
												]
												,[
													7,
													[
														19,
														cr.system_object.prototype.exps.windowheight
													]
													,[
														20,
														25,
														cr.plugins_.Browser.prototype.exps.DevicePixelRatio,
														false,
														null
													]
												]
											]
											,[
												2,
												"&screenW="
											]
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowwidth
											]
											,[
												20,
												25,
												cr.plugins_.Browser.prototype.exps.DevicePixelRatio,
												false,
												null
											]
										]
									]
								]
								]
							]
,							[
								33,
								cr.plugins_.HTML_iFrame_Pode.prototype.acts.SetVisible,
								null,
								5893431586491221,
								false
								,[
								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							632934263869405,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								8035818995697435,
								false
							]
							],
							[
							[
								33,
								cr.plugins_.HTML_iFrame_Pode.prototype.acts.SetVisible,
								null,
								3932693621366912,
								false
								,[
								[
									3,
									0
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7203538859426247,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					63558750468982,
					false
					,[
					[
						1,
						[
							2,
							"initDefaultConfig"
						]
					]
					]
				]
				],
				[
				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					7168271310623542,
					false
					,[
					[
						1,
						[
							2,
							"AD_FREQ"
						]
					]
,					[
						7,
						[
							2,
							"2"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					3130299791729142,
					false
					,[
					[
						1,
						[
							2,
							"INTER_FREQ"
						]
					]
,					[
						7,
						[
							2,
							"2"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					6461632514054113,
					false
					,[
					[
						1,
						[
							2,
							"SHOW_APPLIFT"
						]
					]
,					[
						7,
						[
							2,
							"YES"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					1473059767113821,
					false
					,[
					[
						1,
						[
							2,
							"SHOW_AD"
						]
					]
,					[
						7,
						[
							2,
							"YES"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					9928461355435537,
					false
					,[
					[
						1,
						[
							2,
							"AD_Splash"
						]
					]
,					[
						7,
						[
							2,
							"Natif"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					5406834001895956,
					false
					,[
					[
						1,
						[
							2,
							"AD_LevelSelect"
						]
					]
,					[
						7,
						[
							2,
							"Natif"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					1246670627830192,
					false
					,[
					[
						1,
						[
							2,
							"AD_GameMain"
						]
					]
,					[
						7,
						[
							2,
							"NO"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					5538769301176781,
					false
					,[
					[
						1,
						[
							2,
							"AD_pause"
						]
					]
,					[
						7,
						[
							2,
							"Natif"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					1135861489281567,
					false
					,[
					[
						1,
						[
							2,
							"RATE_FREQ"
						]
					]
,					[
						7,
						[
							2,
							"1"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					1462616485870833,
					false
					,[
					[
						1,
						[
							2,
							"AD_HTML_Splash"
						]
					]
,					[
						7,
						[
							2,
							"YES"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					7398962501279096,
					false
					,[
					[
						1,
						[
							2,
							"AD_HTML_LevelSelect"
						]
					]
,					[
						7,
						[
							2,
							"YES"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					6856743410531605,
					false
					,[
					[
						1,
						[
							2,
							"AD_HTML_GameMain"
						]
					]
,					[
						7,
						[
							2,
							"NO"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					5295994368086164,
					false
					,[
					[
						1,
						[
							2,
							"AD_HTML_GameOver"
						]
					]
,					[
						7,
						[
							2,
							"YES"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					8693091212738751,
					false
					,[
					[
						1,
						[
							2,
							"AD_HTML_pause"
						]
					]
,					[
						7,
						[
							2,
							"YES"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.acts.AddKey,
					null,
					5796684061050405,
					false
					,[
					[
						1,
						[
							2,
							"ANALYTICS"
						]
					]
,					[
						7,
						[
							2,
							"NO"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9787944603700791,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					6146438558990337,
					false
					,[
					[
						1,
						[
							2,
							"loadConfigFromServer"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"nbResult",
					0,
					0,
false,false,9196785774781347,false
				]
,				[
					0,
					null,
					false,
					null,
					6885596325654337,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4780895651467223,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"nothingToLoad"
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					4814554660429055,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						2907937694873736,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2827999677913799,
						false
						,[
						[
							11,
							"nbResult"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.tokencount
								,[
[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Param,
									false,
									null
									,[
[
										0,
										0
									]
									]
								]
,[
									2,
									","
								]
								]
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2312171184568588,
						[
						[
							-1,
							cr.system_object.prototype.cnds.For,
							null,
							0,
							true,
							false,
							false,
							3549115743389734,
							false
							,[
							[
								1,
								[
									2,
									"eachParam"
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									5,
									[
										23,
										"nbResult"
									]
									,[
										0,
										1
									]
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							7559740270404387,
							[
							[
								42,
								cr.plugins_.Dictionary.prototype.cnds.HasKey,
								null,
								0,
								false,
								true,
								false,
								8590138827917777,
								false
								,[
								[
									1,
									[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												20,
												27,
												cr.plugins_.Function.prototype.exps.Param,
												false,
												null
												,[
[
													0,
													0
												]
												]
											]
,[
												19,
												cr.system_object.prototype.exps.loopindex
											]
,[
												2,
												","
											]
											]
										]
,[
											0,
											0
										]
,[
											2,
											"="
										]
										]
									]
								]
								]
							]
							],
							[
							[
								42,
								cr.plugins_.Dictionary.prototype.acts.AddKey,
								null,
								581972863661945,
								false
								,[
								[
									1,
									[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												20,
												27,
												cr.plugins_.Function.prototype.exps.Param,
												false,
												null
												,[
[
													0,
													0
												]
												]
											]
,[
												19,
												cr.system_object.prototype.exps.loopindex
											]
,[
												2,
												","
											]
											]
										]
,[
											0,
											0
										]
,[
											2,
											"="
										]
										]
									]
								]
,								[
									7,
									[
										19,
										cr.system_object.prototype.exps.replace
										,[
[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												19,
												cr.system_object.prototype.exps.tokenat
												,[
[
													20,
													27,
													cr.plugins_.Function.prototype.exps.Param,
													false,
													null
													,[
[
														0,
														0
													]
													]
												]
,[
													19,
													cr.system_object.prototype.exps.loopindex
												]
,[
													2,
													","
												]
												]
											]
,[
												0,
												1
											]
,[
												2,
												"="
											]
											]
										]
,[
											2,
											"%3D"
										]
,[
											2,
											"="
										]
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							5083531261042818,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								9485072443785916,
								false
							]
							],
							[
							[
								42,
								cr.plugins_.Dictionary.prototype.acts.SetKey,
								null,
								6015998167220181,
								false
								,[
								[
									1,
									[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												20,
												27,
												cr.plugins_.Function.prototype.exps.Param,
												false,
												null
												,[
[
													0,
													0
												]
												]
											]
,[
												19,
												cr.system_object.prototype.exps.loopindex
											]
,[
												2,
												","
											]
											]
										]
,[
											0,
											0
										]
,[
											2,
											"="
										]
										]
									]
								]
,								[
									7,
									[
										19,
										cr.system_object.prototype.exps.replace
										,[
[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												19,
												cr.system_object.prototype.exps.tokenat
												,[
[
													20,
													27,
													cr.plugins_.Function.prototype.exps.Param,
													false,
													null
													,[
[
														0,
														0
													]
													]
												]
,[
													19,
													cr.system_object.prototype.exps.loopindex
												]
,[
													2,
													","
												]
												]
											]
,[
												0,
												1
											]
,[
												2,
												"="
											]
											]
										]
,[
											2,
											"%3D"
										]
,[
											2,
											"="
										]
										]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2707827709888575,
						[
						[
							42,
							cr.plugins_.Dictionary.prototype.cnds.HasKey,
							null,
							0,
							false,
							false,
							false,
							6089223304765062,
							false
							,[
							[
								1,
								[
									2,
									"clientID"
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9809848432581138,
							false
							,[
							[
								11,
								"client_ID"
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										20,
										42,
										cr.plugins_.Dictionary.prototype.exps.Get,
										false,
										null
										,[
[
											2,
											"clientID"
										]
										]
									]
									]
								]
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							5536806332851375,
							[
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								9951119207137657,
								false
								,[
								[
									1,
									[
										2,
										"setClientID"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2732860253840263,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5598421456361428,
					false
					,[
					[
						1,
						[
							2,
							"showRate"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5837692215194004,
					[
					[
						42,
						cr.plugins_.Dictionary.prototype.cnds.HasKey,
						null,
						0,
						false,
						false,
						false,
						2621167023930963,
						false
						,[
						[
							1,
							[
								2,
								"rate"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						true,
						false,
						5172978885763046,
						false
						,[
						[
							11,
							"isTheFirstStart"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetLayerVisible,
						null,
						1658948447635747,
						false
						,[
						[
							5,
							[
								2,
								"rate"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8150584897599371,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						4773182892182228,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1197111520483819,
						false
						,[
						[
							11,
							"splashShown"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5710467841046402,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					3804258418119262,
					false
					,[
					[
						1,
						[
							2,
							"hideRate"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					7590214150167914,
					false
					,[
					[
						5,
						[
							2,
							"rate"
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9005245615290359,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5720542933662412,
					false
					,[
					[
						1,
						[
							2,
							"doRate"
						]
					]
					]
				]
,				[
					42,
					cr.plugins_.Dictionary.prototype.cnds.HasKey,
					null,
					0,
					false,
					false,
					false,
					6693563444191555,
					false
					,[
					[
						1,
						[
							2,
							"rate"
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					9551472662630915,
					false
					,[
					[
						1,
						[
							2,
							"analytics"
						]
					]
,					[
						13,
													[
								7,
								[
									2,
									"rateAction"
								]
							]
,
							[
								7,
								[
									2,
									"add"
								]
							]
,
							[
								7,
								[
									0,
									1
								]
							]
					]
					]
				]
,				[
					25,
					cr.plugins_.Browser.prototype.acts.GoToURLWindow,
					null,
					8542895130122172,
					false
					,[
					[
						1,
						[
							20,
							42,
							cr.plugins_.Dictionary.prototype.exps.Get,
							false,
							null
							,[
[
								2,
								"rate"
							]
							]
						]
					]
,					[
						1,
						[
							2,
							"NewWindow"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7169099435599065,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					2927697613723494,
					false
					,[
					[
						1,
						[
							2,
							"showInters"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1137283138730428,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetLayerVisible,
						null,
						778147173117276,
						false
						,[
						[
							5,
							[
								2,
								"inter"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						34,
						cr.plugins_.HTML_iFrame_Pode.prototype.acts.SetURL,
						null,
						5564406551478096,
						false
						,[
						[
							1,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													10,
													[
														10,
														[
															2,
															"http://games.playtouch.net/ad/IGInter/index.php?gamename="
														]
														,[
															23,
															"GAMENAME"
														]
													]
													,[
														2,
														"&triggerCount="
													]
												]
												,[
													23,
													"fullscreenAdTriggerCount"
												]
											]
											,[
												2,
												"&screenH="
											]
										]
										,[
											7,
											[
												19,
												cr.system_object.prototype.exps.windowheight
											]
											,[
												20,
												25,
												cr.plugins_.Browser.prototype.exps.DevicePixelRatio,
												false,
												null
											]
										]
									]
									,[
										2,
										"&screenW="
									]
								]
								,[
									7,
									[
										19,
										cr.system_object.prototype.exps.windowwidth
									]
									,[
										20,
										25,
										cr.plugins_.Browser.prototype.exps.DevicePixelRatio,
										false,
										null
									]
								]
							]
						]
						]
					]
,					[
						16,
						cr.plugins_.TiledBg.prototype.acts.SetSize,
						null,
						9884021209274071,
						false
						,[
						[
							0,
							[
								20,
								34,
								cr.plugins_.HTML_iFrame_Pode.prototype.exps.Width,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								34,
								cr.plugins_.HTML_iFrame_Pode.prototype.exps.Height,
								false,
								null
							]
						]
						]
					]
,					[
						16,
						cr.plugins_.TiledBg.prototype.acts.SetPosToObject,
						null,
						6345930449363031,
						false
						,[
						[
							4,
							34
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1237484125863429,
				[
				[
					-1,
					cr.system_object.prototype.cnds.LayerVisible,
					null,
					0,
					false,
					false,
					false,
					5219407825042732,
					false
					,[
					[
						5,
						[
							2,
							"inter"
						]
					]
					]
				]
				],
				[
				[
					6,
					cr.plugins_.Sprite.prototype.acts.MoveToTop,
					null,
					8056702913764564,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7035908168316657,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					3080039264299628,
					false
					,[
					[
						1,
						[
							2,
							"hideInters"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					3462808816445497,
					false
					,[
					[
						5,
						[
							2,
							"inter"
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					9063575105094318,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						1639294452736861,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutname
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"GameOver"
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						5512540115094862,
						false
						,[
						[
							1,
							[
								2,
								"processQueue"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"no loop"
									]
								]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7628102095833418,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					7029995397776193,
					false
					,[
					[
						1,
						[
							2,
							"prepareOverlays"
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					1742024979610902,
					false
					,[
					[
						1,
						[
							2,
							"hideOverlay"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					695028058299977,
					false
					,[
					[
						1,
						[
							2,
							"hideRate"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					8158936329140204,
					false
					,[
					[
						1,
						[
							2,
							"hideInters"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					48,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8017050798433023,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2052615587895673,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					7094031215555745,
					false
					,[
					[
						1,
						[
							2,
							"showOverlay"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5847563232263244,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.CompareParam,
						null,
						0,
						false,
						false,
						false,
						2170678934999577,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						3075381416046097,
						[
						[
							19,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							3009280259744644,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							19,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							1500613038230044,
							false
							,[
							[
								1,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Param,
									false,
									null
									,[
[
										0,
										0
									]
									]
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							13,
							cr.plugins_.TiledBg.prototype.acts.SetVisible,
							null,
							1632476769509616,
							false
							,[
							[
								3,
								1
							]
							]
						]
,						[
							19,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							6268193978531772,
							false
							,[
							[
								3,
								1
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3151379291191514,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					466397527234956,
					false
					,[
					[
						1,
						[
							2,
							"hideOverlay"
						]
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.TiledBg.prototype.acts.SetVisible,
					null,
					4251885900277194,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					2176017526709177,
					[
					[
						19,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						4850182329920309,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						19,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						1949466522608334,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4292385427103958,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1970131091036513,
					false
					,[
					[
						1,
						[
							2,
							"initStarsData"
						]
					]
					]
				]
				],
				[
				[
					30,
					cr.plugins_.AJAX.prototype.acts.RequestFile,
					null,
					6512506335137142,
					false
					,[
					[
						1,
						[
							2,
							"starUnlock"
						]
					]
,					[
						12,
						"starsunlocked.csv"
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9403866863611244,
				[
				[
					30,
					cr.plugins_.AJAX.prototype.cnds.OnComplete,
					null,
					1,
					false,
					false,
					false,
					3916912382809276,
					false
					,[
					[
						1,
						[
							2,
							"starUnlock"
						]
					]
					]
				]
				],
				[
				[
					41,
					cr.plugins_.Rex_CSV.prototype.acts.LoadCSV,
					null,
					8525897119674567,
					false
					,[
					[
						1,
						[
							20,
							30,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9951494139599211,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					6805780469726366,
					false
					,[
					[
						1,
						[
							2,
							"genNewSave"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					550198074752985,
					false
					,[
					[
						11,
						"isTheFirstStart"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
				,[
				[
					1,
					"base1",
					1,
					"{\"c2array\":true,\"size\":[",
false,false,8131478819174079,false
				]
,				[
					1,
					"base2",
					1,
					",3,1],\"data\":[[[0],[-1],[0]],[[1],[-1],[0]]",
false,false,3719968124947308,false
				]
,				[
					1,
					"lvlTPL",
					1,
					",[[0],[-1],[0]]",
false,false,5630232040750689,false
				]
,				[
					1,
					"return",
					1,
					"",
false,false,2956770024193285,false
				]
,				[
					0,
					null,
					false,
					null,
					4220987152909336,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						485417291727939,
						false
						,[
						[
							11,
							"return"
						]
,						[
							7,
							[
								10,
								[
									10,
									[
										23,
										"base1"
									]
									,[
										5,
										[
											23,
											"MAX_LVL"
										]
										,[
											0,
											1
										]
									]
								]
								,[
									23,
									"base2"
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1105763760774778,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Repeat,
						null,
						0,
						true,
						false,
						false,
						4835385079373319,
						false
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.max
								,[
[
									0,
									0
								]
,[
									5,
									[
										23,
										"MAX_LVL"
									]
									,[
										0,
										1
									]
								]
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						4318664171685753,
						false
						,[
						[
							11,
							"return"
						]
,						[
							7,
							[
								10,
								[
									23,
									"return"
								]
								,[
									23,
									"lvlTPL"
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1190978740790698,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1330849883798591,
						false
						,[
						[
							11,
							"return"
						]
,						[
							7,
							[
								10,
								[
									23,
									"return"
								]
								,[
									2,
									"]}"
								]
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						6419826345968059,
						false
						,[
						[
							7,
							[
								23,
								"return"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3314703496259837,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					6962674674765037,
					false
					,[
					[
						1,
						[
							2,
							"initWorkingData"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4769098079252897,
					false
					,[
					[
						11,
						"waitingForServer"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
				,[
				[
					1,
					"tempCookie",
					1,
					"",
false,false,9026919072449882,false
				]
,				[
					0,
					null,
					false,
					null,
					4227571457572895,
					[
					[
						39,
						cr.plugins_.WebStorage.prototype.cnds.LocalStorageExists,
						null,
						0,
						false,
						true,
						false,
						5993631715389873,
						false
						,[
						[
							1,
							[
								23,
								"GAMENAME"
							]
						]
						]
					]
					],
					[
					[
						39,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						361070840884076,
						false
						,[
						[
							1,
							[
								23,
								"GAMENAME"
							]
						]
,						[
							7,
							[
								2,
								"empty"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					80481946563863,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9272084967664397,
						false
						,[
						[
							7,
							[
								20,
								39,
								cr.plugins_.WebStorage.prototype.exps.LocalValue,
								true,
								null
								,[
[
									23,
									"GAMENAME"
								]
								]
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8343079364818111,
						false
						,[
						[
							11,
							"saveSRC"
						]
,						[
							7,
							[
								2,
								"local"
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						true,
						null,
						1466371005114022,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							4245135959142307,
							false
							,[
							[
								7,
								[
									20,
									39,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										23,
										"GAMENAME"
									]
									]
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"empty"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							4576790475418936,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.find
									,[
[
										20,
										39,
										cr.plugins_.WebStorage.prototype.exps.LocalValue,
										true,
										null
										,[
[
											23,
											"GAMENAME"
										]
										]
									]
,[
										2,
										"["
									]
									]
								]
							]
,							[
								8,
								1
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						],
						[
						[
							40,
							cr.plugins_.Arr.prototype.acts.JSONLoad,
							null,
							2591259969992685,
							false
							,[
							[
								1,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"genNewSave"
									]
									]
								]
							]
							]
						]
,						[
							39,
							cr.plugins_.WebStorage.prototype.acts.StoreLocal,
							null,
							2875288087733534,
							false
							,[
							[
								1,
								[
									23,
									"GAMENAME"
								]
							]
,							[
								7,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"cryptCookie"
									]
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4095188182775815,
							false
							,[
							[
								11,
								"waitingForServer"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1509498577008518,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							1444101876314188,
							false
						]
						],
						[
						[
							40,
							cr.plugins_.Arr.prototype.acts.JSONLoad,
							null,
							6956419201804324,
							false
							,[
							[
								1,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"uncryptCookie"
									]
,[
										20,
										39,
										cr.plugins_.WebStorage.prototype.exps.LocalValue,
										true,
										null
										,[
[
											23,
											"GAMENAME"
										]
										]
									]
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							229732789965111,
							false
							,[
							[
								11,
								"waitingForServer"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5095454631741956,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						4387406786548832,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9767217937472293,
						false
						,[
						[
							11,
							"saveSRC"
						]
,						[
							7,
							[
								2,
								"cookie"
							]
						]
						]
					]
,					[
						43,
						cr.plugins_.Cookie.prototype.acts.GetCookie,
						null,
						8631816349133635,
						false
						,[
						[
							1,
							[
								23,
								"GAMENAME"
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						474835020358231,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							5547591532813917,
							false
							,[
							[
								7,
								[
									20,
									43,
									cr.plugins_.Cookie.prototype.exps.value,
									true,
									null
								]
							]
,							[
								8,
								1
							]
,							[
								7,
								[
									2,
									""
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							720764158436071,
							false
							,[
							[
								7,
								[
									20,
									43,
									cr.plugins_.Cookie.prototype.exps.value,
									true,
									null
								]
							]
,							[
								8,
								1
							]
,							[
								7,
								[
									2,
									"0"
								]
							]
							]
						]
						],
						[
						[
							40,
							cr.plugins_.Arr.prototype.acts.JSONLoad,
							null,
							2099415697793028,
							false
							,[
							[
								1,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"uncryptCookie"
									]
,[
										20,
										43,
										cr.plugins_.Cookie.prototype.exps.value,
										true,
										null
									]
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9869055647385161,
							false
							,[
							[
								11,
								"waitingForServer"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						4517504951716278,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							2889818756264687,
							false
						]
						],
						[
						[
							40,
							cr.plugins_.Arr.prototype.acts.JSONLoad,
							null,
							6573541330449406,
							false
							,[
							[
								1,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"genNewSave"
									]
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1105154772760476,
							false
							,[
							[
								11,
								"waitingForServer"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				49727832917524,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					2916539294460585,
					false
					,[
					[
						1,
						[
							2,
							"uncryptCookie"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"base1",
					1,
					"{\"c2array\":true,\"size\":[",
false,false,4193193640415532,false
				]
,				[
					1,
					"base2",
					1,
					",3,1],\"data\":[",
false,false,4571334396013438,false
				]
,				[
					1,
					"uncryptedJSON",
					1,
					"",
false,false,2858377321333776,false
				]
,				[
					0,
					null,
					false,
					null,
					4232083770611774,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1648016505322166,
						false
						,[
						[
							11,
							"uncryptedJSON"
						]
,						[
							7,
							[
								10,
								[
									10,
									[
										23,
										"base1"
									]
									,[
										4,
										[
											23,
											"MAX_LVL"
										]
										,[
											0,
											1
										]
									]
								]
								,[
									23,
									"base2"
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9976716611661516,
					[
					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						1541481044868327,
						false
						,[
						[
							1,
							[
								2,
								"nonEmptyLevel"
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								5,
								[
									19,
									cr.system_object.prototype.exps.tokencount
									,[
[
										20,
										27,
										cr.plugins_.Function.prototype.exps.Param,
										false,
										null
										,[
[
											0,
											0
										]
										]
									]
,[
										2,
										"a"
									]
									]
								]
								,[
									0,
									1
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9572714527077589,
						false
						,[
						[
							11,
							"uncryptedJSON"
						]
,						[
							7,
							[
								10,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													23,
													"uncryptedJSON"
												]
												,[
													2,
													"[[1],["
												]
											]
											,[
												19,
												cr.system_object.prototype.exps.tokenat
												,[
[
													19,
													cr.system_object.prototype.exps.tokenat
													,[
[
														20,
														27,
														cr.plugins_.Function.prototype.exps.Param,
														false,
														null
														,[
[
															0,
															0
														]
														]
													]
,[
														19,
														cr.system_object.prototype.exps.loopindex
														,[
[
															2,
															"nonEmptyLevel"
														]
														]
													]
,[
														2,
														"a"
													]
													]
												]
,[
													0,
													0
												]
,[
													2,
													"s"
												]
												]
											]
										]
										,[
											2,
											"],["
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.tokenat
										,[
[
											19,
											cr.system_object.prototype.exps.tokenat
											,[
[
												20,
												27,
												cr.plugins_.Function.prototype.exps.Param,
												false,
												null
												,[
[
													0,
													0
												]
												]
											]
,[
												19,
												cr.system_object.prototype.exps.loopindex
												,[
[
													2,
													"nonEmptyLevel"
												]
												]
											]
,[
												2,
												"a"
											]
											]
										]
,[
											0,
											1
										]
,[
											2,
											"s"
										]
										]
									]
								]
								,[
									2,
									"]],"
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3351029981721076,
					[
					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						9962117984602946,
						false
						,[
						[
							1,
							[
								2,
								"emptyLevel"
							]
						]
,						[
							0,
							[
								19,
								cr.system_object.prototype.exps.tokencount
								,[
[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Param,
									false,
									null
									,[
[
										0,
										0
									]
									]
								]
,[
									2,
									"a"
								]
								]
							]
						]
,						[
							0,
							[
								4,
								[
									23,
									"MAX_LVL"
								]
								,[
									0,
									1
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						689678462330507,
						false
						,[
						[
							11,
							"uncryptedJSON"
						]
,						[
							7,
							[
								10,
								[
									23,
									"uncryptedJSON"
								]
								,[
									2,
									"[[0],[-1],[0]],"
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5778553248760869,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2427181326239367,
						false
						,[
						[
							11,
							"uncryptedJSON"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.left
								,[
[
									23,
									"uncryptedJSON"
								]
,[
									5,
									[
										19,
										cr.system_object.prototype.exps.len
										,[
[
											23,
											"uncryptedJSON"
										]
										]
									]
									,[
										0,
										1
									]
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8087174313282813,
						false
						,[
						[
							11,
							"uncryptedJSON"
						]
,						[
							7,
							[
								10,
								[
									23,
									"uncryptedJSON"
								]
								,[
									2,
									"]}"
								]
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						2540266479076045,
						false
						,[
						[
							7,
							[
								23,
								"uncryptedJSON"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4344348330849591,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					2912059774310389,
					false
					,[
					[
						1,
						[
							2,
							"cryptCookie"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"toWrite",
					1,
					"",
false,false,1879525057273186,false
				]
,				[
					0,
					null,
					false,
					null,
					8964492022694482,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9894073201296315,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						43,
						cr.plugins_.Cookie.prototype.acts.DelCookie,
						null,
						3901033954668363,
						false
						,[
						[
							1,
							[
								2,
								"test"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2815376781490601,
					[
					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						2052312784874582,
						false
						,[
						[
							1,
							[
								2,
								"lastLevel"
							]
						]
,						[
							0,
							[
								5,
								[
									20,
									40,
									cr.plugins_.Arr.prototype.exps.Width,
									false,
									null
								]
								,[
									0,
									1
								]
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						40,
						cr.plugins_.Arr.prototype.cnds.CompareXY,
						null,
						0,
						false,
						false,
						false,
						2363486789270571,
						false
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.loopindex
								,[
[
									2,
									"lastLevel"
								]
								]
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8984824349149336,
						false
						,[
						[
							11,
							"toWrite"
						]
,						[
							7,
							[
								10,
								[
									19,
									cr.system_object.prototype.exps.loopindex
									,[
[
										2,
										"lastLevel"
									]
									]
								]
								,[
									2,
									"_"
								]
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						7371334771788312,
						[
						[
							-1,
							cr.system_object.prototype.cnds.For,
							null,
							0,
							true,
							false,
							false,
							9143764862085189,
							false
							,[
							[
								1,
								[
									2,
									"eachLevel"
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								0,
								[
									19,
									cr.system_object.prototype.exps.loopindex
									,[
[
										2,
										"lastLevel"
									]
									]
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5514978539804005,
							false
							,[
							[
								11,
								"toWrite"
							]
,							[
								7,
								[
									10,
									[
										10,
										[
											10,
											[
												10,
												[
													23,
													"toWrite"
												]
												,[
													2,
													"a"
												]
											]
											,[
												20,
												40,
												cr.plugins_.Arr.prototype.exps.At,
												false,
												null
												,[
[
													19,
													cr.system_object.prototype.exps.loopindex
													,[
[
														2,
														"eachLevel"
													]
													]
												]
,[
													0,
													1
												]
												]
											]
										]
										,[
											2,
											"s"
										]
									]
									,[
										20,
										40,
										cr.plugins_.Arr.prototype.exps.At,
										false,
										null
										,[
[
											19,
											cr.system_object.prototype.exps.loopindex
											,[
[
												2,
												"eachLevel"
											]
											]
										]
,[
											0,
											2
										]
										]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						977453626102165,
						[
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.SetReturnValue,
							null,
							8945547066842273,
							false
							,[
							[
								7,
								[
									23,
									"toWrite"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.StopLoop,
							null,
							3116546352234404,
							false
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				847813594108711,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					774370434169073,
					false
					,[
					[
						1,
						[
							2,
							"saveDatas"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3595902093927711,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1690965728643614,
						false
						,[
						[
							11,
							"saveSRC"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"cookie"
							]
						]
						]
					]
					],
					[
					[
						43,
						cr.plugins_.Cookie.prototype.acts.SetCookie,
						null,
						8579247025977737,
						false
						,[
						[
							1,
							[
								23,
								"GAMENAME"
							]
						]
,						[
							1,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"cryptCookie"
								]
								]
							]
						]
,						[
							0,
							[
								0,
								730
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4306740742015279,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						4079515428171539,
						false
					]
					],
					[
					[
						39,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						7692154031152657,
						false
						,[
						[
							1,
							[
								23,
								"GAMENAME"
							]
						]
,						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"cryptCookie"
								]
								]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5722827112358498,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					8117318625413057,
					false
					,[
					[
						1,
						[
							2,
							"initLvlButt"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4451234738918887,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						9111680157711185,
						false
						,[
						[
							4,
							37
						]
						]
					]
					],
					[
					[
						37,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						7442745069359427,
						false
						,[
						[
							10,
							2
						]
,						[
							7,
							[
								21,
								37,
								false,
								null
								,1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8518198961844771,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						9572837833013523,
						false
						,[
						[
							4,
							38
						]
						]
					]
					],
					[
					[
						38,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						9147311418897958,
						false
						,[
						[
							10,
							2
						]
,						[
							7,
							[
								21,
								38,
								false,
								null
								,1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1846664781694062,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						7220950965264881,
						false
						,[
						[
							4,
							35
						]
						]
					]
					],
					[
					[
						35,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						4838756440479637,
						false
						,[
						[
							10,
							2
						]
,						[
							7,
							[
								21,
								35,
								false,
								null
								,1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5227868007324591,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						7584516566638862,
						false
						,[
						[
							4,
							21
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2121418851906851,
						false
						,[
						[
							10,
							2
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								0,
								-2000
							]
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetInstanceVar,
						null,
						3321727586966167,
						false
						,[
						[
							10,
							2
						]
,						[
							7,
							[
								21,
								21,
								false,
								null
								,1
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetText,
						null,
						4896432184085456,
						false
						,[
						[
							7,
							[
								21,
								21,
								false,
								null
								,1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7396860062807022,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6560245807856275,
						false
						,[
						[
							1,
							[
								2,
								"changePageTo"
							]
						]
,						[
							13,
															[
									7,
									[
										23,
										"lvlPageNb"
									]
								]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8262644447606579,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1182944252970428,
					false
					,[
					[
						1,
						[
							2,
							"showLvlForThisPage"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1280787831448196,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						9168055877099153,
						false
						,[
						[
							4,
							37
						]
						]
					]
					],
					[
					[
						37,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						9562343151560292,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								4,
								[
									21,
									37,
									false,
									null
									,2
								]
								,[
									6,
									[
										5,
										[
											23,
											"lvlPageNb"
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										20
									]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					29973298676289,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						865991529201281,
						false
						,[
						[
							4,
							38
						]
						]
					]
					],
					[
					[
						38,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						9331587480452945,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								4,
								[
									21,
									38,
									false,
									null
									,2
								]
								,[
									6,
									[
										5,
										[
											23,
											"lvlPageNb"
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										20
									]
								]
							]
						]
						]
					]
,					[
						38,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						3997336612581136,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						5175506693320463,
						[
						[
							40,
							cr.plugins_.Arr.prototype.cnds.CompareXY,
							null,
							0,
							false,
							false,
							false,
							6671746502719379,
							false
							,[
							[
								0,
								[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										21,
										38,
										false,
										null
										,1
									]
									]
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							38,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							9835484364945488,
							false
							,[
							[
								0,
								[
									0,
									1
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5428039516346502,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						2342284947567959,
						false
						,[
						[
							4,
							35
						]
						]
					]
					],
					[
					[
						35,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3591145361390456,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								4,
								[
									21,
									35,
									false,
									null
									,2
								]
								,[
									6,
									[
										5,
										[
											23,
											"lvlPageNb"
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										20
									]
								]
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						1942844283844433,
						[
						],
						[
						[
							35,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							6786902325799843,
							false
							,[
							[
								0,
								[
									20,
									40,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										21,
										35,
										false,
										null
										,1
									]
,[
										0,
										2
									]
									]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8309214858216283,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						3019820951436064,
						false
						,[
						[
							4,
							21
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetInstanceVar,
						null,
						5103102221101791,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								4,
								[
									21,
									21,
									false,
									null
									,2
								]
								,[
									6,
									[
										5,
										[
											23,
											"lvlPageNb"
										]
										,[
											0,
											1
										]
									]
									,[
										0,
										20
									]
								]
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetText,
						null,
						5390208992573757,
						false
						,[
						[
							7,
							[
								21,
								21,
								false,
								null
								,1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9237547221959747,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						7884322894815296,
						false
						,[
						[
							10,
							2
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								-2000
							]
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetText,
						null,
						9058408147630433,
						false
						,[
						[
							7,
							[
								10,
								[
									10,
									[
										10,
										[
											2,
											""
										]
										,[
											23,
											"lvlPageNb"
										]
									]
									,[
										2,
										" / "
									]
								]
								,[
									7,
									[
										23,
										"MAX_LVL"
									]
									,[
										0,
										20
									]
								]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9100365287665995,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					8494214593165681,
					false
					,[
					[
						1,
						[
							2,
							"changePageTo"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"pageTurned",
					0,
					0,
false,false,9665132456854855,false
				]
,				[
					0,
					null,
					false,
					null,
					4620766296851631,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.CompareParam,
						null,
						0,
						false,
						false,
						false,
						1731229459478222,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								7,
								[
									23,
									"MAX_LVL"
								]
								,[
									0,
									20
								]
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.cnds.CompareParam,
						null,
						0,
						false,
						false,
						false,
						4879420388101716,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8666505092678496,
						false
						,[
						[
							11,
							"lvlPageNb"
						]
,						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						3949460224325498,
						false
						,[
						[
							1,
							[
								2,
								"showLvlForThisPage"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						5797518595646446,
						false
						,[
						[
							11,
							"pageTurned"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						4272831994856072,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							8500740839866071,
							false
							,[
							[
								11,
								"pageTurned"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4420705689236602,
							false
							,[
							[
								11,
								"lvlPageNb"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							2184176861190334,
							false
							,[
							[
								1,
								[
									2,
									"changePageTo"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						6359949067025138,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							6128444454755248,
							false
							,[
							[
								11,
								"lvlPageNb"
							]
,							[
								8,
								5
							]
,							[
								7,
								[
									7,
									[
										23,
										"MAX_LVL"
									]
									,[
										0,
										20
									]
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							9278713045979907,
							[
							[
								2,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								1904286681375562,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										2,
										"next"
									]
								]
								]
							]
							],
							[
							[
								2,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								3874624646900256,
								false
								,[
								[
									3,
									0
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7124831817103593,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					6366815943750219,
					false
					,[
					[
						1,
						[
							2,
							"launchLevel"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8287501334487483,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6756403303738416,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						5424549462779249,
						false
						,[
						[
							11,
							"levelNumber"
						]
,						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5243365431339518,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						2232777271128032,
						false
						,[
						[
							1,
							[
								2,
								"gotoLayout"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"GameMain"
									]
								]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1514514719023291,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					8787692087736159,
					false
					,[
					[
						1,
						[
							2,
							"gotoLayout"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5802021372833029,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9710274469619872,
						false
						,[
						[
							11,
							"whereToGo"
						]
,						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						1317758875444987,
						false
						,[
						[
							1,
							[
								2,
								"showOverlay"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"loading"
									]
								]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						5902218484971343,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							5648216183889016,
							false
							,[
							[
								7,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.ParamCount,
									false,
									null
								]
							]
,							[
								8,
								3
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							7501619398604921,
							false
							,[
							[
								0,
								[
									23,
									"FORCE_LOAD_TIME"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.GoToLayoutByName,
							null,
							1629144074172155,
							false
							,[
							[
								1,
								[
									23,
									"whereToGo"
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5457676851258785,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						1541044481239754,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.GoToLayoutByName,
						null,
						9313592143659691,
						false
						,[
						[
							1,
							[
								23,
								"whereToGo"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7424789474189029,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					9331141182254033,
					false
					,[
					[
						1,
						[
							2,
							"allowAccess2NextLvl"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9175066576128936,
					false
					,[
					[
						11,
						"allowAccess2NextLvl"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					4,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6255924821756115,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5737183337297363,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					408898259578302,
					false
					,[
					[
						1,
						[
							2,
							"processQueue"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1297953976128078,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9145454186546119,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						7200238538762101,
						false
						,[
						[
							1,
							[
								2,
								"prepareOverlays"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					806667961508948,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						5427981337144832,
						false
						,[
						[
							11,
							"actionQueued"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"replay"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						7620711151318114,
						false
						,[
						[
							11,
							"restart"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.GoToLayout,
						null,
						8894014570755376,
						false
						,[
						[
							6,
							"GameMain"
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4725738642051057,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						9678866175066582,
						false
						,[
						[
							11,
							"actionQueued"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"levelSelect"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.GoToLayout,
						null,
						4335220173647969,
						false
						,[
						[
							6,
							"LevelSelect"
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5756645001183004,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7126051252866408,
						false
						,[
						[
							11,
							"actionQueued"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"next"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						9522222474207278,
						false
						,[
						[
							11,
							"levelNumber"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.GoToLayout,
						null,
						1974843109888915,
						false
						,[
						[
							6,
							"GameMain"
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9044525486623659,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9770563994129462,
						false
						,[
						[
							11,
							"actionQueued"
						]
,						[
							7,
							[
								2,
								""
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6467699082271444,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1662630365875503,
					false
					,[
					[
						1,
						[
							2,
							"prettyNumber"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"number",
					1,
					"",
false,false,8397702654492223,false
				]
,				[
					1,
					"sep",
					1,
					"",
false,false,7864692347052999,false
				]
,				[
					1,
					"ret",
					1,
					"",
false,false,9958194537096018,false
				]
,				[
					0,
					null,
					false,
					null,
					456829859700149,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6847453140949128,
						false
						,[
						[
							11,
							"number"
						]
,						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2369706777960426,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.CompareParam,
						null,
						0,
						false,
						false,
						false,
						8155720739889161,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								23,
								"sep"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2275759732335346,
						false
						,[
						[
							11,
							"sep"
						]
,						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									1
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9597647641945841,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4832802945022331,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.len
								,[
[
									23,
									"number"
								]
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						6299487005364866,
						[
						[
							-1,
							cr.system_object.prototype.cnds.While,
							null,
							0,
							true,
							false,
							false,
							2250879402149456,
							false
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							3068158310112676,
							[
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								129638837101102,
								false
								,[
								[
									11,
									"ret"
								]
,								[
									7,
									[
										10,
										[
											10,
											[
												19,
												cr.system_object.prototype.exps.right
												,[
[
													23,
													"number"
												]
,[
													0,
													3
												]
												]
											]
											,[
												23,
												"sep"
											]
										]
										,[
											23,
											"ret"
										]
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								1988502896776253,
								false
								,[
								[
									11,
									"number"
								]
,								[
									7,
									[
										19,
										cr.system_object.prototype.exps.left
										,[
[
											23,
											"number"
										]
,[
											5,
											[
												19,
												cr.system_object.prototype.exps.len
												,[
[
													23,
													"number"
												]
												]
											]
											,[
												0,
												3
											]
										]
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							4563447036827155,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								8124377595555399,
								false
								,[
								[
									7,
									[
										19,
										cr.system_object.prototype.exps.len
										,[
[
											23,
											"number"
										]
										]
									]
								]
,								[
									8,
									2
								]
,								[
									7,
									[
										0,
										3
									]
								]
								]
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.StopLoop,
								null,
								7438258179042623,
								false
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9967571648128753,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						712652017657585,
						false
						,[
						[
							11,
							"ret"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.left
								,[
[
									10,
									[
										10,
										[
											23,
											"number"
										]
										,[
											23,
											"sep"
										]
									]
									,[
										23,
										"ret"
									]
								]
,[
									5,
									[
										19,
										cr.system_object.prototype.exps.len
										,[
[
											10,
											[
												10,
												[
													23,
													"number"
												]
												,[
													23,
													"sep"
												]
											]
											,[
												23,
												"ret"
											]
										]
										]
									]
									,[
										0,
										1
									]
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					523565266471907,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4913228004980923,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.left
								,[
[
									23,
									"ret"
								]
,[
									0,
									1
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								23,
								"sep"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6763628291638835,
						false
						,[
						[
							11,
							"ret"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.right
								,[
[
									23,
									"ret"
								]
,[
									5,
									[
										19,
										cr.system_object.prototype.exps.len
										,[
[
											23,
											"ret"
										]
										]
									]
									,[
										0,
										1
									]
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5663232085622226,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2970102925758132,
						false
						,[
						[
							11,
							"ret"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						291342991808141,
						false
						,[
						[
							11,
							"ret"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1776919293471084,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						662766631047907,
						false
						,[
						[
							7,
							[
								23,
								"ret"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5338343844942442,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					3379739229115782,
					false
					,[
					[
						1,
						[
							2,
							"queueIt"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1857852316712056,
					false
					,[
					[
						11,
						"actionQueued"
					]
,					[
						7,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Param,
							false,
							null
							,[
[
								0,
								0
							]
							]
						]
					]
					]
				]
,				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					4030113556780245,
					false
					,[
					[
						1,
						[
							2,
							"showOverlay"
						]
					]
,					[
						13,
													[
								7,
								[
									2,
									"loading"
								]
							]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6304059583322632,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4023371592141356,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						7988118262343018,
						false
						,[
						[
							1,
							[
								2,
								"launchPub"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9160485532231123,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						5332254284305639,
						false
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						5014596021865582,
						[
						[
							27,
							cr.plugins_.Function.prototype.cnds.CompareParam,
							null,
							0,
							false,
							false,
							false,
							3154779536114445,
							false
							,[
							[
								0,
								[
									0,
									1
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"no ad"
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							7545984431968618,
							false
							,[
							[
								1,
								[
									2,
									"processQueue"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						6817003573739141,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							5932723465339521,
							false
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							356191277772577,
							false
							,[
							[
								1,
								[
									2,
									"launchPub"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3778541729907413,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					4317692588310048,
					false
					,[
					[
						1,
						[
							2,
							"interPause"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5849238206414665,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6173787173675746,
						false
						,[
						[
							11,
							"ACTIVE_AD"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5909343353956945,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps["int"]
								,[
[
									20,
									42,
									cr.plugins_.Dictionary.prototype.exps.Get,
									false,
									null
									,[
[
										2,
										"INTER_PAUSE"
									]
									]
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						3814153483404713,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							false,
							false,
							8920323033864594,
							false
						]
						],
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.acts.ShowFullscreen,
							null,
							6741788739061532,
							false
						]
,						[
							25,
							cr.plugins_.Browser.prototype.acts.ConsoleLog,
							null,
							5126514727772823,
							false
							,[
							[
								3,
								0
							]
,							[
								7,
								[
									2,
									"veververfvre"
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						68198766968408,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							true,
							false,
							3148581706961643,
							false
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							8026600326175515,
							false
							,[
							[
								1,
								[
									2,
									"showInters"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3135623991873324,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					618712935043225,
					false
					,[
					[
						1,
						[
							2,
							"launchPub"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					8260697182480481,
					false
					,[
					[
						11,
						"fullscreenAdTriggerCount"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					8914734517664786,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						574062386916749,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutname
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"GameOver"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3678946653649886,
						false
						,[
						[
							11,
							"GOadShown"
						]
,						[
							7,
							[
								2,
								"no ad"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9985873122203708,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8104202801216459,
						false
						,[
						[
							7,
							[
								8,
								[
									23,
									"fullscreenAdTriggerCount"
								]
								,[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										20,
										42,
										cr.plugins_.Dictionary.prototype.exps.Get,
										false,
										null
										,[
[
											2,
											"INTER_FREQ"
										]
										]
									]
									]
								]
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						2106592840293002,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							2446441680437631,
							false
							,[
							[
								7,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.ParamCount,
									false,
									null
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							6278198440360797,
							false
							,[
							[
								1,
								[
									2,
									"processQueue"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6189549227210375,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						4049485181967864,
						false
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5114803460238875,
						false
						,[
						[
							7,
							[
								8,
								[
									23,
									"fullscreenAdTriggerCount"
								]
								,[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										20,
										42,
										cr.plugins_.Dictionary.prototype.exps.Get,
										false,
										null
										,[
[
											2,
											"INTER_FREQ"
										]
										]
									]
									]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						3365884140653654,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							false,
							false,
							2667434098397091,
							false
						]
,						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							2865401611356887,
							false
							,[
							[
								11,
								"ACTIVE_AD"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.acts.ShowFullscreen,
							null,
							5794215132830966,
							false
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							7760570633041837,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								3085206819530821,
								false
								,[
								[
									7,
									[
										20,
										27,
										cr.plugins_.Function.prototype.exps.ParamCount,
										false,
										null
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.Wait,
								null,
								8052088306280729,
								false
								,[
								[
									0,
									[
										0,
										3
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								4244709039944487,
								[
								[
									28,
									cr.plugins_.CJSAds.prototype.cnds.IsShowingFullscreen,
									null,
									0,
									false,
									true,
									false,
									557863946883797,
									false
								]
								],
								[
								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									9465500256696479,
									false
									,[
									[
										1,
										[
											2,
											"processQueue"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						5429402341142832,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							true,
							false,
							8459163378121169,
							false
						]
,						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							3516234794762773,
							false
							,[
							[
								11,
								"ACTIVE_AD"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							8555773374147069,
							false
							,[
							[
								1,
								[
									2,
									"showInters"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						5984581140806492,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							9122101571124695,
							false
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							8590317576006652,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								2843759468066022,
								false
								,[
								[
									7,
									[
										20,
										27,
										cr.plugins_.Function.prototype.exps.ParamCount,
										false,
										null
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								2024445053849533,
								false
								,[
								[
									1,
									[
										2,
										"processQueue"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5399906177466762,
				[
				[
					28,
					cr.plugins_.CJSAds.prototype.cnds.OnFullscreenHidden,
					null,
					1,
					false,
					false,
					false,
					7356326471009349,
					false
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					3702953346575714,
					false
					,[
					[
						1,
						[
							2,
							"processQueue"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				294209023647842,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					2368313150637423,
					false
					,[
					[
						4,
						6
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9127274368482893,
					false
					,[
					[
						7,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Call,
							false,
							null
							,[
[
								2,
								"isTouchGenuine"
							]
							]
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					2498025960579633,
					false
					,[
					[
						1,
						[
							2,
							"hideInters"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3794608927199948,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5701803584479682,
					false
					,[
					[
						1,
						[
							2,
							"updateHUD"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6535738007577028,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.IsBoolInstanceVarSet,
						null,
						0,
						false,
						true,
						false,
						7488658668768884,
						false
						,[
						[
							10,
							3
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						8192407679869672,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetText,
						null,
						3746279696096628,
						false
						,[
						[
							7,
							[
								10,
								[
									2,
									"tap left : "
								]
								,[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"prettyNumber"
									]
,[
										23,
										"lifes"
									]
,[
										2,
										" "
									]
									]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					519891379872622,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						3464607647297054,
						false
						,[
						[
							1,
							[
								2,
								"updateHUD_GS"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9119966622420239,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					8484400305516521,
					false
					,[
					[
						1,
						[
							2,
							"scorePoint"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					6134281548258312,
					false
					,[
					[
						11,
						"Score"
					]
,					[
						7,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Param,
							false,
							null
							,[
[
								0,
								0
							]
							]
						]
					]
					]
				]
,				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					8955040555588512,
					false
					,[
					[
						1,
						[
							2,
							"updateHUD"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3392070471452673,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					499706676428944,
					false
					,[
					[
						1,
						[
							2,
							"popScore"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					1769329873767565,
					false
					,[
					[
						4,
						21
					]
,					[
						5,
						[
							2,
							"platforms"
						]
					]
,					[
						0,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Param,
							false,
							null
							,[
[
								0,
								1
							]
							]
						]
					]
,					[
						0,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Param,
							false,
							null
							,[
[
								0,
								2
							]
							]
						]
					]
					]
				]
,				[
					21,
					cr.plugins_.Spritefont2.prototype.acts.SetSize,
					null,
					9471980493029307,
					false
					,[
					[
						0,
						[
							0,
							500
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
,				[
					21,
					cr.plugins_.Spritefont2.prototype.acts.SetVisible,
					null,
					6115834414724653,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					21,
					cr.plugins_.Spritefont2.prototype.acts.SetCharacterSpacing,
					null,
					2594477946447362,
					false
					,[
					[
						0,
						[
							23,
							"SPRITEFONT_WIDTH"
						]
					]
					]
				]
,				[
					21,
					cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
					null,
					9458773738444699,
					false
					,[
					[
						1,
						[
							2,
							"1"
						]
					]
,					[
						0,
						[
							0,
							50
						]
					]
					]
				]
,				[
					21,
					cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
					null,
					2120263927406506,
					false
					,[
					[
						1,
						[
							2,
							" "
						]
					]
,					[
						0,
						[
							0,
							35
						]
					]
					]
				]
,				[
					21,
					cr.plugins_.Spritefont2.prototype.acts.SetScale,
					null,
					6704202796995223,
					false
					,[
					[
						0,
						[
							1,
							0.4
						]
					]
					]
				]
,				[
					21,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					5885034587656123,
					false
					,[
					[
						7,
						[
							10,
							[
								23,
								"POP_PREFIX"
							]
							,[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"prettyNumber"
								]
,[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Param,
									false,
									null
									,[
[
										0,
										0
									]
									]
								]
,[
									2,
									" "
								]
								]
							]
						]
					]
					]
				]
,				[
					21,
					cr.behaviors.Bullet.prototype.acts.SetEnabled,
					"Bullet",
					7597287969710034,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					21,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					4631419428403758,
					false
				]
,				[
					21,
					cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
					"Bullet",
					4844399567137934,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								90
							]
							,[
								23,
								"POP_DIR"
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					2491107276380651,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3777769851332294,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								4
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						1637187985707816,
						false
						,[
						[
							1,
							[
								2,
								"scorePoint"
							]
						]
,						[
							13,
															[
									7,
									[
										20,
										27,
										cr.plugins_.Function.prototype.exps.Param,
										false,
										null
										,[
[
											0,
											0
										]
										]
									]
								]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				519435408833858,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1141533676610504,
					false
					,[
					[
						1,
						[
							2,
							"pause"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					195866120811732,
					false
					,[
					[
						7,
						[
							23,
							"isPaused"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					4320421262615669,
					false
					,[
					[
						1,
						[
							2,
							"pauseGS"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					14,
					cr.plugins_.TiledBg.prototype.acts.SetVisible,
					null,
					4140969864425702,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					59,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					864629464127501,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					2,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4688344190704728,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					3,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					764765273093656,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					5,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5105633883300078,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					1,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8085879855939757,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					20,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					5089529881518169,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					3567299557263749,
					false
					,[
					[
						1,
						[
							2,
							"pubWebView"
						]
					]
,					[
						13,
													[
								7,
								[
									2,
									"pause"
								]
							]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					5689056340267693,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8778679660652307,
						false
						,[
						[
							11,
							"TUTO_ENABLE"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						9836262350234994,
						false
						,[
						[
							11,
							"TUTO_BUTTON_PAUSE"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						8,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						8734658247493811,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5287662933085859,
					[
					[
						19,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						7554896856596901,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						19,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						4151666169298437,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7476465290522195,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.IsBoolInstanceVarSet,
						null,
						0,
						false,
						false,
						false,
						4477666744803812,
						false
						,[
						[
							10,
							3
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetVisible,
						null,
						6932040444184643,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9705918951356228,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetTimescale,
						null,
						2561517433872116,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3747371460306725,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5021460206365463,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					7145100601893297,
					false
					,[
					[
						1,
						[
							2,
							"unPause"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					8062788640217972,
					false
					,[
					[
						7,
						[
							23,
							"isPaused"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetTimescale,
					null,
					3082517559445623,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					14,
					cr.plugins_.TiledBg.prototype.acts.SetVisible,
					null,
					5288021391843934,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					2,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					1402033895649274,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					3,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					401771741303126,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					5,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					349906089951395,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					1,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6898221272290724,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					8,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6518616973301112,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					20,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					668367767825202,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					7027540225361443,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					1004250649339462,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						2747918245450689,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						4958021692046442,
						false
						,[
						[
							1,
							[
								2,
								"pubWebView"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3409846519216523,
					[
					[
						59,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						1019389947789491,
						false
						,[
						[
							10,
							2
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								"timer"
							]
						]
						]
					]
					],
					[
					[
						59,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						2410102114334388,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1561133360903132,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.IsBoolInstanceVarSet,
						null,
						0,
						false,
						false,
						false,
						1898167082976381,
						false
						,[
						[
							10,
							3
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetVisible,
						null,
						2777107738745726,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6119369791489352,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6150087380188068,
						false
						,[
						[
							1,
							[
								2,
								"unPauseGS"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						556446287429307,
						false
						,[
						[
							0,
							[
								1,
								0.1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						4321901311273667,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8371624171151954,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					8646216103057326,
					false
					,[
					[
						1,
						[
							2,
							"blinkStar"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3635982853429096,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						6179664415790746,
						false
						,[
						[
							4,
							59
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						8482402573782664,
						[
						[
							59,
							cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
							null,
							0,
							false,
							false,
							false,
							251539004027846,
							false
							,[
							[
								1,
								[
									10,
									[
										2,
										"l"
									]
									,[
										21,
										59,
										false,
										null
										,1
									]
								]
							]
							]
						]
						],
						[
						[
							59,
							cr.plugins_.Sprite.prototype.acts.StartAnim,
							null,
							2029104655246214,
							false
							,[
							[
								3,
								1
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4034393003011752,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3661379489097431,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutname
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"GameOver"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						8851944054805741,
						false
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.random
								,[
[
									0,
									1
								]
,[
									0,
									5
								]
								]
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						758073001922675,
						false
						,[
						[
							1,
							[
								2,
								"blinkStar"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9488243110705636,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					6126613989523484,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9922882611341128,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						1101589419763035,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutname
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"GameMain"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						2427012879934457,
						[
						[
							42,
							cr.plugins_.Dictionary.prototype.cnds.CompareValue,
							null,
							0,
							false,
							false,
							false,
							1439252889781597,
							false
							,[
							[
								1,
								[
									2,
									"SHOW_AD"
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"YES"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							true,
							null,
							1787151708153667,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								1461386683417505,
								false
								,[
								[
									7,
									[
										8,
										[
											4,
											[
												23,
												"fullscreenAdTriggerCount"
											]
											,[
												0,
												1
											]
										]
										,[
											19,
											cr.system_object.prototype.exps["int"]
											,[
[
												20,
												42,
												cr.plugins_.Dictionary.prototype.exps.Get,
												false,
												null
												,[
[
													2,
													"INTER_FREQ"
												]
												]
											]
											]
										]
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								3673245186220501,
								false
								,[
								[
									7,
									[
										19,
										cr.system_object.prototype.exps["int"]
										,[
[
											20,
											42,
											cr.plugins_.Dictionary.prototype.exps.Get,
											false,
											null
											,[
[
												2,
												"INTER_PAUSE"
											]
											]
										]
										]
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								28,
								cr.plugins_.CJSAds.prototype.acts.RefreshFullscreen,
								null,
								9014441834508094,
								false
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8573764920283754,
					[
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						393899129098753,
						[
						[
							85,
							cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							822450977448031,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										5,
										[
											23,
											"IS_LANDSCAPE"
										]
										,[
											0,
											1
										]
									]
									]
								]
							]
							]
						]
						],
						[
						[
							85,
							cr.plugins_.Spritefont2.prototype.acts.Destroy,
							null,
							470190375377826,
							false
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2149216259991097,
						[
						[
							83,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							8950064272479976,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										5,
										[
											23,
											"IS_LANDSCAPE"
										]
										,[
											0,
											1
										]
									]
									]
								]
							]
							]
						]
						],
						[
						[
							83,
							cr.plugins_.Sprite.prototype.acts.Destroy,
							null,
							6940345542421392,
							false
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						4368640528684851,
						[
						[
							84,
							cr.plugins_.TiledBg.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							7401608634857471,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										5,
										[
											23,
											"IS_LANDSCAPE"
										]
										,[
											0,
											1
										]
									]
									]
								]
							]
							]
						]
						],
						[
						[
							84,
							cr.plugins_.TiledBg.prototype.acts.Destroy,
							null,
							9716739102760942,
							false
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						5253621758267398,
						[
						[
							86,
							cr.plugins_.HTML_iFrame_Pode.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							451225586992822,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.abs
									,[
[
										5,
										[
											23,
											"IS_LANDSCAPE"
										]
										,[
											0,
											1
										]
									]
									]
								]
							]
							]
						]
						],
						[
						[
							86,
							cr.plugins_.HTML_iFrame_Pode.prototype.acts.Destroy,
							null,
							9399627315911428,
							false
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5707700495583,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						8728481614003622,
						false
						,[
						[
							1,
							[
								2,
								"pubWebView"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "REQUIRED BUT GAME SPECIFIC"],
				false,
				null,
				7168481429967055,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					7168481429967055,
					false
					,[
					[
						1,
						[
							2,
							"REQUIRED BUT GAME SPECIFIC"
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				3573393092092493,
				[
				[
					21,
					cr.plugins_.Spritefont2.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					9163928065515255,
					false
				]
				],
				[
				[
					21,
					cr.plugins_.Spritefont2.prototype.acts.SetCharacterSpacing,
					null,
					3201984943278772,
					false
					,[
					[
						0,
						[
							23,
							"SPRITEFONT_WIDTH"
						]
					]
					]
				]
,				[
					21,
					cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
					null,
					3280124695686815,
					false
					,[
					[
						1,
						[
							2,
							"1"
						]
					]
,					[
						0,
						[
							0,
							40
						]
					]
					]
				]
,				[
					21,
					cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
					null,
					9025474883305325,
					false
					,[
					[
						1,
						[
							2,
							" "
						]
					]
,					[
						0,
						[
							0,
							30
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				532028943077405,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					275129587040042,
					false
					,[
					[
						1,
						[
							2,
							"initGame"
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					8330243852316965,
					false
					,[
					[
						1,
						[
							2,
							"analytics"
						]
					]
,					[
						13,
													[
								7,
								[
									2,
									"nbLvlPlayed"
								]
							]
,
							[
								7,
								[
									2,
									"add"
								]
							]
,
							[
								7,
								[
									0,
									1
								]
							]
					]
					]
				]
,				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					2965400944609956,
					false
					,[
					[
						1,
						[
							2,
							"setObjectifPause"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1708999596980389,
					false
					,[
					[
						11,
						"isPaused"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					8035535638987597,
					false
					,[
					[
						1,
						[
							2,
							"updateHUD"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7069659828724565,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					4282138079402251,
					false
					,[
					[
						1,
						[
							2,
							"startGame"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7921776469337162,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						169306966886362,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						3504409995547081,
						false
						,[
						[
							4,
							48
						]
,						[
							5,
							[
								2,
								"overlays"
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutwidth
								]
								,[
									0,
									2
								]
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutheight
								]
								,[
									0,
									2
								]
							]
						]
						]
					]
,					[
						48,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						1139506354564836,
						false
						,[
						[
							0,
							[
								0,
								3
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						3880156937294338,
						false
						,[
						[
							0,
							[
								1,
								0.75
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						8847681998681949,
						false
						,[
						[
							4,
							48
						]
,						[
							5,
							[
								2,
								"overlays"
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutwidth
								]
								,[
									0,
									2
								]
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutheight
								]
								,[
									0,
									2
								]
							]
						]
						]
					]
,					[
						48,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						8872976862458521,
						false
						,[
						[
							0,
							[
								0,
								2
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						6003892769895067,
						false
						,[
						[
							0,
							[
								1,
								0.75
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						2161421432954493,
						false
						,[
						[
							4,
							48
						]
,						[
							5,
							[
								2,
								"overlays"
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutwidth
								]
								,[
									0,
									2
								]
							]
						]
,						[
							0,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.layoutheight
								]
								,[
									0,
									2
								]
							]
						]
						]
					]
,					[
						48,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						8275793280340187,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						9554953196343974,
						false
						,[
						[
							0,
							[
								1,
								0.75
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						289958749654848,
						false
						,[
						[
							11,
							"gameStarted"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						7234750968447225,
						false
						,[
						[
							1,
							[
								2,
								"onGameStart"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9280324053405468,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						2263736418241468,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3586586834814725,
						false
						,[
						[
							11,
							"gameStarted"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						1184943472540616,
						false
						,[
						[
							1,
							[
								2,
								"onGameStart"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9720023515709966,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					7240058975377153,
					false
					,[
					[
						1,
						[
							2,
							"looseLife"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"loosedLifes",
					0,
					0,
false,false,719545459571732,false
				]
,				[
					0,
					null,
					true,
					null,
					7929565797526472,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.CompareParam,
						null,
						0,
						false,
						false,
						false,
						1442530300486181,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9851519593652947,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						7265938030464615,
						false
						,[
						[
							11,
							"loosedLifes"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1188095288883289,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						7718065201429583,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6480175437159495,
						false
						,[
						[
							11,
							"loosedLifes"
						]
,						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9017539196831321,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SubVar,
						null,
						8966056548215546,
						false
						,[
						[
							11,
							"lifes"
						]
,						[
							7,
							[
								23,
								"loosedLifes"
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						5232272132196528,
						false
						,[
						[
							1,
							[
								2,
								"updateHUD"
							]
						]
,						[
							13,
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						3516153769769564,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							2650101154904494,
							false
							,[
							[
								11,
								"lifes"
							]
,							[
								8,
								3
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						]
					]
,					[
						0,
						null,
						false,
						null,
						9873795224340937,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							6186808135922431,
							false
						]
						],
						[
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6490928018940513,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5301121074267538,
					false
					,[
					[
						1,
						[
							2,
							"gameOver"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6172184948389365,
					false
					,[
					[
						11,
						"gameOverTrigged"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					9772033321067079,
					false
					,[
					[
						11,
						"gameOverTrigged"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					3640289871804915,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6420619912212711,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3811307922656055,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7375040853634291,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4498487178091657,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutname
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								"GameOver"
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6874303562290066,
						false
						,[
						[
							1,
							[
								2,
								"showOverlay"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"victory"
									]
								]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						4704388764579871,
						false
						,[
						[
							0,
							[
								0,
								2
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.GoToLayout,
						null,
						6342630475551345,
						false
						,[
						[
							6,
							"GameOver"
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5109817192899724,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5250052585650469,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5159358295440508,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutname
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								"GameOver"
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6089233847931136,
						false
						,[
						[
							1,
							[
								2,
								"showOverlay"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"gameover"
									]
								]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						8843335858727019,
						false
						,[
						[
							0,
							[
								0,
								2
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.GoToLayout,
						null,
						1565111019796219,
						false
						,[
						[
							6,
							"GameOver"
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9412257461885884,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					7764980020489764,
					false
					,[
					[
						1,
						[
							2,
							"loadLevelsConfig"
						]
					]
					]
				]
				],
				[
				[
					30,
					cr.plugins_.AJAX.prototype.acts.RequestFile,
					null,
					2394585332941953,
					false
					,[
					[
						1,
						[
							2,
							"levelConfig"
						]
					]
,					[
						12,
						"levelconfig.csv"
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6502483578066783,
				[
				[
					30,
					cr.plugins_.AJAX.prototype.cnds.OnComplete,
					null,
					1,
					false,
					false,
					false,
					2415640258666147,
					false
					,[
					[
						1,
						[
							2,
							"levelConfig"
						]
					]
					]
				]
				],
				[
				[
					44,
					cr.plugins_.Rex_CSV.prototype.acts.LoadCSV,
					null,
					3952065166340003,
					false
					,[
					[
						1,
						[
							20,
							30,
							cr.plugins_.AJAX.prototype.exps.LastData,
							true,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8933603870198641,
					false
					,[
					[
						11,
						"isLevelConfigLoaded"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8812566166780717,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5739766831409269,
					false
					,[
					[
						1,
						[
							2,
							"setStar"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5602263640359941,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5918653360172711,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4690708416645603,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9149342109936763,
						false
						,[
						[
							11,
							"starUnlocked"
						]
,						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5134658926472066,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						900183033934708,
						false
						,[
						[
							7,
							[
								23,
								"starUnlocked"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3872309738168383,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5526422409845263,
					false
					,[
					[
						1,
						[
							2,
							"earnStar"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"nbStar",
					0,
					1,
false,false,2958460206499561,false
				]
,				[
					0,
					null,
					false,
					null,
					5476183339756638,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6054670503573419,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						117383681878092,
						false
						,[
						[
							11,
							"nbStar"
						]
,						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8128460791942841,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Repeat,
						null,
						0,
						true,
						false,
						false,
						6510290418784896,
						false
						,[
						[
							0,
							[
								23,
								"nbStar"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8445009442128208,
						false
						,[
						[
							11,
							"starUnlocked"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						9484266915287388,
						false
						,[
						[
							11,
							"starUnlocked"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4945763397627391,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						754543817390498,
						false
						,[
						[
							1,
							[
								2,
								"earnStarCB"
							]
						]
,						[
							13,
															[
									7,
									[
										23,
										"starUnlocked"
									]
								]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						8490727470799288,
						false
						,[
						[
							7,
							[
								23,
								"starUnlocked"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3255063299561069,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					750144411274277,
					false
					,[
					[
						1,
						[
							2,
							"looseStar"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"nbStar",
					0,
					1,
false,false,8783263950302319,false
				]
,				[
					0,
					null,
					false,
					null,
					9114213892996932,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						1696073355695894,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.ParamCount,
								false,
								null
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9075658752190094,
						false
						,[
						[
							11,
							"nbStar"
						]
,						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8278437524333788,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Repeat,
						null,
						0,
						true,
						false,
						false,
						5581769512244717,
						false
						,[
						[
							0,
							[
								23,
								"nbStar"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3885028321373293,
						false
						,[
						[
							11,
							"starUnlocked"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SubVar,
						null,
						2040134505782165,
						false
						,[
						[
							11,
							"starUnlocked"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6568635512587234,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						627473600989726,
						false
						,[
						[
							1,
							[
								2,
								"looseStarCB"
							]
						]
,						[
							13,
															[
									7,
									[
										23,
										"starUnlocked"
									]
								]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						1096214148129366,
						false
						,[
						[
							7,
							[
								23,
								"starUnlocked"
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Banner Fix"],
			false,
			null,
			7102735115480077,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7102735115480077,
				false
				,[
				[
					1,
					[
						2,
						"Banner Fix"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				3199872995313391,
				[
				[
					28,
					cr.plugins_.CJSAds.prototype.cnds.OnBannerShown,
					null,
					1,
					false,
					false,
					false,
					8496363641023311,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					86240882197094,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3885994698906237,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutname
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"GameMain"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						6158623920195779,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							3984223396145234,
							false
							,[
							[
								11,
								"isPaused"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							3291772500111936,
							[
							[
								42,
								cr.plugins_.Dictionary.prototype.cnds.CompareValue,
								null,
								0,
								false,
								false,
								false,
								7560132459867585,
								false
								,[
								[
									1,
									[
										10,
										[
											2,
											"AD_"
										]
										,[
											19,
											cr.system_object.prototype.exps.layoutname
										]
									]
								]
,								[
									8,
									1
								]
,								[
									7,
									[
										2,
										"Natif"
									]
								]
								]
							]
							],
							[
							[
								28,
								cr.plugins_.CJSAds.prototype.acts.HideBanner,
								null,
								4384314264443359,
								false
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7381178114183599,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						8779968208302887,
						false
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						2223197128160907,
						[
						[
							42,
							cr.plugins_.Dictionary.prototype.cnds.CompareValue,
							null,
							0,
							false,
							false,
							false,
							4767660280215966,
							false
							,[
							[
								1,
								[
									10,
									[
										2,
										"AD_"
									]
									,[
										19,
										cr.system_object.prototype.exps.layoutname
									]
								]
							]
,							[
								8,
								1
							]
,							[
								7,
								[
									2,
									"Natif"
								]
							]
							]
						]
						],
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.acts.HideBanner,
							null,
							929153555370032,
							false
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3964703796139207,
					[
					[
						42,
						cr.plugins_.Dictionary.prototype.cnds.CompareValue,
						null,
						0,
						false,
						false,
						false,
						6229384484877619,
						false
						,[
						[
							1,
							[
								2,
								"SHOW_AD"
							]
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								2,
								"YES"
							]
						]
						]
					]
					],
					[
					[
						28,
						cr.plugins_.CJSAds.prototype.acts.HideBanner,
						null,
						405829699012679,
						false
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Deco Cars Related"],
			false,
			null,
			1429598584560907,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1429598584560907,
				false
				,[
				[
					1,
					[
						2,
						"Deco Cars Related"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9635077696093903,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					9454458428500819,
					false
					,[
					[
						1,
						[
							2,
							"spawnDecoCar"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"directionOfCar",
					0,
					0,
false,false,8767156893548512,false
				]
,				[
					0,
					null,
					false,
					null,
					667153953082319,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8743774041599906,
						false
						,[
						[
							11,
							"directionOfCar"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps["int"]
								,[
[
									19,
									cr.system_object.prototype.exps.random
									,[
[
										0,
										-1
									]
,[
										0,
										2
									]
									]
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2521973664553573,
						false
						,[
						[
							11,
							"delayBeforeDecoCarSpawn"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps["int"]
								,[
[
									19,
									cr.system_object.prototype.exps.random
									,[
[
										0,
										5
									]
,[
										0,
										10
									]
									]
								]
								]
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						6455083704539822,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							8091560202089177,
							false
							,[
							[
								11,
								"directionOfCar"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							506326324974342,
							false
							,[
							[
								11,
								"directionOfCar"
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1741243506446304,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							6797263288708726,
							false
							,[
							[
								11,
								"directionOfCar"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
,						[
							62,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							4180692263615019,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							5127841232698399,
							false
							,[
							[
								4,
								57
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									20,
									62,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
,							[
								0,
								[
									20,
									62,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
,						[
							57,
							cr.plugins_.Sprite.prototype.acts.SetScale,
							null,
							3259289936801693,
							false
							,[
							[
								0,
								[
									1,
									0.8
								]
							]
							]
						]
,						[
							57,
							cr.plugins_.Sprite.prototype.acts.RotateClockwise,
							null,
							5553602185062908,
							false
							,[
							[
								0,
								[
									0,
									90
								]
							]
							]
						]
,						[
							57,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							9869313225566144,
							false
							,[
							[
								1,
								[
									10,
									[
										2,
										"car"
									]
									,[
										19,
										cr.system_object.prototype.exps["int"]
										,[
[
											19,
											cr.system_object.prototype.exps.random
											,[
[
												0,
												1
											]
,[
												0,
												6
											]
											]
										]
										]
									]
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							57,
							cr.behaviors.Bullet.prototype.acts.SetSpeed,
							"Bullet",
							2480820145148938,
							false
							,[
							[
								0,
								[
									6,
									[
										19,
										cr.system_object.prototype.exps["int"]
										,[
[
											19,
											cr.system_object.prototype.exps.random
											,[
[
												0,
												250
											]
,[
												0,
												401
											]
											]
										]
										]
									]
									,[
										23,
										"directionOfCar"
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1048553796577876,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							476298578873997,
							false
							,[
							[
								11,
								"directionOfCar"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							62,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							540603959554094,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							1695107037464648,
							false
							,[
							[
								4,
								57
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									20,
									62,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
,							[
								0,
								[
									20,
									62,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
,						[
							57,
							cr.plugins_.Sprite.prototype.acts.SetScale,
							null,
							7400796355497687,
							false
							,[
							[
								0,
								[
									1,
									0.8
								]
							]
							]
						]
,						[
							57,
							cr.plugins_.Sprite.prototype.acts.RotateCounterclockwise,
							null,
							5387763756367162,
							false
							,[
							[
								0,
								[
									0,
									90
								]
							]
							]
						]
,						[
							57,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							9527602225415711,
							false
							,[
							[
								1,
								[
									10,
									[
										2,
										"car"
									]
									,[
										19,
										cr.system_object.prototype.exps["int"]
										,[
[
											19,
											cr.system_object.prototype.exps.random
											,[
[
												0,
												1
											]
,[
												0,
												6
											]
											]
										]
										]
									]
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							57,
							cr.behaviors.Bullet.prototype.acts.SetSpeed,
							"Bullet",
							2642262334909525,
							false
							,[
							[
								0,
								[
									6,
									[
										19,
										cr.system_object.prototype.exps["int"]
										,[
[
											19,
											cr.system_object.prototype.exps.random
											,[
[
												0,
												250
											]
,[
												0,
												401
											]
											]
										]
										]
									]
									,[
										23,
										"directionOfCar"
									]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8307877393565429,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1259179544561241,
					false
					,[
					[
						1,
						[
							2,
							"destroyDecoCars"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2433177626553215,
					[
					[
						-1,
						cr.system_object.prototype.cnds.PickAll,
						null,
						0,
						false,
						false,
						false,
						4699661371967628,
						false
						,[
						[
							4,
							57
						]
						]
					]
,					[
						57,
						cr.plugins_.Sprite.prototype.cnds.IsOnScreen,
						null,
						0,
						false,
						true,
						false,
						1468387878143662,
						false
					]
					],
					[
					[
						57,
						cr.plugins_.Sprite.prototype.acts.Destroy,
						null,
						3871966317068087,
						false
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Multi languages basic support"],
			false,
			null,
			9814224765557552,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9814224765557552,
				false
				,[
				[
					1,
					[
						2,
						"Multi languages basic support"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "DO NOT MODIFY        "],
				false,
				null,
				44696738207011,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					44696738207011,
					false
					,[
					[
						1,
						[
							2,
							"DO NOT MODIFY        "
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2377452681468223,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						3257375189312654,
						false
						,[
						[
							1,
							[
								2,
								"langNum"
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						9741680669259278,
						false
						,[
						[
							7,
							[
								20,
								71,
								cr.plugins_.Dictionary.prototype.exps.Get,
								false,
								null
								,[
[
									10,
									[
										2,
										"keyNum_"
									]
									,[
										20,
										71,
										cr.plugins_.Dictionary.prototype.exps.Get,
										false,
										null
										,[
[
											2,
											"selectedLanguage"
										]
										]
									]
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6362651176166492,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						4637395253944327,
						false
						,[
						[
							1,
							[
								2,
								"langStr"
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						2385106815115861,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.str
								,[
[
									20,
									71,
									cr.plugins_.Dictionary.prototype.exps.Get,
									false,
									null
									,[
[
										2,
										"selectedLanguage"
									]
									]
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9682323668977728,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						3781451900654822,
						false
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5392258566870495,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutname
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"Splash"
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						9619636360545844,
						false
						,[
						[
							1,
							[
								2,
								"initLanguages"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						5386106764526615,
						false
						,[
						[
							11,
							"currTutoPage"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8576236207085479,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						7216829997611176,
						false
						,[
						[
							1,
							[
								2,
								"initLanguages"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						6599653133958238,
						[
						[
							71,
							cr.plugins_.Dictionary.prototype.cnds.HasKey,
							null,
							0,
							false,
							true,
							false,
							8335926893411723,
							false
							,[
							[
								1,
								[
									2,
									"init"
								]
							]
							]
						]
						],
						[
						[
							71,
							cr.plugins_.Dictionary.prototype.acts.AddKey,
							null,
							3387236013776071,
							false
							,[
							[
								1,
								[
									2,
									"init"
								]
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							71,
							cr.plugins_.Dictionary.prototype.acts.AddKey,
							null,
							2197283628619873,
							false
							,[
							[
								1,
								[
									2,
									"supportedLanguages"
								]
							]
,							[
								7,
								[
									2,
									"de,en,es,fr,it,ko,pt,tr"
								]
							]
							]
						]
,						[
							71,
							cr.plugins_.Dictionary.prototype.acts.AddKey,
							null,
							7265907329120802,
							false
							,[
							[
								1,
								[
									2,
									"keyNum_de"
								]
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							71,
							cr.plugins_.Dictionary.prototype.acts.AddKey,
							null,
							4676712618499363,
							false
							,[
							[
								1,
								[
									2,
									"keyNum_en"
								]
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							71,
							cr.plugins_.Dictionary.prototype.acts.AddKey,
							null,
							6333580006950161,
							false
							,[
							[
								1,
								[
									2,
									"keyNum_es"
								]
							]
,							[
								7,
								[
									0,
									2
								]
							]
							]
						]
,						[
							71,
							cr.plugins_.Dictionary.prototype.acts.AddKey,
							null,
							6552134343792119,
							false
							,[
							[
								1,
								[
									2,
									"keyNum_fr"
								]
							]
,							[
								7,
								[
									0,
									3
								]
							]
							]
						]
,						[
							71,
							cr.plugins_.Dictionary.prototype.acts.AddKey,
							null,
							494092658770685,
							false
							,[
							[
								1,
								[
									2,
									"keyNum_it"
								]
							]
,							[
								7,
								[
									0,
									4
								]
							]
							]
						]
,						[
							71,
							cr.plugins_.Dictionary.prototype.acts.AddKey,
							null,
							9410150625229221,
							false
							,[
							[
								1,
								[
									2,
									"keyNum_ko"
								]
							]
,							[
								7,
								[
									0,
									5
								]
							]
							]
						]
,						[
							71,
							cr.plugins_.Dictionary.prototype.acts.AddKey,
							null,
							9632469807558658,
							false
							,[
							[
								1,
								[
									2,
									"keyNum_pt"
								]
							]
,							[
								7,
								[
									0,
									6
								]
							]
							]
						]
,						[
							71,
							cr.plugins_.Dictionary.prototype.acts.AddKey,
							null,
							8132311191860431,
							false
							,[
							[
								1,
								[
									2,
									"keyNum_tr"
								]
							]
,							[
								7,
								[
									0,
									7
								]
							]
							]
						]
,						[
							71,
							cr.plugins_.Dictionary.prototype.acts.AddKey,
							null,
							9548428294567254,
							false
							,[
							[
								1,
								[
									2,
									"selectedLanguage"
								]
							]
,							[
								7,
								[
									2,
									"en"
								]
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							4398931274769666,
							[
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								2873981223737107,
								false
								,[
								[
									1,
									[
										2,
										"setLangTo"
									]
								]
,								[
									13,
																			[
											7,
											[
												20,
												25,
												cr.plugins_.Browser.prototype.exps.Language,
												true,
												null
											]
										]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3842256944233595,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						4126331264600292,
						false
						,[
						[
							1,
							[
								2,
								"setLangTo"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						1294033966968453,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							9532649434029663,
							false
							,[
							[
								7,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.ParamCount,
									false,
									null
								]
							]
,							[
								8,
								2
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							25,
							cr.plugins_.Browser.prototype.acts.ConsoleLog,
							null,
							861705218528801,
							false
							,[
							[
								3,
								1
							]
,							[
								7,
								[
									2,
									"keyNum(\"language code\") needs 1 param (language code) ! "
								]
							]
							]
						]
,						[
							25,
							cr.plugins_.Browser.prototype.acts.ConsoleLog,
							null,
							1266989941202733,
							false
							,[
							[
								3,
								0
							]
,							[
								7,
								[
									2,
									"|-> no language set because of this error "
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						435397834097582,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							9673113857820763,
							false
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							5871971697362341,
							[
							[
								71,
								cr.plugins_.Dictionary.prototype.cnds.HasKey,
								null,
								0,
								false,
								false,
								false,
								2398441947554574,
								false
								,[
								[
									1,
									[
										10,
										[
											2,
											"keyNum_"
										]
										,[
											19,
											cr.system_object.prototype.exps.left
											,[
[
												20,
												27,
												cr.plugins_.Function.prototype.exps.Param,
												false,
												null
												,[
[
													0,
													0
												]
												]
											]
,[
												0,
												2
											]
											]
										]
									]
								]
								]
							]
							],
							[
							[
								71,
								cr.plugins_.Dictionary.prototype.acts.SetKey,
								null,
								4348610892677904,
								false
								,[
								[
									1,
									[
										2,
										"selectedLanguage"
									]
								]
,								[
									7,
									[
										19,
										cr.system_object.prototype.exps.left
										,[
[
											19,
											cr.system_object.prototype.exps.str
											,[
[
												20,
												27,
												cr.plugins_.Function.prototype.exps.Param,
												false,
												null
												,[
[
													0,
													0
												]
												]
											]
											]
										]
,[
											0,
											2
										]
										]
									]
								]
								]
							]
,							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								137687895900034,
								false
								,[
								[
									1,
									[
										2,
										"resetLanguage"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5148214940556835,
				[
				[
					19,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7660153067019243,
					false
				]
				],
				[
				[
					19,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3955119003794366,
					false
					,[
					[
						0,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Call,
							false,
							null
							,[
[
								2,
								"langNum"
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3281466646432016,
				[
				[
					19,
					cr.plugins_.Sprite.prototype.cnds.OnFrameChanged,
					null,
					1,
					false,
					false,
					false,
					8550977095723243,
					false
				]
				],
				[
				[
					19,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8933618188721645,
					false
					,[
					[
						0,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Call,
							false,
							null
							,[
[
								2,
								"langNum"
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9024420536233899,
				[
				[
					0,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					850556012663709,
					false
				]
				],
				[
				[
					0,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7556730699385442,
					false
					,[
					[
						0,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Call,
							false,
							null
							,[
[
								2,
								"langNum"
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1217942285570537,
				[
				[
					1,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					5373936592320679,
					false
				]
				],
				[
				[
					1,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7367436608641724,
					false
					,[
					[
						0,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Call,
							false,
							null
							,[
[
								2,
								"langNum"
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6922504706438943,
				[
				[
					8,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					2232553800855316,
					false
				]
				],
				[
				[
					8,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3765450332246173,
					false
					,[
					[
						0,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Call,
							false,
							null
							,[
[
								2,
								"langNum"
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8622050044320473,
				[
				[
					6,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					863347143502667,
					false
				]
				],
				[
				[
					6,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6715448175136637,
					false
					,[
					[
						0,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Call,
							false,
							null
							,[
[
								2,
								"langNum"
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3050781250518881,
				[
				[
					58,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7178390337022034,
					false
				]
				],
				[
				[
					58,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8554027158181644,
					false
					,[
					[
						0,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Call,
							false,
							null
							,[
[
								2,
								"langNum"
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5624125593399526,
				[
				[
					73,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					9705783419823814,
					false
				]
				],
				[
				[
					73,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					5577955531528421,
					false
					,[
					[
						0,
						[
							20,
							27,
							cr.plugins_.Function.prototype.exps.Call,
							false,
							null
							,[
[
								2,
								"langNum"
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9530243118056782,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					4339069840527376,
					false
					,[
					[
						1,
						[
							2,
							"resetLanguage"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"langNum",
					0,
					0,
false,false,6926351175605723,false
				]
,				[
					0,
					null,
					false,
					null,
					7527960790171969,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6412801599165429,
						false
						,[
						[
							11,
							"langNum"
						]
,						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"langNum"
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5651226526752006,
					[
					],
					[
					[
						19,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						246008391944316,
						false
						,[
						[
							0,
							[
								23,
								"langNum"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						6365692493602029,
						false
						,[
						[
							0,
							[
								23,
								"langNum"
							]
						]
						]
					]
,					[
						1,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						43124350108765,
						false
						,[
						[
							0,
							[
								23,
								"langNum"
							]
						]
						]
					]
,					[
						8,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						7603950019500704,
						false
						,[
						[
							0,
							[
								23,
								"langNum"
							]
						]
						]
					]
,					[
						6,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						5930635481133824,
						false
						,[
						[
							0,
							[
								23,
								"langNum"
							]
						]
						]
					]
,					[
						58,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						3585162526346657,
						false
						,[
						[
							0,
							[
								23,
								"langNum"
							]
						]
						]
					]
,					[
						73,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						5978195321814538,
						false
						,[
						[
							0,
							[
								23,
								"langNum"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7443823927112867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7796146984713276,
					false
					,[
					[
						11,
						"timeToValidLang"
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					5404564512565702,
					false
					,[
					[
						11,
						"timeToValidLang"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.dt
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					228679418513363,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7717687878443661,
						false
						,[
						[
							11,
							"timeToValidLang"
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						5954878521790851,
						false
						,[
						[
							1,
							[
								2,
								"initTutoPage"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "LANGUAGE WORD [ SPECIFIC TO GAME]"],
			false,
			null,
			706819615716631,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				706819615716631,
				false
				,[
				[
					1,
					[
						2,
						"LANGUAGE WORD [ SPECIFIC TO GAME]"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9618635019381019,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1326981050643789,
					false
					,[
					[
						1,
						[
							2,
							"langTrad"
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.SetReturnValue,
					null,
					4430654564330293,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.str
							,[
[
								20,
								71,
								cr.plugins_.Dictionary.prototype.exps.Get,
								false,
								null
								,[
[
									10,
									[
										10,
										[
											10,
											[
												2,
												"keyNum_"
											]
											,[
												20,
												27,
												cr.plugins_.Function.prototype.exps.Param,
												false,
												null
												,[
[
													0,
													0
												]
												]
											]
										]
										,[
											2,
											"_"
										]
									]
									,[
										20,
										71,
										cr.plugins_.Dictionary.prototype.exps.Get,
										false,
										null
										,[
[
											2,
											"selectedLanguage"
										]
										]
									]
								]
								]
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				516486553128305,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					9230796500262622,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7571487844595378,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.layoutname
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							2,
							"Splash"
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					7015461769192994,
					false
					,[
					[
						1,
						[
							2,
							"initLanguages2"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8548296571681116,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					9755566856302604,
					false
					,[
					[
						1,
						[
							2,
							"initLanguages2"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4091500346961678,
					[
					[
						71,
						cr.plugins_.Dictionary.prototype.cnds.HasKey,
						null,
						0,
						false,
						true,
						false,
						421305314517041,
						false
						,[
						[
							1,
							[
								2,
								"initTrad"
							]
						]
						]
					]
					],
					[
					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						9563758565635363,
						false
						,[
						[
							1,
							[
								2,
								"initTrad"
							]
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						1010465477882486,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_best_en"
							]
						]
,						[
							7,
							[
								2,
								"best"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						6931913944637641,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_score_en"
							]
						]
,						[
							7,
							[
								2,
								"score"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						6645094148575138,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_best_es"
							]
						]
,						[
							7,
							[
								2,
								"el mejor"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						7701722689053764,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_score_es"
							]
						]
,						[
							7,
							[
								2,
								"puntuacion"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						9526445982431204,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_best_it"
							]
						]
,						[
							7,
							[
								2,
								"migliore"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						4701246351434903,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_score_it"
							]
						]
,						[
							7,
							[
								2,
								"punteggio"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						5921115392491021,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_best_pt"
							]
						]
,						[
							7,
							[
								2,
								"melhor"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						470632931854377,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_score_pt"
							]
						]
,						[
							7,
							[
								2,
								"recorde"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						4263067681496936,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_best_tr"
							]
						]
,						[
							7,
							[
								2,
								"en iyi"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						2353972027766083,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_score_tr"
							]
						]
,						[
							7,
							[
								2,
								"skor"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						714431637596111,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_best_fr"
							]
						]
,						[
							7,
							[
								2,
								"record"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						61322389563615,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_score_fr"
							]
						]
,						[
							7,
							[
								2,
								"score"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						6008325697647678,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_best_ko"
							]
						]
,						[
							7,
							[
								2,
								" "
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						5612462598942987,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_score_ko"
							]
						]
,						[
							7,
							[
								2,
								" "
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						2535073170518761,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_best_de"
							]
						]
,						[
							7,
							[
								2,
								"beste"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Dictionary.prototype.acts.AddKey,
						null,
						1416871812386136,
						false
						,[
						[
							1,
							[
								2,
								"keyNum_score_de"
							]
						]
,						[
							7,
							[
								2,
								"ergebnis"
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Avoid Propagation Hack"],
			false,
			null,
			3216480777560848,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3216480777560848,
				false
				,[
				[
					1,
					[
						2,
						"Avoid Propagation Hack"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8046120855572554,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					264703936518035,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					416239351864764,
					false
					,[
					[
						11,
						"touchid"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3498540134578927,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					3228534510745127,
					false
					,[
					[
						1,
						[
							2,
							"isTouchGenuine"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1560927984743471,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7122860445551144,
						false
						,[
						[
							7,
							[
								23,
								"touchid"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								23,
								"lastTouch"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9599455931658214,
						false
						,[
						[
							11,
							"lastTouch"
						]
,						[
							7,
							[
								23,
								"touchid"
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						9503284698929053,
						false
						,[
						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4689853048924403,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						3645896009167796,
						false
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						6616651091376742,
						false
						,[
						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "API Playtouch V1"],
			false,
			null,
			7869003792848729,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7869003792848729,
				false
				,[
				[
					1,
					[
						2,
						"API Playtouch V1"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "Classics Buttons Menu"],
				false,
				null,
				2078586283779833,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					2078586283779833,
					false
					,[
					[
						1,
						[
							2,
							"Classics Buttons Menu"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7778912296051346,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2521210320309303,
						false
						,[
						[
							4,
							78
						]
						]
					]
,					[
						78,
						cr.plugins_.Sprite.prototype.cnds.IsVisible,
						null,
						0,
						false,
						false,
						false,
						1754101781333549,
						false
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						2417610307002087,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"APIPlaytouch_isAPILoaded"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						78,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						250667556066311,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						7186272733445182,
						false
						,[
						[
							1,
							[
								2,
								"moreGame_launch"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2858052779388957,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						5788162526879489,
						false
						,[
						[
							4,
							79
						]
						]
					]
,					[
						79,
						cr.plugins_.Sprite.prototype.cnds.IsVisible,
						null,
						0,
						false,
						false,
						false,
						3952539489553479,
						false
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9339285195968029,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"APIPlaytouch_isAPILoaded"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						79,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						5148592006876136,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						167624708401078,
						false
						,[
						[
							1,
							[
								2,
								"rate_launch"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Sound Menu"],
				false,
				null,
				9159135442371777,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					9159135442371777,
					false
					,[
					[
						1,
						[
							2,
							"Sound Menu"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3088231662164559,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						5647778760859549,
						false
						,[
						[
							4,
							82
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						4430272837370942,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							6068169889939823,
							false
							,[
							[
								7,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"sound_isMute"
									]
									]
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							5664714795438465,
							false
							,[
							[
								1,
								[
									2,
									"sound_mute"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1033979606756603,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							558566494640111,
							false
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							3846671338500623,
							false
							,[
							[
								1,
								[
									2,
									"sound_unMute"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						8982037775120789,
						[
						],
						[
						[
							82,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							5656663288232679,
							false
							,[
							[
								0,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"sound_isMute"
									]
									]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "i18n Menu"],
				false,
				null,
				3014213479700552,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					3014213479700552,
					false
					,[
					[
						1,
						[
							2,
							"i18n Menu"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9022674373769299,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						9016083455365249,
						false
						,[
						[
							4,
							76
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						8990692521866501,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							3989757789660141,
							false
							,[
							[
								7,
								[
									4,
									[
										20,
										76,
										cr.plugins_.Sprite.prototype.exps.AnimationFrame,
										false,
										null
									]
									,[
										0,
										1
									]
								]
							]
,							[
								8,
								2
							]
,							[
								7,
								[
									20,
									76,
									cr.plugins_.Sprite.prototype.exps.AnimationFrameCount,
									false,
									null
								]
							]
							]
						]
						],
						[
						[
							76,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							9553275025680091,
							false
							,[
							[
								0,
								[
									4,
									[
										20,
										76,
										cr.plugins_.Sprite.prototype.exps.AnimationFrame,
										false,
										null
									]
									,[
										0,
										1
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1142676489315217,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							3112888741208456,
							false
						]
						],
						[
						[
							76,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							438105681282436,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
,					[
						1,
						"newVal",
						1,
						"en",
false,false,2670302334367362,false
					]
,					[
						0,
						null,
						false,
						null,
						255400771309997,
						[
						[
							71,
							cr.plugins_.Dictionary.prototype.cnds.ForEachKey,
							null,
							0,
							true,
							false,
							false,
							2402071777792849,
							false
						]
,						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							4237212983346582,
							false
							,[
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.left
									,[
[
										20,
										71,
										cr.plugins_.Dictionary.prototype.exps.CurrentKey,
										true,
										null
									]
,[
										0,
										6
									]
									]
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"keyNum"
								]
							]
							]
						]
,						[
							71,
							cr.plugins_.Dictionary.prototype.cnds.CompareCurrentValue,
							null,
							0,
							false,
							false,
							false,
							6440892551096325,
							false
							,[
							[
								8,
								0
							]
,							[
								7,
								[
									20,
									76,
									cr.plugins_.Sprite.prototype.exps.AnimationFrame,
									false,
									null
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7947971998411995,
							false
							,[
							[
								11,
								"newVal"
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.right
									,[
[
										20,
										71,
										cr.plugins_.Dictionary.prototype.exps.CurrentKey,
										true,
										null
									]
,[
										0,
										2
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						7856605768192547,
						[
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							8942220230550019,
							false
							,[
							[
								1,
								[
									2,
									"setLangTo"
								]
							]
,							[
								13,
																	[
										7,
										[
											23,
											"newVal"
										]
									]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3011715623268669,
							false
							,[
							[
								11,
								"timeToValidLang"
							]
,							[
								7,
								[
									1,
									0.5
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3804223349797093,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1905937301893714,
					false
					,[
					[
						1,
						[
							2,
							"APIPlaytouch_init"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5081587311157511,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6322551777565068,
						false
						,[
						[
							11,
							"splashShown"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					1,
					"theLayer",
					1,
					"APIPlaytouch",
false,false,9324374500254438,false
				]
,				[
					0,
					null,
					false,
					null,
					3640758026784566,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetLayerParallax,
						null,
						7632791038937885,
						false
						,[
						[
							5,
							[
								23,
								"theLayer"
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetLayerScaleRate,
						null,
						4567477101450801,
						false
						,[
						[
							5,
							[
								23,
								"theLayer"
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						1,
						cr.plugins_.Sprite.prototype.acts.Destroy,
						null,
						4807442615562342,
						false
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2637891504680359,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						966181427719953,
						false
						,[
						[
							1,
							[
								2,
								"APIPlaytouch_destroy"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1426670091559539,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6627969211268723,
						false
						,[
						[
							11,
							"IS_LANDSCAPE"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						5850945269544436,
						false
						,[
						[
							4,
							77
						]
,						[
							5,
							[
								23,
								"theLayer"
							]
						]
,						[
							0,
							[
								1,
								255
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						77,
						cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
						null,
						8944339053939242,
						false
						,[
						[
							10,
							0
						]
,						[
							3,
							1
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2243720746519984,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							761056424141551,
							false
							,[
							[
								7,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"thisDeviceCanPlaySound"
									]
									]
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							true,
							null,
							485912600497263,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								8404303144355265,
								false
								,[
								[
									11,
									"ACTIVE_MG"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								42,
								cr.plugins_.Dictionary.prototype.cnds.HasKey,
								null,
								0,
								false,
								false,
								false,
								6214630466545775,
								false
								,[
								[
									1,
									[
										2,
										"rate"
									]
								]
								]
							]
							],
							[
							[
								77,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								9056013577545797,
								false
								,[
								[
									4,
									81
								]
,								[
									5,
									[
										23,
										"theLayer"
									]
								]
,								[
									7,
									[
										2,
										"rearR"
									]
								]
								]
							]
,							[
								81,
								cr.plugins_.Sprite.prototype.acts.SetMirrored,
								null,
								2336893138368095,
								false
								,[
								[
									3,
									0
								]
								]
							]
,							[
								81,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								4858860900325187,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								81,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								8107955612179666,
								false
								,[
								[
									4,
									75
								]
,								[
									5,
									[
										23,
										"theLayer"
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								81,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								6842046765296081,
								false
								,[
								[
									4,
									82
								]
,								[
									5,
									[
										23,
										"theLayer"
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								82,
								cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
								null,
								232193064436999,
								false
								,[
								[
									0,
									[
										20,
										27,
										cr.plugins_.Function.prototype.exps.Call,
										false,
										null
										,[
[
											2,
											"sound_isMute"
										]
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							4626753972974304,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								8636067237131928,
								false
							]
							],
							[
							[
								77,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								6866632158792673,
								false
								,[
								[
									4,
									75
								]
,								[
									5,
									[
										23,
										"theLayer"
									]
								]
,								[
									7,
									[
										2,
										"RateBtn"
									]
								]
								]
							]
,							[
								77,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								5305862406545026,
								false
								,[
								[
									4,
									82
								]
,								[
									5,
									[
										23,
										"theLayer"
									]
								]
,								[
									7,
									[
										2,
										"RateBtn"
									]
								]
								]
							]
,							[
								82,
								cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
								null,
								2150290155411056,
								false
								,[
								[
									0,
									[
										20,
										27,
										cr.plugins_.Function.prototype.exps.Call,
										false,
										null
										,[
[
											2,
											"sound_isMute"
										]
										]
									]
								]
								]
							]
,							[
								75,
								cr.plugins_.Sprite.prototype.acts.SetScale,
								null,
								6415738981326119,
								false
								,[
								[
									0,
									[
										1,
										0.8
									]
								]
								]
							]
,							[
								82,
								cr.plugins_.Sprite.prototype.acts.SetScale,
								null,
								1579684360481392,
								false
								,[
								[
									0,
									[
										1,
										0.6
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						true,
						null,
						9902607576813902,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							6102386997156107,
							false
							,[
							[
								11,
								"ACTIVE_MG"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							42,
							cr.plugins_.Dictionary.prototype.cnds.HasKey,
							null,
							0,
							false,
							false,
							false,
							3160321040948352,
							false
							,[
							[
								1,
								[
									2,
									"rate"
								]
							]
							]
						]
						],
						[
						[
							77,
							cr.plugins_.Sprite.prototype.acts.Spawn,
							null,
							9215005500718278,
							false
							,[
							[
								4,
								81
							]
,							[
								5,
								[
									23,
									"theLayer"
								]
							]
,							[
								7,
								[
									2,
									"rearL"
								]
							]
							]
						]
,						[
							81,
							cr.plugins_.Sprite.prototype.acts.Spawn,
							null,
							733122202922666,
							false
							,[
							[
								4,
								75
							]
,							[
								5,
								[
									23,
									"theLayer"
								]
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							81,
							cr.plugins_.Sprite.prototype.acts.Spawn,
							null,
							3548246067354597,
							false
							,[
							[
								4,
								76
							]
,							[
								5,
								[
									23,
									"theLayer"
								]
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							76,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							4662184715128615,
							false
							,[
							[
								0,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"langNum"
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						5594314329188893,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							3080884124370185,
							false
						]
						],
						[
						[
							77,
							cr.plugins_.Sprite.prototype.acts.Spawn,
							null,
							3983080243175967,
							false
							,[
							[
								4,
								75
							]
,							[
								5,
								[
									23,
									"theLayer"
								]
							]
,							[
								7,
								[
									2,
									"MoreGameBtn"
								]
							]
							]
						]
,						[
							77,
							cr.plugins_.Sprite.prototype.acts.Spawn,
							null,
							9194435847605524,
							false
							,[
							[
								4,
								76
							]
,							[
								5,
								[
									23,
									"theLayer"
								]
							]
,							[
								7,
								[
									2,
									"MoreGameBtn"
								]
							]
							]
						]
,						[
							76,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							4871126928953818,
							false
							,[
							[
								0,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"langNum"
									]
									]
								]
							]
							]
						]
,						[
							75,
							cr.plugins_.Sprite.prototype.acts.SetScale,
							null,
							3295735912386597,
							false
							,[
							[
								0,
								[
									1,
									0.8
								]
							]
							]
						]
,						[
							76,
							cr.plugins_.Sprite.prototype.acts.SetScale,
							null,
							5022835050068085,
							false
							,[
							[
								0,
								[
									1,
									0.8
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						true,
						null,
						3238247797080992,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							8046401194587948,
							false
							,[
							[
								11,
								"ACTIVE_MG"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							42,
							cr.plugins_.Dictionary.prototype.cnds.HasKey,
							null,
							0,
							false,
							false,
							false,
							585119856122913,
							false
							,[
							[
								1,
								[
									2,
									"rate"
								]
							]
							]
						]
						],
						[
						[
							77,
							cr.plugins_.Sprite.prototype.acts.MoveToTop,
							null,
							741052503268758,
							false
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						7219622476792935,
						[
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							7542944165633705,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								2321846006901746,
								false
								,[
								[
									11,
									"ACTIVE_MG"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								77,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								1373616850778109,
								false
								,[
								[
									4,
									78
								]
,								[
									5,
									[
										23,
										"theLayer"
									]
								]
,								[
									7,
									[
										2,
										"MoreGameBtn"
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							2880362871736951,
							[
							[
								42,
								cr.plugins_.Dictionary.prototype.cnds.HasKey,
								null,
								0,
								false,
								false,
								false,
								7910417974041518,
								false
								,[
								[
									1,
									[
										2,
										"rate"
									]
								]
								]
							]
							],
							[
							[
								77,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								9025335148356013,
								false
								,[
								[
									4,
									79
								]
,								[
									5,
									[
										23,
										"theLayer"
									]
								]
,								[
									7,
									[
										2,
										"RateBtn"
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2817220799625096,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						6393141640113092,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						9460236471894845,
						false
						,[
						[
							4,
							77
						]
,						[
							5,
							[
								23,
								"theLayer"
							]
						]
,						[
							0,
							[
								4,
								[
									0,
									60
								]
								,[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										23,
										"theLayer"
									]
									]
								]
							]
						]
,						[
							0,
							[
								1,
								255
							]
						]
						]
					]
,					[
						77,
						cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
						null,
						5674429832315318,
						false
						,[
						[
							10,
							0
						]
,						[
							3,
							1
						]
						]
					]
,					[
						77,
						cr.plugins_.Sprite.prototype.acts.SetAngle,
						null,
						9429628089385616,
						false
						,[
						[
							0,
							[
								0,
								-90
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2629281761989904,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							5128756223079906,
							false
							,[
							[
								7,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"thisDeviceCanPlaySound"
									]
									]
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							77,
							cr.plugins_.Sprite.prototype.acts.Spawn,
							null,
							3826630729745244,
							false
							,[
							[
								4,
								75
							]
,							[
								5,
								[
									23,
									"theLayer"
								]
							]
,							[
								7,
								[
									2,
									"L_sound"
								]
							]
							]
						]
,						[
							77,
							cr.plugins_.Sprite.prototype.acts.Spawn,
							null,
							7108697827210769,
							false
							,[
							[
								4,
								82
							]
,							[
								5,
								[
									23,
									"theLayer"
								]
							]
,							[
								7,
								[
									2,
									"L_sound"
								]
							]
							]
						]
,						[
							82,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							1847620114338291,
							false
							,[
							[
								0,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"sound_isMute"
									]
									]
								]
							]
							]
						]
,						[
							75,
							cr.plugins_.Sprite.prototype.acts.SetAngle,
							null,
							407777449721323,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
							]
						]
,						[
							82,
							cr.plugins_.Sprite.prototype.acts.SetAngle,
							null,
							7542073126035708,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
							]
						]
,						[
							75,
							cr.plugins_.Sprite.prototype.acts.SetScale,
							null,
							8055934812620737,
							false
							,[
							[
								0,
								[
									1,
									0.8
								]
							]
							]
						]
,						[
							82,
							cr.plugins_.Sprite.prototype.acts.SetScale,
							null,
							8240668034909414,
							false
							,[
							[
								0,
								[
									1,
									0.7
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1548704101088586,
						[
						],
						[
						[
							77,
							cr.plugins_.Sprite.prototype.acts.Spawn,
							null,
							826189533217804,
							false
							,[
							[
								4,
								75
							]
,							[
								5,
								[
									23,
									"theLayer"
								]
							]
,							[
								7,
								[
									2,
									"L_i18n"
								]
							]
							]
						]
,						[
							77,
							cr.plugins_.Sprite.prototype.acts.Spawn,
							null,
							2564901408911694,
							false
							,[
							[
								4,
								76
							]
,							[
								5,
								[
									23,
									"theLayer"
								]
							]
,							[
								7,
								[
									2,
									"L_i18n"
								]
							]
							]
						]
,						[
							76,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							12127128891777,
							false
							,[
							[
								0,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"langNum"
									]
									]
								]
							]
							]
						]
,						[
							75,
							cr.plugins_.Sprite.prototype.acts.SetAngle,
							null,
							3645615255169478,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
							]
						]
,						[
							76,
							cr.plugins_.Sprite.prototype.acts.SetAngle,
							null,
							3385804378351547,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
							]
						]
,						[
							75,
							cr.plugins_.Sprite.prototype.acts.SetScale,
							null,
							2989857457204609,
							false
							,[
							[
								0,
								[
									1,
									0.8
								]
							]
							]
						]
,						[
							76,
							cr.plugins_.Sprite.prototype.acts.SetScale,
							null,
							4037203673917129,
							false
							,[
							[
								0,
								[
									1,
									0.8
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1655959506420916,
						[
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							248640373694236,
							[
							],
							[
							[
								77,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								1810794860903285,
								false
								,[
								[
									4,
									80
								]
,								[
									5,
									[
										23,
										"theLayer"
									]
								]
,								[
									7,
									[
										2,
										"logoLandscape"
									]
								]
								]
							]
,							[
								80,
								cr.plugins_.Sprite.prototype.acts.SetAngle,
								null,
								8284814130234635,
								false
								,[
								[
									0,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							9438369156484477,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								6684414937985048,
								false
								,[
								[
									11,
									"ACTIVE_MG"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								77,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								7204899234235158,
								false
								,[
								[
									4,
									78
								]
,								[
									5,
									[
										23,
										"theLayer"
									]
								]
,								[
									7,
									[
										2,
										"L_MoreGameBtn"
									]
								]
								]
							]
,							[
								78,
								cr.plugins_.Sprite.prototype.acts.SetAngle,
								null,
								3197609400301561,
								false
								,[
								[
									0,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							5923000531831549,
							[
							[
								42,
								cr.plugins_.Dictionary.prototype.cnds.HasKey,
								null,
								0,
								false,
								false,
								false,
								1333144256032122,
								false
								,[
								[
									1,
									[
										2,
										"rate"
									]
								]
								]
							]
							],
							[
							[
								77,
								cr.plugins_.Sprite.prototype.acts.Spawn,
								null,
								9028246197534658,
								false
								,[
								[
									4,
									79
								]
,								[
									5,
									[
										23,
										"theLayer"
									]
								]
,								[
									7,
									[
										2,
										"L_RateBtn"
									]
								]
								]
							]
,							[
								79,
								cr.plugins_.Sprite.prototype.acts.SetAngle,
								null,
								6777369834779372,
								false
								,[
								[
									0,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4196502253599342,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					2829500968285297,
					false
					,[
					[
						1,
						[
							2,
							"APIPlaytouch_destroy"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2179058599144768,
					[
					],
					[
					[
						87,
						cr.plugins_.Sprite.prototype.acts.Destroy,
						null,
						1881187651804304,
						false
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6841346325983947,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1158092185840816,
					false
					,[
					[
						1,
						[
							2,
							"APIPlaytouch_isAPILoaded"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4552877580066856,
					[
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						4996566279291091,
						false
						,[
						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9506875116114764,
					[
					[
						77,
						cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
						null,
						0,
						false,
						false,
						false,
						557240866762336,
						false
						,[
						[
							10,
							0
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						4069574000479821,
						false
						,[
						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				true,
				null,
				9642743567362866,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					4355196460510379,
					false
				]
,				[
					25,
					cr.plugins_.Browser.prototype.cnds.OnPageVisible,
					null,
					1,
					false,
					false,
					false,
					460524519658209,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8694170785167746,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3636003045356472,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutname
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"Splash"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1797597665218659,
						false
						,[
						[
							11,
							"splashShown"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						3177483978881497,
						false
						,[
						[
							1,
							[
								2,
								"APIPlaytouch_init"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4714129709572486,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4912838613819124,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutname
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"GameOver"
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						884078394203595,
						false
						,[
						[
							1,
							[
								2,
								"APIPlaytouch_init"
							]
						]
,						[
							13,
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						987631584680051,
						[
						],
						[
						[
							0,
							cr.plugins_.Sprite.prototype.acts.Destroy,
							null,
							4202514926284097,
							false
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1398318810632306,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							6858495828276789,
							false
							,[
							[
								11,
								"IS_LANDSCAPE"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							6,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							1278597585161841,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							6,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							8557478453693963,
							false
							,[
							[
								0,
								[
									5,
									[
										19,
										cr.system_object.prototype.exps.viewportright
										,[
[
											20,
											6,
											cr.plugins_.Sprite.prototype.exps.LayerName,
											true,
											null
										]
										]
									]
									,[
										20,
										6,
										cr.plugins_.Sprite.prototype.exps.Width,
										false,
										null
									]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				true,
				null,
				7786076353857929,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					9139813535123395,
					false
					,[
					[
						4,
						76
					]
					]
				]
,				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					106443961266807,
					false
					,[
					[
						4,
						82
					]
					]
				]
,				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					9314200178518055,
					false
					,[
					[
						4,
						79
					]
					]
				]
,				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					8746486531268497,
					false
					,[
					[
						4,
						78
					]
					]
				]
				],
				[
				[
					72,
					cr.plugins_.Audio.prototype.acts.PlayByName,
					null,
					3453949650682874,
					false
					,[
					[
						3,
						0
					]
,					[
						1,
						[
							2,
							"butt_menu"
						]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							"butt_menu"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "API Playtouch V1 Compatibility Hacks for Shell 3.10 & 3.20"],
			false,
			null,
			9221559484647998,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9221559484647998,
				false
				,[
				[
					1,
					[
						2,
						"API Playtouch V1 Compatibility Hacks for Shell 3.10 & 3.20"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "Sound Manager Micro (Deprecated)"],
				false,
				null,
				160059056796375,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					160059056796375,
					false
					,[
					[
						1,
						[
							2,
							"Sound Manager Micro (Deprecated)"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3415556867642432,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						7345700918324713,
						false
						,[
						[
							1,
							[
								2,
								"thisDeviceCanPlaySound"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						3382055092849132,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							false,
							false,
							1049112479503338,
							false
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.SetReturnValue,
							null,
							5952824974432119,
							false
							,[
							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						6181539757519069,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							4779706214376433,
							false
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							5689494342351967,
							[
							[
								-1,
								cr.system_object.prototype.cnds.IsMobile,
								null,
								0,
								false,
								false,
								false,
								4427515518154357,
								false
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.SetReturnValue,
								null,
								2825188578038125,
								false
								,[
								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							408299018544446,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								3006650918988192,
								false
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.SetReturnValue,
								null,
								8647736966922606,
								false
								,[
								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4541807707599937,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						3455909042461059,
						false
						,[
						[
							1,
							[
								2,
								"sound_isMute"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						9254143452397798,
						[
						[
							72,
							cr.plugins_.Audio.prototype.cnds.IsSilent,
							null,
							0,
							false,
							false,
							false,
							8757961960771609,
							false
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.SetReturnValue,
							null,
							903748205823804,
							false
							,[
							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						7003187647477985,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							8602020471447299,
							false
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.SetReturnValue,
							null,
							5873992772317889,
							false
							,[
							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5716798782272771,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						7572817578188385,
						false
						,[
						[
							1,
							[
								2,
								"sound_mute"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						8976923737668849,
						[
						],
						[
						[
							72,
							cr.plugins_.Audio.prototype.acts.SetSilent,
							null,
							7506350129562058,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							72,
							cr.plugins_.Audio.prototype.acts.StopAll,
							null,
							1581668173471727,
							false
						]
,						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							4172373422993142,
							false
							,[
							[
								1,
								[
									2,
									"CB_mute"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8241409810851554,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						7532273575921868,
						false
						,[
						[
							1,
							[
								2,
								"sound_unMute"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						7489733380175252,
						[
						],
						[
						[
							72,
							cr.plugins_.Audio.prototype.acts.SetSilent,
							null,
							4419779280677055,
							false
							,[
							[
								3,
								1
							]
							]
						]
,						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							7597901634237688,
							false
							,[
							[
								1,
								[
									2,
									"CB_unMute"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					852135348624493,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						5369148616048723,
						false
						,[
						[
							1,
							[
								2,
								"CB_mute"
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					7491830266572327,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						1728156444684105,
						false
						,[
						[
							1,
							[
								2,
								"CB_unMute"
							]
						]
						]
					]
					],
					[
					]
				]
				]
			]
,			[
				0,
				[true, "MoreGame Manager Micro (Deprecated)"],
				false,
				null,
				8822400485599484,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					8822400485599484,
					false
					,[
					[
						1,
						[
							2,
							"MoreGame Manager Micro (Deprecated)"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1745451626100308,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						6975909827420514,
						false
						,[
						[
							1,
							[
								2,
								"moreGame_launch"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						6062866864229807,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							false,
							false,
							2777907836873317,
							false
						]
						],
						[
						[
							29,
							cr.plugins_.cjs.prototype.acts.ExecuteJS,
							null,
							5132835099635193,
							false
							,[
							[
								1,
								[
									2,
									"CocoonJS.App.forwardAsync('showmoregames();');"
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3281057381113771,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							true,
							false,
							5612580806638485,
							false
						]
						],
						[
						[
							29,
							cr.plugins_.cjs.prototype.acts.ExecuteJS,
							null,
							3440304910902473,
							false
							,[
							[
								1,
								[
									2,
									"showMG();"
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Rate Manager Micro (Deprecated)"],
				false,
				null,
				2780283335905862,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					2780283335905862,
					false
					,[
					[
						1,
						[
							2,
							"Rate Manager Micro (Deprecated)"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4380808487403484,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						4776539063405873,
						false
						,[
						[
							1,
							[
								2,
								"rate_launch"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						4605366918509311,
						[
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							5917022721457977,
							false
							,[
							[
								1,
								[
									2,
									"doRate"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9393833098816679,
			[
			[
				27,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				4289271226861076,
				false
				,[
				[
					1,
					[
						2,
						"pauseGS"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4374661760927138,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					7580165030264932,
					false
					,[
					[
						7,
						[
							23,
							"isPaused"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					7111712252727371,
					false
					,[
					[
						1,
						[
							2,
							"APIPlaytouch_init"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3013233741335554,
			[
			[
				27,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				4053747608712325,
				false
				,[
				[
					1,
					[
						2,
						"unPauseGS"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4277820460044932,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1247656534034113,
					false
					,[
					[
						7,
						[
							23,
							"isPaused"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					9147596816114482,
					false
					,[
					[
						1,
						[
							2,
							"APIPlaytouch_destroy"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			null,
			4407717123252377,
			[
			[
				26,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				5508738811498013,
				false
				,[
				[
					4,
					76
				]
				]
			]
,			[
				26,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				8165408075641267,
				false
				,[
				[
					4,
					78
				]
				]
			]
,			[
				26,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				5263652824964469,
				false
				,[
				[
					4,
					79
				]
				]
			]
,			[
				26,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				9512008014350798,
				false
				,[
				[
					4,
					82
				]
				]
			]
			],
			[
			[
				72,
				cr.plugins_.Audio.prototype.acts.PlayByName,
				null,
				8833998471269094,
				false
				,[
				[
					3,
					0
				]
,				[
					1,
					[
						2,
						"butt_menu"
					]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						"butt_menu"
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"GameMainScript",
		[
		[
			2,
			"FUNCTIONS",
			false
		]
,		[
			0,
			[true, "FUNCTIONS"],
			false,
			null,
			6359495224387602,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6359495224387602,
				false
				,[
				[
					1,
					[
						2,
						"FUNCTIONS"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "REQUIRED FUNCTIONS"],
				false,
				null,
				372952781974284,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					372952781974284,
					false
					,[
					[
						1,
						[
							2,
							"REQUIRED FUNCTIONS"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					714721911657494,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						5036234922406258,
						false
						,[
						[
							1,
							[
								2,
								"beforeGameStart"
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					8652390482589942,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						5615435462381609,
						false
						,[
						[
							1,
							[
								2,
								"onGameStart"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						8640166227268242,
						false
						,[
						[
							1,
							[
								2,
								"Init Bug Code"
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1915754427665029,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						5431030565884356,
						false
						,[
						[
							1,
							[
								2,
								"updateHUD_GS"
							]
						]
						]
					]
					],
					[
					[
						52,
						cr.plugins_.TiledBg.prototype.acts.SetWidth,
						null,
						1931241838952868,
						false
						,[
						[
							0,
							[
								6,
								[
									0,
									378
								]
								,[
									7,
									[
										5,
										[
											23,
											"maxMovesCount"
										]
										,[
											23,
											"moveCount"
										]
									]
									,[
										23,
										"maxMovesCount"
									]
								]
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						7584401702424112,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							7801559532896093,
							false
							,[
							[
								7,
								[
									6,
									[
										0,
										378
									]
									,[
										7,
										[
											5,
											[
												23,
												"maxMovesCount"
											]
											,[
												23,
												"moveCount"
											]
										]
										,[
											23,
											"maxMovesCount"
										]
									]
								]
							]
,							[
								8,
								3
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							52,
							cr.plugins_.TiledBg.prototype.acts.SetWidth,
							null,
							8236182437994617,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1598114386774319,
						[
						[
							21,
							cr.plugins_.Spritefont2.prototype.cnds.IsBoolInstanceVarSet,
							null,
							0,
							false,
							true,
							false,
							4777385500041665,
							false
							,[
							[
								10,
								3
							]
							]
						]
,						[
							21,
							cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							171015619293295,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							21,
							cr.plugins_.Spritefont2.prototype.acts.SetText,
							null,
							5616618019169862,
							false
							,[
							[
								7,
								[
									10,
									[
										10,
										[
											2,
											": "
										]
										,[
											19,
											cr.system_object.prototype.exps.floor
											,[
[
												23,
												"timer"
											]
											]
										]
									]
									,[
										2,
										" s"
									]
								]
							]
							]
						]
,						[
							21,
							cr.plugins_.Spritefont2.prototype.acts.SetX,
							null,
							1270551074851186,
							false
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											20,
											73,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
										,[
											20,
											73,
											cr.plugins_.Sprite.prototype.exps.Width,
											false,
											null
										]
									]
									,[
										0,
										5
									]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8210080103515952,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						6174518229061221,
						false
						,[
						[
							1,
							[
								2,
								"pauseGS"
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					5555055863609335,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						2408127504588889,
						false
						,[
						[
							1,
							[
								2,
								"unPauseGS"
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					9272137847613705,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						2030549647703955,
						false
						,[
						[
							1,
							[
								2,
								"earnStarCB"
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					8556084933754446,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						1848526346673944,
						false
						,[
						[
							1,
							[
								2,
								"looseStarCB"
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					[true, "LOAD THE LEVEL"],
					false,
					null,
					8147314142380466,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						8147314142380466,
						false
						,[
						[
							1,
							[
								2,
								"LOAD THE LEVEL"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "IF THERE IS A CSV TO LOAD"],
						false,
						null,
						5804291064773017,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							5804291064773017,
							false
							,[
							[
								1,
								[
									2,
									"IF THERE IS A CSV TO LOAD"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							1287567292226585,
							[
							[
								27,
								cr.plugins_.Function.prototype.cnds.OnFunction,
								null,
								2,
								false,
								false,
								false,
								5453963889640311,
								false
								,[
								[
									1,
									[
										2,
										"loadLevel"
									]
								]
								]
							]
							],
							[
							[
								30,
								cr.plugins_.AJAX.prototype.acts.Request,
								null,
								8707803718577283,
								false
								,[
								[
									1,
									[
										2,
										"loadLVL"
									]
								]
,								[
									1,
									[
										10,
										[
											10,
											[
												2,
												"./lvl"
											]
											,[
												23,
												"levelNumber"
											]
										]
										,[
											2,
											".csv"
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3485438635385015,
							[
							[
								30,
								cr.plugins_.AJAX.prototype.cnds.OnComplete,
								null,
								1,
								false,
								false,
								false,
								7686883748821853,
								false
								,[
								[
									1,
									[
										2,
										"loadLVL"
									]
								]
								]
							]
							],
							[
							[
								45,
								cr.plugins_.Arr.prototype.acts.Clear,
								null,
								7477107747710713,
								false
							]
,							[
								31,
								cr.plugins_.Rex_CSV2Array.prototype.acts.CSV2Array,
								null,
								2434599296968711,
								false
								,[
								[
									1,
									[
										20,
										30,
										cr.plugins_.AJAX.prototype.exps.LastData,
										true,
										null
									]
								]
,								[
									4,
									45
								]
,								[
									3,
									1
								]
								]
							]
,							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								9594230729558212,
								false
								,[
								[
									1,
									[
										2,
										"buildGrid"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[false, "IF THERE IS NOTHING TO LOAD"],
						false,
						null,
						3732420968892814,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							3732420968892814,
							false
							,[
							[
								1,
								[
									2,
									"IF THERE IS NOTHING TO LOAD"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							8191606711239673,
							[
							[
								27,
								cr.plugins_.Function.prototype.cnds.OnFunction,
								null,
								2,
								false,
								false,
								false,
								2290763340921226,
								false
								,[
								[
									1,
									[
										2,
										"loadLevel"
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								9201897467214554,
								false
								,[
								[
									1,
									[
										2,
										"buildGrid"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[false, "IF YOU WANT TO DO SOMETHING ELSE"],
						false,
						null,
						6871012603425469,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							6871012603425469,
							false
							,[
							[
								1,
								[
									2,
									"IF YOU WANT TO DO SOMETHING ELSE"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							4362558122825524,
							[
							[
								27,
								cr.plugins_.Function.prototype.cnds.OnFunction,
								null,
								2,
								false,
								false,
								false,
								6990294985874167,
								false
								,[
								[
									1,
									[
										2,
										"loadLevel"
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								7333271983744542,
								[
								],
								[
								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									2041182106691176,
									false
									,[
									[
										1,
										[
											2,
											"buildGrid"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "BUILD THE GAME"],
					false,
					null,
					5262127124161474,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						5262127124161474,
						false
						,[
						[
							1,
							[
								2,
								"BUILD THE GAME"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[false, "IF THERE IS NOTHING TO DO"],
						false,
						null,
						8242287661857024,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							8242287661857024,
							false
							,[
							[
								1,
								[
									2,
									"IF THERE IS NOTHING TO DO"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							8634992456412607,
							[
							[
								27,
								cr.plugins_.Function.prototype.cnds.OnFunction,
								null,
								2,
								false,
								false,
								false,
								8874147528276695,
								false
								,[
								[
									1,
									[
										2,
										"buildGrid"
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								2297428752084499,
								false
								,[
								[
									1,
									[
										2,
										"beforeGameStart"
									]
								]
,								[
									13,
								]
								]
							]
,							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								9932750832974702,
								false
								,[
								[
									1,
									[
										2,
										"unPause"
									]
								]
,								[
									13,
																			[
											7,
											[
												2,
												"no refresh"
											]
										]
								]
								]
							]
,							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								665270575358298,
								false
								,[
								[
									1,
									[
										2,
										"initGame"
									]
								]
,								[
									13,
								]
								]
							]
,							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								5784661388033674,
								false
								,[
								[
									1,
									[
										2,
										"startGame"
									]
								]
,								[
									13,
																			[
											7,
											[
												23,
												"ACTIVATE321"
											]
										]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "IF THERE IS SOMETHING TO DO"],
						false,
						null,
						3777161572921672,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							3777161572921672,
							false
							,[
							[
								1,
								[
									2,
									"IF THERE IS SOMETHING TO DO"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							8634992456412607,
							[
							[
								27,
								cr.plugins_.Function.prototype.cnds.OnFunction,
								null,
								2,
								false,
								false,
								false,
								8874147528276695,
								false
								,[
								[
									1,
									[
										2,
										"buildGrid"
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								6996010194895788,
								[
								],
								[
								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									9134957366283617,
									false
									,[
									[
										1,
										[
											2,
											"placeCarsOnGrid"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								6485510607163945,
								[
								],
								[
								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									1831466332329728,
									false
									,[
									[
										1,
										[
											2,
											"beforeGameStart"
										]
									]
,									[
										13,
									]
									]
								]
,								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									9932750832974702,
									false
									,[
									[
										1,
										[
											2,
											"unPause"
										]
									]
,									[
										13,
																					[
												7,
												[
													2,
													"no refresh"
												]
											]
									]
									]
								]
,								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									665270575358298,
									false
									,[
									[
										1,
										[
											2,
											"initGame"
										]
									]
,									[
										13,
									]
									]
								]
,								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									5784661388033674,
									false
									,[
									[
										1,
										[
											2,
											"startGame"
										]
									]
,									[
										13,
																					[
												7,
												[
													23,
													"ACTIVATE321"
												]
											]
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "GAME SPECIFIC"],
				false,
				null,
				810103745680985,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					810103745680985,
					false
					,[
					[
						1,
						[
							2,
							"GAME SPECIFIC"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					[true, "HUD / Score Related"],
					false,
					null,
					2766077711707078,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						2766077711707078,
						false
						,[
						[
							1,
							[
								2,
								"HUD / Score Related"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						5671485850802893,
						[
						[
							27,
							cr.plugins_.Function.prototype.cnds.OnFunction,
							null,
							2,
							false,
							false,
							false,
							9381964394649976,
							false
							,[
							[
								1,
								[
									2,
									"testForFadingStars"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							9280795238820197,
							[
							[
								-1,
								cr.system_object.prototype.cnds.ForEach,
								null,
								0,
								true,
								false,
								false,
								5145771779645625,
								false
								,[
								[
									4,
									59
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								1788462551897397,
								false
								,[
								[
									11,
									"gameStarted"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								100487708096488,
								[
								[
									59,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									2335352998117817,
									false
									,[
									[
										10,
										2
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											2,
											"timer"
										]
									]
									]
								]
,								[
									59,
									cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
									null,
									0,
									false,
									true,
									false,
									5063232191270057,
									false
									,[
									[
										1,
										[
											2,
											"standFade"
										]
									]
									]
								]
,								[
									59,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									876113560366097,
									false
									,[
									[
										10,
										1
									]
,									[
										8,
										1
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								]
								,[
								[
									0,
									null,
									false,
									null,
									6075841843612151,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										8411749922268288,
										false
										,[
										[
											7,
											[
												23,
												"moveCount"
											]
										]
,										[
											8,
											4
										]
,										[
											7,
											[
												6,
												[
													23,
													"maxMovesCount"
												]
												,[
													1,
													0.6
												]
											]
										]
										]
									]
,									[
										59,
										cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
										null,
										0,
										false,
										false,
										false,
										6734182390072735,
										false
										,[
										[
											10,
											1
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
									],
									[
									[
										59,
										cr.plugins_.Sprite.prototype.acts.SetAnim,
										null,
										5721320884254659,
										false
										,[
										[
											1,
											[
												2,
												"standFade"
											]
										]
,										[
											3,
											1
										]
										]
									]
,									[
										-1,
										cr.system_object.prototype.acts.SubVar,
										null,
										6386810737494715,
										false
										,[
										[
											11,
											"Score"
										]
,										[
											7,
											[
												7,
												[
													23,
													"GAME_MAX_SCORE"
												]
												,[
													0,
													3
												]
											]
										]
										]
									]
,									[
										27,
										cr.plugins_.Function.prototype.acts.CallFunction,
										null,
										8321287947531413,
										false
										,[
										[
											1,
											[
												2,
												"looseStar"
											]
										]
,										[
											13,
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									3030891175283244,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										4471981404034117,
										false
										,[
										[
											7,
											[
												23,
												"moveCount"
											]
										]
,										[
											8,
											4
										]
,										[
											7,
											[
												6,
												[
													23,
													"maxMovesCount"
												]
												,[
													1,
													0.4
												]
											]
										]
										]
									]
,									[
										59,
										cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
										null,
										0,
										false,
										false,
										false,
										8959799830120604,
										false
										,[
										[
											10,
											1
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												2
											]
										]
										]
									]
									],
									[
									[
										59,
										cr.plugins_.Sprite.prototype.acts.SetAnim,
										null,
										3019754796163191,
										false
										,[
										[
											1,
											[
												2,
												"standFade"
											]
										]
,										[
											3,
											1
										]
										]
									]
,									[
										-1,
										cr.system_object.prototype.acts.SubVar,
										null,
										9886353466368819,
										false
										,[
										[
											11,
											"Score"
										]
,										[
											7,
											[
												7,
												[
													23,
													"GAME_MAX_SCORE"
												]
												,[
													0,
													3
												]
											]
										]
										]
									]
,									[
										27,
										cr.plugins_.Function.prototype.acts.CallFunction,
										null,
										5131419702347467,
										false
										,[
										[
											1,
											[
												2,
												"looseStar"
											]
										]
,										[
											13,
										]
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "Cars Placement Related"],
					false,
					null,
					9963033970586804,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						9963033970586804,
						false
						,[
						[
							1,
							[
								2,
								"Cars Placement Related"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						8477420160849723,
						[
						[
							27,
							cr.plugins_.Function.prototype.cnds.OnFunction,
							null,
							2,
							false,
							false,
							false,
							4220802183815042,
							false
							,[
							[
								1,
								[
									2,
									"snapCarToGrid"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							1488574192628999,
							[
							[
								56,
								cr.plugins_.Sprite.prototype.cnds.PickByUID,
								null,
								0,
								false,
								false,
								true,
								1391800261548339,
								false
								,[
								[
									0,
									[
										19,
										cr.system_object.prototype.exps["int"]
										,[
[
											20,
											27,
											cr.plugins_.Function.prototype.exps.Param,
											false,
											null
											,[
[
												0,
												0
											]
											]
										]
										]
									]
								]
								]
							]
,							[
								64,
								cr.plugins_.Sprite.prototype.cnds.PickDistance,
								null,
								0,
								false,
								false,
								true,
								8010408144713978,
								false
								,[
								[
									3,
									0
								]
,								[
									0,
									[
										20,
										56,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
								]
,								[
									0,
									[
										20,
										56,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
								]
								]
							]
							],
							[
							[
								56,
								cr.plugins_.Sprite.prototype.acts.SetPos,
								null,
								3551116051719814,
								false
								,[
								[
									0,
									[
										20,
										64,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
								]
,								[
									0,
									[
										20,
										64,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								9632594656714821,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									6370056817718579,
									false
									,[
									[
										7,
										[
											20,
											64,
											cr.plugins_.Sprite.prototype.exps.UID,
											false,
											null
										]
									]
,									[
										8,
										1
									]
,									[
										7,
										[
											21,
											56,
											false,
											null
											,4
										]
									]
									]
								]
								],
								[
								[
									72,
									cr.plugins_.Audio.prototype.acts.PlayByName,
									null,
									9001662000036451,
									false
									,[
									[
										3,
										0
									]
,									[
										1,
										[
											2,
											"mvmt"
										]
									]
,									[
										3,
										0
									]
,									[
										0,
										[
											0,
											0
										]
									]
,									[
										1,
										[
											2,
											"mvmt_sound"
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								800253756741343,
								[
								],
								[
								[
									56,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									9608989129734022,
									false
									,[
									[
										10,
										4
									]
,									[
										7,
										[
											20,
											64,
											cr.plugins_.Sprite.prototype.exps.UID,
											false,
											null
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3194699184313988,
							[
							[
								-1,
								cr.system_object.prototype.cnds.ForEachOrdered,
								null,
								0,
								true,
								false,
								false,
								1915850808522001,
								false
								,[
								[
									4,
									63
								]
,								[
									7,
									[
										0,
										0
									]
								]
,								[
									3,
									0
								]
								]
							]
,							[
								63,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								9140390159980156,
								false
								,[
								[
									10,
									0
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										19,
										cr.system_object.prototype.exps["int"]
										,[
[
											20,
											27,
											cr.plugins_.Function.prototype.exps.Param,
											false,
											null
											,[
[
												0,
												0
											]
											]
										]
										]
									]
								]
								]
							]
							],
							[
							[
								63,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								6559782136061188,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3369996941593368,
							[
							[
								56,
								cr.plugins_.Sprite.prototype.cnds.PickByUID,
								null,
								0,
								false,
								false,
								true,
								5928388459578445,
								false
								,[
								[
									0,
									[
										19,
										cr.system_object.prototype.exps["int"]
										,[
[
											20,
											27,
											cr.plugins_.Function.prototype.exps.Param,
											false,
											null
											,[
[
												0,
												0
											]
											]
										]
										]
									]
								]
								]
							]
,							[
								56,
								cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
								null,
								0,
								false,
								false,
								false,
								8618019777334927,
								false
								,[
								[
									4,
									63
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.ForEachOrdered,
								null,
								0,
								true,
								false,
								false,
								9603750447848486,
								false
								,[
								[
									4,
									63
								]
,								[
									7,
									[
										0,
										0
									]
								]
,								[
									3,
									0
								]
								]
							]
							],
							[
							[
								63,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								64227202516801,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										20,
										56,
										cr.plugins_.Sprite.prototype.exps.UID,
										false,
										null
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						5392118260965422,
						[
						[
							27,
							cr.plugins_.Function.prototype.cnds.OnFunction,
							null,
							2,
							false,
							false,
							false,
							3345692292082845,
							false
							,[
							[
								1,
								[
									2,
									"placeCarsOnGrid"
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							4943217542491003,
							false
							,[
							[
								1,
								[
									2,
									"earnStar"
								]
							]
,							[
								13,
																	[
										7,
										[
											0,
											3
										]
									]
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							7236892708850392,
							[
							[
								-1,
								cr.system_object.prototype.cnds.For,
								null,
								0,
								true,
								false,
								false,
								8725871648440523,
								false
								,[
								[
									1,
									[
										2,
										"CarsY"
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										5,
										[
											20,
											23,
											cr.plugins_.Rex_SLGBoard.prototype.exps.BoardHeight,
											false,
											null
										]
										,[
											0,
											1
										]
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.For,
								null,
								0,
								true,
								false,
								false,
								4218475391298067,
								false
								,[
								[
									1,
									[
										2,
										"CarsX"
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										5,
										[
											20,
											23,
											cr.plugins_.Rex_SLGBoard.prototype.exps.BoardWidth,
											false,
											null
										]
										,[
											0,
											1
										]
									]
								]
								]
							]
							],
							[
							[
								23,
								cr.plugins_.Rex_SLGBoard.prototype.acts.CreateTile,
								null,
								2160298108343272,
								false
								,[
								[
									4,
									64
								]
,								[
									0,
									[
										19,
										cr.system_object.prototype.exps.loopindex
										,[
[
											2,
											"CarsX"
										]
										]
									]
								]
,								[
									0,
									[
										19,
										cr.system_object.prototype.exps.loopindex
										,[
[
											2,
											"CarsY"
										]
										]
									]
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								23,
								cr.plugins_.Rex_SLGBoard.prototype.acts.CreateChess,
								null,
								6100266204125389,
								false
								,[
								[
									4,
									63
								]
,								[
									0,
									[
										19,
										cr.system_object.prototype.exps.loopindex
										,[
[
											2,
											"CarsX"
										]
										]
									]
								]
,								[
									0,
									[
										19,
										cr.system_object.prototype.exps.loopindex
										,[
[
											2,
											"CarsY"
										]
										]
									]
								]
,								[
									7,
									[
										0,
										0
									]
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							]
							,[
							[
								1,
								"carDirection",
								0,
								-1,
false,false,5148118190640319,false
							]
,							[
								1,
								"carType",
								0,
								-1,
false,false,6715083189019569,false
							]
,							[
								0,
								null,
								false,
								null,
								5972956030718106,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									963401729643286,
									false
									,[
									[
										7,
										[
											19,
											cr.system_object.prototype.exps["int"]
											,[
[
												20,
												45,
												cr.plugins_.Arr.prototype.exps.At,
												false,
												null
												,[
[
													19,
													cr.system_object.prototype.exps.loopindex
													,[
[
														2,
														"CarsX"
													]
													]
												]
,[
													19,
													cr.system_object.prototype.exps.loopindex
													,[
[
														2,
														"CarsY"
													]
													]
												]
												]
											]
											]
										]
									]
,									[
										8,
										1
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									-1,
									cr.system_object.prototype.acts.SetVar,
									null,
									19865221642805,
									false
									,[
									[
										11,
										"carType"
									]
,									[
										7,
										[
											19,
											cr.system_object.prototype.exps.floor
											,[
[
												7,
												[
													19,
													cr.system_object.prototype.exps["int"]
													,[
[
														20,
														45,
														cr.plugins_.Arr.prototype.exps.At,
														false,
														null
														,[
[
															19,
															cr.system_object.prototype.exps.loopindex
															,[
[
																2,
																"CarsX"
															]
															]
														]
,[
															19,
															cr.system_object.prototype.exps.loopindex
															,[
[
																2,
																"CarsY"
															]
															]
														]
														]
													]
													]
												]
												,[
													0,
													10
												]
											]
											]
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.acts.SetVar,
									null,
									8836996627659462,
									false
									,[
									[
										11,
										"carDirection"
									]
,									[
										7,
										[
											19,
											cr.system_object.prototype.exps.floor
											,[
[
												8,
												[
													19,
													cr.system_object.prototype.exps["int"]
													,[
[
														20,
														45,
														cr.plugins_.Arr.prototype.exps.At,
														false,
														null
														,[
[
															19,
															cr.system_object.prototype.exps.loopindex
															,[
[
																2,
																"CarsX"
															]
															]
														]
,[
															19,
															cr.system_object.prototype.exps.loopindex
															,[
[
																2,
																"CarsY"
															]
															]
														]
														]
													]
													]
												]
												,[
													0,
													10
												]
											]
											]
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.acts.CreateObject,
									null,
									3275478763891729,
									false
									,[
									[
										4,
										56
									]
,									[
										5,
										[
											0,
											3
										]
									]
,									[
										0,
										[
											20,
											63,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
,									[
										0,
										[
											20,
											63,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									56,
									cr.plugins_.Sprite.prototype.acts.SetAnim,
									null,
									847744620758658,
									false
									,[
									[
										1,
										[
											10,
											[
												2,
												"car"
											]
											,[
												23,
												"carType"
											]
										]
									]
,									[
										3,
										1
									]
									]
								]
,								[
									56,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									5041157657113949,
									false
									,[
									[
										10,
										3
									]
,									[
										7,
										[
											20,
											56,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									]
								]
,								[
									56,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									4224567335708622,
									false
									,[
									[
										10,
										2
									]
,									[
										7,
										[
											20,
											56,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.acts.SetVar,
									null,
									3181693867774793,
									false
									,[
									[
										11,
										"placedCarUID"
									]
,									[
										7,
										[
											20,
											56,
											cr.plugins_.Sprite.prototype.exps.UID,
											false,
											null
										]
									]
									]
								]
								]
								,[
								[
									0,
									null,
									false,
									null,
									5755646123758695,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										6346973750525569,
										false
										,[
										[
											7,
											[
												23,
												"carDirection"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												0
											]
										]
										]
									]
									],
									[
									[
										56,
										cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
										null,
										6908180509815166,
										false
										,[
										[
											10,
											1
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
,									[
										56,
										cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
										null,
										2126666441457082,
										false
										,[
										[
											10,
											0
										]
,										[
											7,
											[
												0,
												0
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									3735945952995297,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										6408217264994058,
										false
										,[
										[
											7,
											[
												23,
												"carDirection"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
									],
									[
									[
										56,
										cr.plugins_.Sprite.prototype.acts.RotateClockwise,
										null,
										9987622230658327,
										false
										,[
										[
											0,
											[
												0,
												90
											]
										]
										]
									]
,									[
										56,
										cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
										null,
										541902841934471,
										false
										,[
										[
											10,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
,									[
										56,
										cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
										null,
										9650488006135433,
										false
										,[
										[
											10,
											1
										]
,										[
											7,
											[
												0,
												0
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									6511353334929233,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										4186007388124529,
										false
										,[
										[
											7,
											[
												23,
												"carDirection"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												2
											]
										]
										]
									]
									],
									[
									[
										56,
										cr.plugins_.Sprite.prototype.acts.RotateClockwise,
										null,
										4438466939302503,
										false
										,[
										[
											0,
											[
												0,
												180
											]
										]
										]
									]
,									[
										56,
										cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
										null,
										9777839835714925,
										false
										,[
										[
											10,
											1
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
,									[
										56,
										cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
										null,
										1912424812012041,
										false
										,[
										[
											10,
											0
										]
,										[
											7,
											[
												0,
												0
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									6421406446505639,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										6954454813731632,
										false
										,[
										[
											7,
											[
												23,
												"carDirection"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												3
											]
										]
										]
									]
									],
									[
									[
										56,
										cr.plugins_.Sprite.prototype.acts.RotateCounterclockwise,
										null,
										3321562124185721,
										false
										,[
										[
											0,
											[
												0,
												90
											]
										]
										]
									]
,									[
										56,
										cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
										null,
										5478041996835519,
										false
										,[
										[
											10,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
,									[
										56,
										cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
										null,
										5523204857942779,
										false
										,[
										[
											10,
											1
										]
,										[
											7,
											[
												0,
												0
											]
										]
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "PAUSE"],
			false,
			null,
			7283709643132018,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7283709643132018,
				false
				,[
				[
					1,
					[
						2,
						"PAUSE"
					]
				]
				]
			]
			],
			[
			]
		]
,		[
			0,
			[true, "Settings stars' scores"],
			false,
			null,
			987844665534997,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				987844665534997,
				false
				,[
				[
					1,
					[
						2,
						"Settings stars' scores"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6571944095985477,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					616354841295995,
					false
					,[
					[
						1,
						[
							2,
							"setObjectifPause"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					true,
					null,
					2406640652075714,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.PickByUID,
						null,
						0,
						false,
						false,
						true,
						723899327187283,
						false
						,[
						[
							0,
							[
								0,
								121
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.PickByUID,
						null,
						0,
						false,
						false,
						true,
						7258628901200961,
						false
						,[
						[
							0,
							[
								0,
								305
							]
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetText,
						null,
						5153907838259612,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"prettyNumber"
								]
,[
									2,
									"1000000"
								]
,[
									2,
									" "
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					true,
					null,
					6703664873971355,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.PickByUID,
						null,
						0,
						false,
						false,
						true,
						570498170073615,
						false
						,[
						[
							0,
							[
								0,
								154
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.PickByUID,
						null,
						0,
						false,
						false,
						true,
						3974611921830769,
						false
						,[
						[
							0,
							[
								0,
								306
							]
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetText,
						null,
						8812177385378836,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"prettyNumber"
								]
,[
									2,
									"2000000"
								]
,[
									2,
									" "
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					true,
					null,
					3842425114163965,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.PickByUID,
						null,
						0,
						false,
						false,
						true,
						9827516759076667,
						false
						,[
						[
							0,
							[
								0,
								155
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.PickByUID,
						null,
						0,
						false,
						false,
						true,
						5042420376629015,
						false
						,[
						[
							0,
							[
								0,
								307
							]
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetText,
						null,
						2734307724454568,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"prettyNumber"
								]
,[
									2,
									"3000000"
								]
,[
									2,
									" "
								]
								]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[false, "SOFT CODED"],
			false,
			null,
			5364451620826668,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5364451620826668,
				false
				,[
				[
					1,
					[
						2,
						"SOFT CODED"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				951010481090867,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					3899095035859532,
					false
					,[
					[
						1,
						[
							2,
							"setObjectifPause"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					338894122339455,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						284156517615307,
						false
						,[
						[
							10,
							4
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"pause"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.ForEachOrdered,
						null,
						0,
						true,
						false,
						false,
						3525825343480911,
						false
						,[
						[
							4,
							21
						]
,						[
							7,
							[
								21,
								21,
								false,
								null
								,2
							]
						]
,						[
							3,
							0
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetText,
						null,
						6526425947755899,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"prettyNumber"
								]
,[
									20,
									41,
									cr.plugins_.Rex_CSV.prototype.exps.At,
									false,
									null
									,[
[
										10,
										[
											2,
											"star_"
										]
										,[
											21,
											21,
											false,
											null
											,2
										]
									]
,[
										10,
										[
											2,
											"lvl_"
										]
										,[
											23,
											"levelNumber"
										]
									]
									]
								]
,[
									2,
									" "
								]
								]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "HARD CODED"],
			false,
			null,
			5959859932884155,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5959859932884155,
				false
				,[
				[
					1,
					[
						2,
						"HARD CODED"
					]
				]
				]
			]
			],
			[
			]
		]
,		[
			0,
			[false, "HELP ON PAUSE"],
			false,
			null,
			6531794148633965,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6531794148633965,
				false
				,[
				[
					1,
					[
						2,
						"HELP ON PAUSE"
					]
				]
				]
			]
			],
			[
			]
		]
,		[
			0,
			[false, "HELP ON GAMEOVER/VICTORY"],
			false,
			null,
			5699383574722492,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5699383574722492,
				false
				,[
				[
					1,
					[
						2,
						"HELP ON GAMEOVER/VICTORY"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8462535918697112,
				[
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					6566007872485943,
					false
					,[
					[
						1,
						[
							2,
							"gameOver"
						]
					]
,					[
						13,
													[
								7,
								[
									2,
									"victory"
								]
							]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2581226492143475,
				[
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					7017120537777394,
					false
					,[
					[
						1,
						[
							2,
							"gameOver"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[false, "HELP ON STARTING THE GAME"],
			false,
			null,
			9603936467918372,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9603936467918372,
				false
				,[
				[
					1,
					[
						2,
						"HELP ON STARTING THE GAME"
					]
				]
				]
			]
			],
			[
			]
		]
,		[
			0,
			null,
			false,
			null,
			9365761586061737,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				5972222656422278,
				false
			]
			],
			[
			]
			,[
			[
				0,
				[true, "DO NOT MODIFY 2"],
				false,
				null,
				9068368717853705,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					9068368717853705,
					false
					,[
					[
						1,
						[
							2,
							"DO NOT MODIFY 2"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9954675250997441,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9771577792738627,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6733089501258551,
						false
						,[
						[
							11,
							"gameStarted"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8027509539790184,
						false
						,[
						[
							11,
							"gameOverTrigged"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						7541606832979951,
						false
						,[
						[
							11,
							"starUnlocked"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						5056632936269854,
						false
						,[
						[
							11,
							"Score"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6997512744517617,
						false
						,[
						[
							11,
							"timer"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2828742571894901,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						9840187697825549,
						false
						,[
						[
							1,
							[
								2,
								"OnDestroy"
							]
						]
,						[
							3,
							0
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9175838701886869,
				[
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3533890478151993,
					false
					,[
					[
						11,
						"end"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2563917701002261,
					false
					,[
					[
						11,
						"starting"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.Rex_SLGBoard.prototype.acts.SetupLayout,
					null,
					1574557539474859,
					false
					,[
					[
						4,
						24
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8009952808969993,
					false
					,[
					[
						11,
						"timer"
					]
,					[
						7,
						[
							23,
							"GAME_MAX_TIME"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4867512791071245,
					false
					,[
					[
						11,
						"Score"
					]
,					[
						7,
						[
							23,
							"GAME_MAX_SCORE"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2472236041111413,
					false
					,[
					[
						11,
						"dragStart"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6282355749006483,
					false
					,[
					[
						11,
						"moveCount"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4201722010178504,
					false
					,[
					[
						11,
						"maxMovesCount"
					]
,					[
						7,
						[
							20,
							44,
							cr.plugins_.Rex_CSV.prototype.exps.At,
							false,
							null
							,[
[
								2,
								"NbCoupsMax"
							]
,[
								10,
								[
									2,
									"lvl_"
								]
								,[
									23,
									"levelNumber"
								]
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "DESTROY OBJECT BEFORE GAME START HERE"],
				false,
				null,
				2039223864927214,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					2039223864927214,
					false
					,[
					[
						1,
						[
							2,
							"DESTROY OBJECT BEFORE GAME START HERE"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5788070253166178,
					[
					],
					[
					[
						56,
						cr.plugins_.Sprite.prototype.acts.Destroy,
						null,
						3427682842389839,
						false
					]
,					[
						64,
						cr.plugins_.Sprite.prototype.acts.Destroy,
						null,
						1499071209933221,
						false
					]
					]
				]
				]
			]
,			[
				0,
				[true, "DO NOT MODIFY 3"],
				false,
				null,
				3264214434668787,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					3264214434668787,
					false
					,[
					[
						1,
						[
							2,
							"DO NOT MODIFY 3"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3871203111183639,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						4724234604452385,
						false
						,[
						[
							1,
							[
								2,
								"OnDestroy"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						9864155243596237,
						false
						,[
						[
							1,
							[
								2,
								"prepareOverlays"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						1884777570294636,
						false
						,[
						[
							1,
							[
								2,
								"loadLevel"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetScale,
						null,
						4462591316065259,
						false
						,[
						[
							0,
							[
								1,
								0.5
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5000403946216946,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetGroupActive,
						null,
						8704161778437668,
						false
						,[
						[
							1,
							[
								2,
								"Init Bug Code"
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6539479574395424,
						false
						,[
						[
							11,
							"starting"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Spritefont"],
				false,
				null,
				5080284274385645,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					5080284274385645,
					false
					,[
					[
						1,
						[
							2,
							"Spritefont"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8924573124754916,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.PickByUID,
						null,
						0,
						false,
						false,
						true,
						7440976679680752,
						false
						,[
						[
							0,
							[
								0,
								179
							]
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetScale,
						null,
						7527535121232997,
						false
						,[
						[
							0,
							[
								1,
								0.45
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
						null,
						1476733181174766,
						false
						,[
						[
							1,
							[
								2,
								"1"
							]
						]
,						[
							0,
							[
								0,
								50
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6901388864239295,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.PickByUID,
						null,
						0,
						false,
						false,
						true,
						7245236148285959,
						false
						,[
						[
							0,
							[
								0,
								123
							]
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetScale,
						null,
						8759809395751189,
						false
						,[
						[
							0,
							[
								1,
								0.38
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
						null,
						5691024800495609,
						false
						,[
						[
							1,
							[
								2,
								"1"
							]
						]
,						[
							0,
							[
								0,
								43
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "CUSTOM START OF LAYOUT"],
				false,
				null,
				252180662976246,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					252180662976246,
					false
					,[
					[
						1,
						[
							2,
							"CUSTOM START OF LAYOUT"
						]
					]
					]
				]
				],
				[
				]
			]
			]
		]
,		[
			0,
			[true, "Touch"],
			false,
			null,
			863078881132827,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				863078881132827,
				false
				,[
				[
					1,
					[
						2,
						"Touch"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "DO NOT MODIFY"],
				false,
				null,
				8124499281002582,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					8124499281002582,
					false
					,[
					[
						1,
						[
							2,
							"DO NOT MODIFY"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8503058004964897,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2861685413401797,
						false
						,[
						[
							4,
							8
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1995530080271324,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						9927394556640375,
						false
						,[
						[
							11,
							"TUTO_ENABLE"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2170001139185626,
						false
						,[
						[
							11,
							"TUTO_BUTTON_PAUSE"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						true,
						false,
						9277980106148106,
						false
						,[
						[
							5,
							[
								2,
								"inter"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7854318674424529,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"isTouchGenuine"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						8208582446089356,
						false
						,[
						[
							1,
							[
								2,
								"showTutoThenGoto"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"GameMain"
									]
								]
,
								[
									7,
									[
										2,
										"force"
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9903363673708889,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						8339136188797117,
						false
						,[
						[
							4,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						9557091758244216,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.TiledBg.prototype.cnds.IsVisible,
						null,
						0,
						false,
						true,
						false,
						6777501128465692,
						false
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						true,
						false,
						4817389424669206,
						false
						,[
						[
							5,
							[
								2,
								"inter"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						1994954336668935,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"isTouchGenuine"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						7268636230085226,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							false,
							false,
							1683015398138638,
							false
						]
						],
						[
						[
							29,
							cr.plugins_.cjs.prototype.acts.ExecuteJS,
							null,
							4178169067490001,
							false
							,[
							[
								1,
								[
									2,
									"CocoonJS.App.forwardAsync('showmoregames();');"
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						412745355463001,
						[
						[
							28,
							cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
							null,
							0,
							false,
							true,
							false,
							4843924964625225,
							false
						]
						],
						[
						[
							29,
							cr.plugins_.cjs.prototype.acts.ExecuteJS,
							null,
							5068942974495771,
							false
							,[
							[
								1,
								[
									2,
									"showMG();"
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1688396626329695,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						6183477066598541,
						false
						,[
						[
							4,
							50
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						1580029943238458,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"isTouchGenuine"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						4766261949394641,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							5250340530809633,
							false
							,[
							[
								11,
								"isPaused"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							5777473056714871,
							false
							,[
							[
								1,
								[
									2,
									"pause"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7142908840376501,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						9436200057980679,
						false
						,[
						[
							4,
							2
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7616799220294262,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						true,
						false,
						7975010329736817,
						false
						,[
						[
							5,
							[
								2,
								"inter"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6193198415042729,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"isTouchGenuine"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						9141041549275185,
						false
						,[
						[
							1,
							[
								2,
								"unPause"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5195772236218077,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						936179333451829,
						false
						,[
						[
							4,
							3
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3349874152182938,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						true,
						false,
						1124998089761066,
						false
						,[
						[
							5,
							[
								2,
								"inter"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						2408235703441947,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"isTouchGenuine"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						4288505661411275,
						false
						,[
						[
							1,
							[
								2,
								"gotoLayout"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"LevelSelect"
									]
								]
,
								[
									7,
									[
										2,
										"force"
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1318720984337513,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						4251265123262889,
						false
						,[
						[
							4,
							5
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1374530838024273,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						true,
						false,
						8968417909794055,
						false
						,[
						[
							5,
							[
								2,
								"inter"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5808825490317553,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"isTouchGenuine"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						3836865974263867,
						false
						,[
						[
							1,
							[
								2,
								"showOverlay"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"loading"
									]
								]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						470911689770104,
						false
						,[
						[
							11,
							"restart"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.RestartLayout,
						null,
						4417372062031756,
						false
					]
					]
				]
				]
			]
,			[
				0,
				[true, "ADD TOUCH CODE HERE"],
				false,
				null,
				4152105612829096,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					4152105612829096,
					false
					,[
					[
						1,
						[
							2,
							"ADD TOUCH CODE HERE"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					993105758373016,
					[
					],
					[
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Setting HUD"],
			false,
			null,
			5650000759001083,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5650000759001083,
				false
				,[
				[
					1,
					[
						2,
						"Setting HUD"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "Init HUD bar"],
				false,
				null,
				6324420280418003,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					6324420280418003,
					false
					,[
					[
						1,
						[
							2,
							"Init HUD bar"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3212362786318073,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						7280919716719651,
						false
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						3136311620099003,
						[
						[
							-1,
							cr.system_object.prototype.cnds.ForEach,
							null,
							0,
							true,
							false,
							false,
							2581356221475156,
							false
							,[
							[
								4,
								59
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							7785419989165769,
							[
							[
								59,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								8149400732488177,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										2,
										"timer"
									]
								]
								]
							]
,							[
								59,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								3870966886502616,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							],
							[
							[
								59,
								cr.plugins_.Sprite.prototype.acts.SetX,
								null,
								977181252101896,
								false
								,[
								[
									0,
									[
										4,
										[
											20,
											51,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
										,[
											6,
											[
												0,
												378
											]
											,[
												7,
												[
													6,
													[
														23,
														"maxMovesCount"
													]
													,[
														1,
														0.6
													]
												]
												,[
													23,
													"maxMovesCount"
												]
											]
										]
									]
								]
								]
							]
,							[
								59,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								4664871094638273,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								59,
								cr.plugins_.Sprite.prototype.acts.SetAnim,
								null,
								8671781681613531,
								false
								,[
								[
									1,
									[
										2,
										"l1"
									]
								]
,								[
									3,
									1
								]
								]
							]
,							[
								59,
								cr.plugins_.Sprite.prototype.acts.StopAnim,
								null,
								7203000463394835,
								false
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						5914800710662357,
						[
						[
							-1,
							cr.system_object.prototype.cnds.ForEach,
							null,
							0,
							true,
							false,
							false,
							9160599873847974,
							false
							,[
							[
								4,
								59
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							6451613604098942,
							[
							[
								59,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								9532159683551446,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										2,
										"timer"
									]
								]
								]
							]
,							[
								59,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								4342540090494667,
								false
								,[
								[
									10,
									1
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								59,
								cr.plugins_.Sprite.prototype.acts.SetX,
								null,
								553747545484282,
								false
								,[
								[
									0,
									[
										4,
										[
											20,
											51,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
										,[
											6,
											[
												0,
												378
											]
											,[
												7,
												[
													6,
													[
														23,
														"maxMovesCount"
													]
													,[
														1,
														0.4
													]
												]
												,[
													23,
													"maxMovesCount"
												]
											]
										]
									]
								]
								]
							]
,							[
								59,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								9754756277567849,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								59,
								cr.plugins_.Sprite.prototype.acts.SetAnim,
								null,
								330201269890709,
								false
								,[
								[
									1,
									[
										2,
										"l1"
									]
								]
,								[
									3,
									1
								]
								]
							]
,							[
								59,
								cr.plugins_.Sprite.prototype.acts.StopAnim,
								null,
								180716696390041,
								false
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						6608134015338865,
						[
						[
							59,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							7354975558560016,
							false
							,[
							[
								10,
								2
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"timer"
								]
							]
							]
						]
,						[
							59,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							1103214231512351,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							59,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							8965313851636469,
							false
							,[
							[
								0,
								[
									20,
									51,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					true,
					null,
					490383765962919,
					[
					[
						59,
						cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
						null,
						1,
						false,
						false,
						false,
						4953231519778591,
						false
						,[
						[
							1,
							[
								2,
								"s0"
							]
						]
						]
					]
,					[
						59,
						cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
						null,
						1,
						false,
						false,
						false,
						2930842132547078,
						false
						,[
						[
							1,
							[
								2,
								"s1"
							]
						]
						]
					]
,					[
						59,
						cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
						null,
						1,
						false,
						false,
						false,
						2988144106465658,
						false
						,[
						[
							1,
							[
								2,
								"s2"
							]
						]
						]
					]
					],
					[
					[
						59,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						9945526750454975,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"l"
								]
								,[
									21,
									59,
									false,
									null
									,1
								]
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[false, "Init HUD bar2"],
				false,
				null,
				4882677576851435,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					4882677576851435,
					false
					,[
					[
						1,
						[
							2,
							"Init HUD bar2"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3212362786318073,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						7280919716719651,
						false
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						2887820457466677,
						[
						[
							-1,
							cr.system_object.prototype.cnds.ForEach,
							null,
							0,
							true,
							false,
							false,
							9164846707007097,
							false
							,[
							[
								4,
								59
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							9803944806178683,
							[
							[
								59,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								6319743772488314,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										2,
										"timer"
									]
								]
								]
							]
							],
							[
							[
								59,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								5310378778408257,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								59,
								cr.plugins_.Sprite.prototype.acts.SetAnim,
								null,
								5997545787689035,
								false
								,[
								[
									1,
									[
										2,
										"l1"
									]
								]
,								[
									3,
									1
								]
								]
							]
,							[
								59,
								cr.plugins_.Sprite.prototype.acts.StopAnim,
								null,
								7990504359340528,
								false
							]
,							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								23257001975513,
								false
								,[
								[
									1,
									[
										2,
										"updateHUD_GS"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						7440108700130758,
						[
						[
							59,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							9314435947529344,
							false
							,[
							[
								10,
								2
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									2,
									"timer"
								]
							]
							]
						]
,						[
							59,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							3597816906480719,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							59,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							6261472374173043,
							false
							,[
							[
								0,
								[
									20,
									51,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					true,
					null,
					490383765962919,
					[
					[
						59,
						cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
						null,
						1,
						false,
						false,
						false,
						4953231519778591,
						false
						,[
						[
							1,
							[
								2,
								"s0"
							]
						]
						]
					]
,					[
						59,
						cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
						null,
						1,
						false,
						false,
						false,
						2930842132547078,
						false
						,[
						[
							1,
							[
								2,
								"s1"
							]
						]
						]
					]
,					[
						59,
						cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
						null,
						1,
						false,
						false,
						false,
						2988144106465658,
						false
						,[
						[
							1,
							[
								2,
								"s2"
							]
						]
						]
					]
					],
					[
					[
						59,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						9945526750454975,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"l"
								]
								,[
									21,
									59,
									false,
									null
									,1
								]
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "OnDestroy"],
			false,
			null,
			5918485221390482,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5918485221390482,
				false
				,[
				[
					1,
					[
						2,
						"OnDestroy"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7423166742910337,
				[
				],
				[
				]
			]
			]
		]
,		[
			0,
			[true, "OnCreated"],
			false,
			null,
			519386812512379,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				519386812512379,
				false
				,[
				[
					1,
					[
						2,
						"OnCreated"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "SETTING SPRITEFONT"],
				false,
				null,
				1049716841016253,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					1049716841016253,
					false
					,[
					[
						1,
						[
							2,
							"SETTING SPRITEFONT"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2369200193264879,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.OnCreated,
						null,
						1,
						false,
						false,
						false,
						6766251205483088,
						false
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterSpacing,
						null,
						6967985720078805,
						false
						,[
						[
							0,
							[
								4,
								[
									23,
									"SPRITEFONT_WIDTH"
								]
								,[
									0,
									10
								]
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetScale,
						null,
						7908502848721583,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4934932161121808,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.OnCreated,
						null,
						1,
						false,
						false,
						false,
						1025897631313746,
						false
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterSpacing,
						null,
						1195173839571192,
						false
						,[
						[
							0,
							[
								23,
								"SPRITEFONT_WIDTH"
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
						null,
						3601952549192169,
						false
						,[
						[
							1,
							[
								2,
								"1"
							]
						]
,						[
							0,
							[
								0,
								40
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
						null,
						7547704866553802,
						false
						,[
						[
							1,
							[
								2,
								" "
							]
						]
,						[
							0,
							[
								0,
								30
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8755371447864715,
				[
				],
				[
				]
			]
			]
		]
,		[
			0,
			[true, "GAME"],
			false,
			null,
			9660483629739484,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9660483629739484,
				false
				,[
				[
					1,
					[
						2,
						"GAME"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[false, "Init Bug Code"],
				false,
				null,
				2348159967063133,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					2348159967063133,
					false
					,[
					[
						1,
						[
							2,
							"Init Bug Code"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6046598151150103,
					[
					[
						56,
						cr.plugins_.Sprite.prototype.cnds.OnCollision,
						null,
						0,
						false,
						false,
						true,
						9020559409881882,
						false
						,[
						[
							4,
							63
						]
						]
					]
					],
					[
					[
						63,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						9947913593342921,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								20,
								56,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8234814231684717,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7391733652612229,
						false
						,[
						[
							11,
							"starting"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						307610934014164,
						false
						,[
						[
							1,
							[
								2,
								"unPause"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"no refresh"
									]
								]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						7795721355844953,
						false
						,[
						[
							1,
							[
								2,
								"initGame"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6652586626684263,
						false
						,[
						[
							1,
							[
								2,
								"startGame"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"321"
									]
								]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Starting game"],
				false,
				null,
				4368525743862839,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					4368525743862839,
					false
					,[
					[
						1,
						[
							2,
							"Starting game"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					727121328280245,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						477545274700255,
						false
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						1415746653463575,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickAll,
							null,
							0,
							false,
							false,
							false,
							3527085958641828,
							false
							,[
							[
								4,
								56
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							2720597135038868,
							[
							[
								-1,
								cr.system_object.prototype.cnds.ForEach,
								null,
								0,
								true,
								false,
								false,
								3377161548086995,
								false
								,[
								[
									4,
									56
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								9003914681870457,
								false
								,[
								[
									1,
									[
										2,
										"snapCarToGrid"
									]
								]
,								[
									13,
																			[
											7,
											[
												20,
												56,
												cr.plugins_.Sprite.prototype.exps.UID,
												false,
												null
											]
										]
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Updates"],
				false,
				null,
				202108727135345,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					202108727135345,
					false
					,[
					[
						1,
						[
							2,
							"Updates"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7808155754186451,
					[
					[
						-1,
						cr.system_object.prototype.cnds.EveryTick,
						null,
						0,
						false,
						false,
						false,
						3860812184355918,
						false
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1709307017709126,
						false
						,[
						[
							11,
							"timer"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3983969654702171,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						9788180218444219,
						false
						,[
						[
							11,
							"gameStarted"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SubVar,
						null,
						4021992283874373,
						false
						,[
						[
							11,
							"timer"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8425165477069621,
						false
						,[
						[
							11,
							"actualBonusPoints"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps["int"]
								,[
[
									7,
									[
										6,
										[
											19,
											cr.system_object.prototype.exps.floor
											,[
[
												23,
												"timer"
											]
											]
										]
										,[
											23,
											"MAX_POINTS_BONUS"
										]
									]
									,[
										23,
										"GAME_MAX_TIME"
									]
								]
								]
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						3938392034134958,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							6426417800141689,
							false
							,[
							[
								11,
								"timer"
							]
,							[
								8,
								3
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7579040311551791,
							false
							,[
							[
								11,
								"timer"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							2009205215326642,
							false
							,[
							[
								11,
								"actualBonusPoints"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						5848535956872826,
						[
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							2967198568265112,
							false
							,[
							[
								1,
								[
									2,
									"updateHUD_GS"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5059140794340807,
					[
					[
						60,
						cr.plugins_.Sprite.prototype.cnds.IsOnScreen,
						null,
						0,
						false,
						false,
						false,
						1990038283902873,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SubVar,
						null,
						8998452190638738,
						false
						,[
						[
							11,
							"delayBeforeDecoCarSpawn"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						612210624025537,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							4366979614631999,
							false
							,[
							[
								7,
								[
									23,
									"delayBeforeDecoCarSpawn"
								]
							]
,							[
								8,
								3
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							6085387029434328,
							false
							,[
							[
								1,
								[
									2,
									"spawnDecoCar"
								]
							]
,							[
								13,
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3916979988482032,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Every,
						null,
						0,
						false,
						false,
						false,
						3296377985306696,
						false
						,[
						[
							0,
							[
								0,
								3
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						1960109593875712,
						false
						,[
						[
							1,
							[
								2,
								"destroyDecoCars"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Touch / Moving Related"],
				false,
				null,
				3512548949154124,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					3512548949154124,
					false
					,[
					[
						1,
						[
							2,
							"Touch / Moving Related"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5256298965968504,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchStart,
						null,
						1,
						false,
						false,
						false,
						6472154182647395,
						false
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3726561654594685,
						false
						,[
						[
							11,
							"end"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7424496956469416,
						false
						,[
						[
							11,
							"gameStarted"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						7766979174422461,
						false
						,[
						[
							11,
							"touchedStartX"
						]
,						[
							7,
							[
								20,
								26,
								cr.plugins_.Touch.prototype.exps.XAt,
								false,
								null
								,[
[
									5,
									[
										20,
										26,
										cr.plugins_.Touch.prototype.exps.TouchCount,
										false,
										null
									]
									,[
										0,
										1
									]
								]
,[
									2,
									"BG"
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6659146857968861,
						false
						,[
						[
							11,
							"touchedStartY"
						]
,						[
							7,
							[
								20,
								26,
								cr.plugins_.Touch.prototype.exps.YAt,
								false,
								null
								,[
[
									5,
									[
										20,
										26,
										cr.plugins_.Touch.prototype.exps.TouchCount,
										false,
										null
									]
									,[
										0,
										1
									]
								]
,[
									2,
									"BG"
								]
								]
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						6168395765894964,
						[
						[
							26,
							cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
							null,
							0,
							false,
							false,
							false,
							6853403683925395,
							false
							,[
							[
								4,
								56
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7273091327644478,
							false
							,[
							[
								11,
								"touchedCarUID"
							]
,							[
								7,
								[
									20,
									56,
									cr.plugins_.Sprite.prototype.exps.UID,
									false,
									null
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3594583793663124,
							false
							,[
							[
								11,
								"dragStart"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5596359264616039,
							false
							,[
							[
								11,
								"deltaX"
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							2868159597065812,
							false
							,[
							[
								11,
								"deltaY"
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7773944176351166,
							false
							,[
							[
								11,
								"deltaX"
							]
,							[
								7,
								[
									5,
									[
										20,
										26,
										cr.plugins_.Touch.prototype.exps.XAt,
										false,
										null
										,[
[
											5,
											[
												20,
												26,
												cr.plugins_.Touch.prototype.exps.TouchCount,
												false,
												null
											]
											,[
												0,
												1
											]
										]
,[
											2,
											"BG"
										]
										]
									]
									,[
										20,
										56,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5054513741780799,
							false
							,[
							[
								11,
								"deltaY"
							]
,							[
								7,
								[
									5,
									[
										20,
										26,
										cr.plugins_.Touch.prototype.exps.YAt,
										false,
										null
										,[
[
											5,
											[
												20,
												26,
												cr.plugins_.Touch.prototype.exps.TouchCount,
												false,
												null
											]
											,[
												0,
												1
											]
										]
,[
											2,
											"BG"
										]
										]
									]
									,[
										20,
										56,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3773414470023166,
							false
							,[
							[
								11,
								"exX"
							]
,							[
								7,
								[
									20,
									56,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1633923452359685,
							false
							,[
							[
								11,
								"exY"
							]
,							[
								7,
								[
									20,
									56,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3704765530471266,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.IsInTouch,
						null,
						0,
						false,
						false,
						false,
						3996686549650483,
						false
					]
,					[
						56,
						cr.plugins_.Sprite.prototype.cnds.PickByUID,
						null,
						0,
						false,
						false,
						true,
						7804457062485738,
						false
						,[
						[
							0,
							[
								23,
								"touchedCarUID"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2504908097724812,
						false
						,[
						[
							11,
							"end"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						5441701418469999,
						false
						,[
						[
							11,
							"gameStarted"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						17,
						cr.plugins_.TiledBg.prototype.cnds.IsOnLayer,
						null,
						0,
						false,
						true,
						false,
						7281726844687992,
						false
						,[
						[
							5,
							[
								2,
								"inter"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						7793746183340694,
						[
						[
							56,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							5862891939317168,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							1,
							"okYMoins",
							0,
							0,
false,false,7777545915158994,false
						]
,						[
							1,
							"okYPlus",
							0,
							0,
false,false,8115566056190771,false
						]
,						[
							0,
							null,
							false,
							null,
							1175387025859334,
							[
							[
								-1,
								cr.system_object.prototype.cnds.While,
								null,
								0,
								true,
								false,
								false,
								948793925373641,
								false
							]
,							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								5145045817773703,
								false
								,[
								[
									7,
									[
										5,
										[
											20,
											56,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
										,[
											23,
											"DEAD_ZONE_CAR_MOVES"
										]
									]
								]
,								[
									8,
									4
								]
,								[
									7,
									[
										5,
										[
											20,
											26,
											cr.plugins_.Touch.prototype.exps.YAt,
											false,
											null
											,[
[
												5,
												[
													20,
													26,
													cr.plugins_.Touch.prototype.exps.TouchCount,
													false,
													null
												]
												,[
													0,
													1
												]
											]
,[
												2,
												"BG"
											]
											]
										]
										,[
											23,
											"deltaY"
										]
									]
								]
								]
							]
,							[
								56,
								cr.plugins_.Sprite.prototype.cnds.IsOverlappingOffset,
								null,
								0,
								false,
								true,
								false,
								2965784829821109,
								false
								,[
								[
									4,
									17
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										3,
										[
											23,
											"carsMovingDistance"
										]
									]
								]
								]
							]
,							[
								56,
								cr.plugins_.Sprite.prototype.cnds.IsOverlappingOffset,
								null,
								0,
								false,
								false,
								false,
								119876767321637,
								false
								,[
								[
									4,
									63
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										3,
										[
											23,
											"carsMovingDistance"
										]
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								5761883838826696,
								false
								,[
								[
									11,
									"okYMoins"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								194519343344379,
								[
								[
									63,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									true,
									false,
									373000202121482,
									false
									,[
									[
										10,
										0
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									63,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									true,
									false,
									288456893329442,
									false
									,[
									[
										10,
										0
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											23,
											"touchedCarUID"
										]
									]
									]
								]
								],
								[
								[
									-1,
									cr.system_object.prototype.acts.AddVar,
									null,
									1203734758657375,
									false
									,[
									[
										11,
										"okYMoins"
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								9798169646679117,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									6723914058005348,
									false
									,[
									[
										7,
										[
											23,
											"okYMoins"
										]
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									56,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									1792698062518405,
									false
									,[
									[
										0,
										[
											5,
											[
												20,
												56,
												cr.plugins_.Sprite.prototype.exps.Y,
												false,
												null
											]
											,[
												23,
												"carsMovingDistance"
											]
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							2316446580922798,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								335404377904782,
								false
							]
,							[
								-1,
								cr.system_object.prototype.cnds.While,
								null,
								0,
								true,
								false,
								false,
								9914844954883372,
								false
							]
,							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								5065495042283469,
								false
								,[
								[
									7,
									[
										4,
										[
											20,
											56,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
										,[
											23,
											"DEAD_ZONE_CAR_MOVES"
										]
									]
								]
,								[
									8,
									2
								]
,								[
									7,
									[
										5,
										[
											20,
											26,
											cr.plugins_.Touch.prototype.exps.YAt,
											false,
											null
											,[
[
												5,
												[
													20,
													26,
													cr.plugins_.Touch.prototype.exps.TouchCount,
													false,
													null
												]
												,[
													0,
													1
												]
											]
,[
												2,
												"BG"
											]
											]
										]
										,[
											23,
											"deltaY"
										]
									]
								]
								]
							]
,							[
								56,
								cr.plugins_.Sprite.prototype.cnds.IsOverlappingOffset,
								null,
								0,
								false,
								true,
								false,
								2955631677619445,
								false
								,[
								[
									4,
									17
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										23,
										"carsMovingDistance"
									]
								]
								]
							]
,							[
								56,
								cr.plugins_.Sprite.prototype.cnds.IsOverlappingOffset,
								null,
								0,
								false,
								false,
								false,
								5987731934853054,
								false
								,[
								[
									4,
									63
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									0,
									[
										23,
										"carsMovingDistance"
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								1420124245807748,
								false
								,[
								[
									11,
									"okYPlus"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								2134695359945874,
								[
								[
									63,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									true,
									false,
									4025905348643343,
									false
									,[
									[
										10,
										0
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									63,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									true,
									false,
									3297446594874924,
									false
									,[
									[
										10,
										0
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											23,
											"touchedCarUID"
										]
									]
									]
								]
								],
								[
								[
									-1,
									cr.system_object.prototype.acts.AddVar,
									null,
									8409012822770206,
									false
									,[
									[
										11,
										"okYPlus"
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								5352177553476431,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									2043603351644868,
									false
									,[
									[
										7,
										[
											23,
											"okYPlus"
										]
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									56,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									6945682671440965,
									false
									,[
									[
										0,
										[
											4,
											[
												20,
												56,
												cr.plugins_.Sprite.prototype.exps.Y,
												false,
												null
											]
											,[
												23,
												"carsMovingDistance"
											]
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						597669535568355,
						[
						[
							56,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							6536412373660333,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							1,
							"okXMoins",
							0,
							0,
false,false,6019502527448461,false
						]
,						[
							1,
							"okXPlus",
							0,
							0,
false,false,6542611284051698,false
						]
,						[
							0,
							null,
							false,
							null,
							8901042290857418,
							[
							[
								-1,
								cr.system_object.prototype.cnds.While,
								null,
								0,
								true,
								false,
								false,
								5546931851058904,
								false
							]
,							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								7005198509009376,
								false
								,[
								[
									7,
									[
										5,
										[
											20,
											56,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
										,[
											23,
											"DEAD_ZONE_CAR_MOVES"
										]
									]
								]
,								[
									8,
									4
								]
,								[
									7,
									[
										5,
										[
											20,
											26,
											cr.plugins_.Touch.prototype.exps.XAt,
											false,
											null
											,[
[
												5,
												[
													20,
													26,
													cr.plugins_.Touch.prototype.exps.TouchCount,
													false,
													null
												]
												,[
													0,
													1
												]
											]
,[
												2,
												"BG"
											]
											]
										]
										,[
											23,
											"deltaX"
										]
									]
								]
								]
							]
,							[
								56,
								cr.plugins_.Sprite.prototype.cnds.IsOverlappingOffset,
								null,
								0,
								false,
								true,
								false,
								9244814633201994,
								false
								,[
								[
									4,
									17
								]
,								[
									0,
									[
										3,
										[
											23,
											"carsMovingDistance"
										]
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
								]
							]
,							[
								56,
								cr.plugins_.Sprite.prototype.cnds.IsOverlappingOffset,
								null,
								0,
								false,
								false,
								false,
								9434780655126843,
								false
								,[
								[
									4,
									63
								]
,								[
									0,
									[
										3,
										[
											23,
											"carsMovingDistance"
										]
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								1050193873242722,
								false
								,[
								[
									11,
									"okXMoins"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								3346220254321165,
								[
								[
									63,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									true,
									false,
									1966569649242957,
									false
									,[
									[
										10,
										0
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									63,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									true,
									false,
									1099668751966,
									false
									,[
									[
										10,
										0
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											23,
											"touchedCarUID"
										]
									]
									]
								]
								],
								[
								[
									-1,
									cr.system_object.prototype.acts.AddVar,
									null,
									3380060201985809,
									false
									,[
									[
										11,
										"okXMoins"
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								1524921646369346,
								[
								[
									-1,
									cr.system_object.prototype.cnds.CompareVar,
									null,
									0,
									false,
									false,
									false,
									7429665247669862,
									false
									,[
									[
										11,
										"okXMoins"
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									56,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									7908032419410709,
									false
									,[
									[
										0,
										[
											5,
											[
												20,
												56,
												cr.plugins_.Sprite.prototype.exps.X,
												false,
												null
											]
											,[
												23,
												"carsMovingDistance"
											]
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							9644896845002788,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								102847847584033,
								false
							]
,							[
								-1,
								cr.system_object.prototype.cnds.While,
								null,
								0,
								true,
								false,
								false,
								5821562021906033,
								false
							]
,							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								1987504481465472,
								false
								,[
								[
									7,
									[
										4,
										[
											20,
											56,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
										,[
											23,
											"DEAD_ZONE_CAR_MOVES"
										]
									]
								]
,								[
									8,
									2
								]
,								[
									7,
									[
										5,
										[
											20,
											26,
											cr.plugins_.Touch.prototype.exps.XAt,
											false,
											null
											,[
[
												5,
												[
													20,
													26,
													cr.plugins_.Touch.prototype.exps.TouchCount,
													false,
													null
												]
												,[
													0,
													1
												]
											]
,[
												2,
												"BG"
											]
											]
										]
										,[
											23,
											"deltaX"
										]
									]
								]
								]
							]
,							[
								56,
								cr.plugins_.Sprite.prototype.cnds.IsOverlappingOffset,
								null,
								0,
								false,
								true,
								false,
								6366762775341044,
								false
								,[
								[
									4,
									17
								]
,								[
									0,
									[
										23,
										"carsMovingDistance"
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
								]
							]
,							[
								56,
								cr.plugins_.Sprite.prototype.cnds.IsOverlappingOffset,
								null,
								0,
								false,
								false,
								false,
								7660635606682897,
								false
								,[
								[
									4,
									63
								]
,								[
									0,
									[
										23,
										"carsMovingDistance"
									]
								]
,								[
									0,
									[
										0,
										0
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								6064724600976073,
								false
								,[
								[
									11,
									"okXPlus"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								1395572074636028,
								[
								[
									63,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									true,
									false,
									5967807899695735,
									false
									,[
									[
										10,
										0
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									63,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									true,
									false,
									7784268271677774,
									false
									,[
									[
										10,
										0
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											23,
											"touchedCarUID"
										]
									]
									]
								]
								],
								[
								[
									-1,
									cr.system_object.prototype.acts.AddVar,
									null,
									1481678046893554,
									false
									,[
									[
										11,
										"okXPlus"
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								6244070351194141,
								[
								[
									-1,
									cr.system_object.prototype.cnds.CompareVar,
									null,
									0,
									false,
									false,
									false,
									7921842269199972,
									false
									,[
									[
										11,
										"okXPlus"
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								[
									56,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									2937203310995948,
									false
									,[
									[
										0,
										[
											4,
											[
												20,
												56,
												cr.plugins_.Sprite.prototype.exps.X,
												false,
												null
											]
											,[
												23,
												"carsMovingDistance"
											]
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					true,
					null,
					7639145672876667,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
						null,
						1,
						false,
						false,
						false,
						7440868397416337,
						false
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2519782568706025,
						false
						,[
						[
							11,
							"end"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1222182925200829,
						false
						,[
						[
							11,
							"dragStart"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						4846033697996698,
						[
						[
							56,
							cr.plugins_.Sprite.prototype.cnds.PickByUID,
							null,
							0,
							false,
							false,
							true,
							8940913633613054,
							false
							,[
							[
								0,
								[
									23,
									"touchedCarUID"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							9861561156342817,
							false
							,[
							[
								11,
								"gameStarted"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							1738218914495563,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								3667732039848206,
								false
								,[
								[
									11,
									"gameOverTrigged"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								9328725565426931,
								false
								,[
								[
									1,
									[
										2,
										"snapCarToGrid"
									]
								]
,								[
									13,
																			[
											7,
											[
												23,
												"touchedCarUID"
											]
										]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3084596507063165,
							[
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								8682245002807412,
								false
								,[
								[
									11,
									"touchedCarUID"
								]
,								[
									7,
									[
										0,
										-1
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							5000743032241929,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								3838361031448659,
								false
								,[
								[
									11,
									"gameOverTrigged"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								true,
								null,
								8124055951903902,
								[
								[
									56,
									cr.plugins_.Sprite.prototype.cnds.CompareX,
									null,
									0,
									false,
									false,
									false,
									209467187018123,
									false
									,[
									[
										8,
										1
									]
,									[
										0,
										[
											23,
											"exX"
										]
									]
									]
								]
,								[
									56,
									cr.plugins_.Sprite.prototype.cnds.CompareY,
									null,
									0,
									false,
									false,
									false,
									8030540371495537,
									false
									,[
									[
										8,
										1
									]
,									[
										0,
										[
											23,
											"exY"
										]
									]
									]
								]
								],
								[
								[
									-1,
									cr.system_object.prototype.acts.SetVar,
									null,
									5062934967618711,
									false
									,[
									[
										11,
										"moveCount"
									]
,									[
										7,
										[
											4,
											[
												23,
												"moveCount"
											]
											,[
												0,
												1
											]
										]
									]
									]
								]
,								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									9460293362847937,
									false
									,[
									[
										1,
										[
											2,
											"updateHUD_GS"
										]
									]
,									[
										13,
									]
									]
								]
,								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									8535374508802924,
									false
									,[
									[
										1,
										[
											2,
											"testForFadingStars"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Check for Game Ending"],
				false,
				null,
				2439475603355331,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					2439475603355331,
					false
					,[
					[
						1,
						[
							2,
							"Check for Game Ending"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6425377091111795,
					[
					[
						61,
						cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
						null,
						0,
						false,
						false,
						false,
						3339457860482273,
						false
						,[
						[
							4,
							56
						]
						]
					]
,					[
						56,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						false,
						false,
						6018924032896253,
						false
						,[
						[
							1,
							[
								2,
								"car1"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2309422884002239,
						false
						,[
						[
							11,
							"end"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						795301989301814,
						false
						,[
						[
							1,
							[
								2,
								"updateHUD_GS"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						908647667640738,
						false
						,[
						[
							1,
							[
								2,
								"testForFadingStars"
							]
						]
,						[
							13,
						]
						]
					]
,					[
						56,
						cr.behaviors.solid.prototype.acts.SetEnabled,
						"Solid",
						5001958429303161,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						56,
						cr.behaviors.Bullet.prototype.acts.SetEnabled,
						"Bullet",
						3822359884484033,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						7569478898197716,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							3959097846692951,
							false
							,[
							[
								11,
								"gameOverTrigged"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.AddVar,
							null,
							4949342564420971,
							false
							,[
							[
								11,
								"Score"
							]
,							[
								7,
								[
									23,
									"actualBonusPoints"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							6734420579011956,
							false
							,[
							[
								11,
								"moveCount"
							]
,							[
								7,
								[
									4,
									[
										23,
										"moveCount"
									]
									,[
										0,
										1
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3196938670994616,
						[
						],
						[
						[
							27,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							3813687642781009,
							false
							,[
							[
								1,
								[
									2,
									"gameOver"
								]
							]
,							[
								13,
																	[
										7,
										[
											0,
											1
										]
									]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			1,
			"lastSong",
			0,
			0,
false,false,2158591894838901,false
		]
,		[
			0,
			[true, "GAMEMAIN_SOUND"],
			false,
			null,
			3620714020640203,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3620714020640203,
				false
				,[
				[
					1,
					[
						2,
						"GAMEMAIN_SOUND"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				3031702782065494,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					2655510955111188,
					false
					,[
					[
						1,
						[
							2,
							"carDeco_sound"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"rand",
					0,
					0,
false,false,5455255123461059,false
				]
,				[
					0,
					null,
					false,
					null,
					2906646185416494,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						418399759476308,
						false
						,[
						[
							11,
							"rand"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.choose
								,[
[
									0,
									1
								]
,[
									0,
									2
								]
,[
									0,
									3
								]
,[
									0,
									4
								]
,[
									0,
									5
								]
,[
									0,
									6
								]
								]
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						1724759418248602,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							7765958231909713,
							false
							,[
							[
								11,
								"lastSong"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									23,
									"rand"
								]
							]
							]
						]
						],
						[
						[
							72,
							cr.plugins_.Audio.prototype.acts.PlayByName,
							null,
							9323530895614366,
							false
							,[
							[
								3,
								0
							]
,							[
								1,
								[
									10,
									[
										2,
										"car"
									]
									,[
										23,
										"rand"
									]
								]
							]
,							[
								3,
								0
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								1,
								[
									2,
									"carDeco_sound"
								]
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							4071268183332405,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								2755202788628514,
								false
								,[
								[
									11,
									"rand"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								1880853640626485,
								false
								,[
								[
									11,
									"rand"
								]
,								[
									7,
									[
										19,
										cr.system_object.prototype.exps.choose
										,[
[
											0,
											2
										]
,[
											0,
											3
										]
,[
											0,
											4
										]
,[
											0,
											5
										]
,[
											0,
											6
										]
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							6462803618168912,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								8835225316465788,
								false
							]
,							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								3400234452543036,
								false
								,[
								[
									11,
									"rand"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										6
									]
								]
								]
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								1946648470155934,
								false
								,[
								[
									11,
									"rand"
								]
,								[
									7,
									[
										19,
										cr.system_object.prototype.exps.choose
										,[
[
											0,
											1
										]
,[
											0,
											2
										]
,[
											0,
											3
										]
,[
											0,
											4
										]
,[
											0,
											5
										]
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3629897810744894,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								8020897557285808,
								false
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								1922961442018947,
								false
								,[
								[
									11,
									"rand"
								]
,								[
									7,
									[
										5,
										[
											23,
											"rand"
										]
										,[
											0,
											1
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							7685734432428462,
							[
							],
							[
							[
								72,
								cr.plugins_.Audio.prototype.acts.PlayByName,
								null,
								4069483492983194,
								false
								,[
								[
									3,
									0
								]
,								[
									1,
									[
										10,
										[
											2,
											"car"
										]
										,[
											23,
											"rand"
										]
									]
								]
,								[
									3,
									0
								]
,								[
									0,
									[
										0,
										0
									]
								]
,								[
									1,
									[
										2,
										"carDeco_sound"
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								233430798389732,
								false
								,[
								[
									11,
									"lastSong"
								]
,								[
									7,
									[
										23,
										"rand"
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5947511943563321,
				[
				[
					57,
					cr.plugins_.Sprite.prototype.cnds.IsVisible,
					null,
					0,
					false,
					false,
					false,
					2584735920500394,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3169908406966894,
					[
					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						391286347111504,
						false
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						2887198721248725,
						false
						,[
						[
							1,
							[
								2,
								"carDeco_sound"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3547600822213321,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					4529889905029429,
					false
				]
				],
				[
				]
			]
,			[
				0,
				[true, "Restore Music InGame"],
				false,
				null,
				5473387707398107,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					5473387707398107,
					false
					,[
					[
						1,
						[
							2,
							"Restore Music InGame"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8687513773861987,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						9049422425066806,
						false
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6499878427055374,
						false
						,[
						[
							1,
							[
								2,
								"restoreMusic"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					203629988247631,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						555862870207283,
						false
						,[
						[
							1,
							[
								2,
								"restoreMusic"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						3711698484013548,
						[
						[
							72,
							cr.plugins_.Audio.prototype.cnds.IsTagPlaying,
							null,
							0,
							false,
							true,
							false,
							4999337699583327,
							false
							,[
							[
								1,
								[
									2,
									"music_ingame"
								]
							]
							]
						]
						],
						[
						[
							72,
							cr.plugins_.Audio.prototype.acts.PlayByName,
							null,
							8474573650388129,
							false
							,[
							[
								3,
								0
							]
,							[
								1,
								[
									2,
									"music_ingame"
								]
							]
,							[
								3,
								1
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								1,
								[
									2,
									"music_ingame"
								]
							]
							]
						]
,						[
							72,
							cr.plugins_.Audio.prototype.acts.Stop,
							null,
							1202823475107787,
							false
							,[
							[
								1,
								[
									2,
									"music_menu"
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8448045136712376,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						8575220278207029,
						false
						,[
						[
							1,
							[
								2,
								"CB_unMute"
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						2588618806282457,
						false
						,[
						[
							1,
							[
								2,
								"restoreMusic"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2766153342462018,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1642291314725017,
					false
					,[
					[
						1,
						[
							2,
							"butt_sound"
						]
					]
					]
				]
				],
				[
				[
					72,
					cr.plugins_.Audio.prototype.acts.Stop,
					null,
					3184336735625233,
					false
					,[
					[
						1,
						[
							2,
							"butt_sound"
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Audio.prototype.acts.PlayByName,
					null,
					2917191552514806,
					false
					,[
					[
						3,
						0
					]
,					[
						1,
						[
							2,
							"butt"
						]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							"butt_sound"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6860162084979972,
				[
				[
					19,
					cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
					null,
					0,
					false,
					false,
					false,
					3153760622350704,
					false
					,[
					[
						1,
						[
							2,
							"gameover"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					825387026238019,
					[
					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						6396020488909696,
						false
					]
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						7054983273770494,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"game_over"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"game_over_sound"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8688840699403925,
				[
				[
					19,
					cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
					null,
					0,
					false,
					false,
					false,
					8210689374315526,
					false
					,[
					[
						1,
						[
							2,
							"victory"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7672718764409068,
					false
					,[
					[
						11,
						"gameOverTrigged"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3556873051811467,
					false
					,[
					[
						11,
						"gameStarted"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					133532421360601,
					[
					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						8108943270857585,
						false
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						7298241017204251,
						false
						,[
						[
							1,
							[
								2,
								"victory_sound"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3532712623421194,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					8464799244601747,
					false
					,[
					[
						1,
						[
							2,
							"victory_sound"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4032665997036974,
					[
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						4601745652739151,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"victory"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"victory_sound"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6105121342878655,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					4154471090633157,
					false
					,[
					[
						4,
						50
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4656729726155442,
					[
					[
						50,
						cr.plugins_.Sprite.prototype.cnds.IsVisible,
						null,
						0,
						false,
						false,
						false,
						6645132301453599,
						false
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						8558026306599486,
						false
						,[
						[
							1,
							[
								2,
								"butt_sound"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1291072010003929,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					9470869191791555,
					false
					,[
					[
						4,
						5
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8893285048135893,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3026060955232931,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						175942175605706,
						false
						,[
						[
							1,
							[
								2,
								"butt_play_sound"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5226141266014395,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					9627256286100986,
					false
					,[
					[
						4,
						3
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2987941950640532,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7202227159360136,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						5262060270286841,
						false
						,[
						[
							1,
							[
								2,
								"butt_sound"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6849232798304583,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					6735911110829669,
					false
					,[
					[
						4,
						2
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4112155083773971,
					false
					,[
					[
						11,
						"isPaused"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6189160121897598,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						9524499503288278,
						false
						,[
						[
							11,
							"gameStarted"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						false,
						false,
						6038612243019081,
						false
						,[
						[
							5,
							[
								2,
								"pauseOverlay"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2911542556495385,
						false
						,[
						[
							11,
							"gameOverTrigged"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						3310663521537359,
						false
						,[
						[
							1,
							[
								2,
								"butt_sound"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				15535516264276,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					3395215381372342,
					false
					,[
					[
						4,
						4
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4956448112868204,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1359678279177086,
						false
						,[
						[
							11,
							"isPaused"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						3130518302065392,
						false
						,[
						[
							1,
							[
								2,
								"butt_play_sound"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5830665803006703,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1117957135511026,
					false
					,[
					[
						1,
						[
							2,
							"butt_play_sound"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5871829996381033,
					[
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						7505802374002178,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"butt_play"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"butt_play_sound"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9647157986312133,
				[
				[
					48,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					6353635754310309,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5249203430162328,
					[
					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						893453035345178,
						false
					]
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						7207844618249734,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"321"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"321_sound"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6350312995951907,
				[
				[
					48,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					2694135444475871,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					831192842295517,
					[
					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						2247001113705459,
						false
					]
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						6738467917074125,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"321"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"321_sound"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1974113778001717,
				[
				[
					48,
					cr.plugins_.Sprite.prototype.cnds.CompareFrame,
					null,
					0,
					false,
					false,
					false,
					5211405654851781,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1751970515826051,
					[
					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						7138595987469594,
						false
					]
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						9118097205481395,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"321"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"321_sound"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						8321422053292377,
						false
						,[
						[
							0,
							[
								1,
								0.7
							]
						]
						]
					]
,					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						5196226960957763,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"go"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"go_sound"
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"GameOverScript",
		[
		[
			2,
			"FUNCTIONS",
			false
		]
,		[
			0,
			[true, "EDIT BELOW"],
			false,
			null,
			7572740491247966,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7572740491247966,
				false
				,[
				[
					1,
					[
						2,
						"EDIT BELOW"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				3274774638753043,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					3687449082734206,
					false
				]
				],
				[
				]
				,[
				[
					0,
					[true, "SET CONDITION TO UNLOCK NEXT LEVEL"],
					false,
					null,
					7790699360171786,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						7790699360171786,
						false
						,[
						[
							1,
							[
								2,
								"SET CONDITION TO UNLOCK NEXT LEVEL"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[true, "If reaching the end of the level is enough to unlock next level :"],
						false,
						null,
						8557986596002145,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							8557986596002145,
							false
							,[
							[
								1,
								[
									2,
									"If reaching the end of the level is enough to unlock next level :"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							491469692340551,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								453760980529496,
								false
								,[
								[
									11,
									"Score"
								]
,								[
									8,
									4
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								7385350204121616,
								false
								,[
								[
									1,
									[
										2,
										"unlockNextLevel"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[false, "If there is a minimal score to unlock next level :"],
						false,
						null,
						6959074727790138,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							6959074727790138,
							false
							,[
							[
								1,
								[
									2,
									"If there is a minimal score to unlock next level :"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							491469692340551,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								9054614352617421,
								false
								,[
								[
									11,
									"Score"
								]
,								[
									8,
									5
								]
,								[
									7,
									[
										2,
										"minimal Score to unlock next leel"
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								234531201746912,
								false
								,[
								[
									1,
									[
										2,
										"unlockNextLevel"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[false, "If the minimal score to unlock next level is store in starData csv :"],
						false,
						null,
						7878402397069925,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							7878402397069925,
							false
							,[
							[
								1,
								[
									2,
									"If the minimal score to unlock next level is store in starData csv :"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							491469692340551,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								295201852181525,
								false
								,[
								[
									7,
									[
										23,
										"Score"
									]
								]
,								[
									8,
									5
								]
,								[
									7,
									[
										20,
										41,
										cr.plugins_.Rex_CSV.prototype.exps.At,
										false,
										null
										,[
[
											2,
											"unlockNext"
										]
,[
											10,
											[
												2,
												"lvl_"
											]
											,[
												23,
												"levelNumber"
											]
										]
										]
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								6741208351808114,
								false
								,[
								[
									1,
									[
										2,
										"unlockNextLevel"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "IF NEEDED, YOU CAN SET CONDITIONS TO UNLOCK STARS OUT OF GAMEMAIN"],
					false,
					null,
					3090878617072905,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						3090878617072905,
						false
						,[
						[
							1,
							[
								2,
								"IF NEEDED, YOU CAN SET CONDITIONS TO UNLOCK STARS OUT OF GAMEMAIN"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						[false, "IF YOU WANA SET STARS USING THE STARSDATA.CSV"],
						false,
						null,
						7631675647614497,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							7631675647614497,
							false
							,[
							[
								1,
								[
									2,
									"IF YOU WANA SET STARS USING THE STARSDATA.CSV"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							7738550226746947,
							[
							[
								-1,
								cr.system_object.prototype.cnds.ForEachOrdered,
								null,
								0,
								true,
								false,
								false,
								6715464209984759,
								false
								,[
								[
									4,
									59
								]
,								[
									7,
									[
										21,
										59,
										false,
										null
										,1
									]
								]
,								[
									3,
									0
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								7533907131911405,
								false
								,[
								[
									7,
									[
										23,
										"Score"
									]
								]
,								[
									8,
									5
								]
,								[
									7,
									[
										20,
										41,
										cr.plugins_.Rex_CSV.prototype.exps.At,
										false,
										null
										,[
[
											10,
											[
												2,
												"star_"
											]
											,[
												21,
												59,
												false,
												null
												,1
											]
										]
,[
											10,
											[
												2,
												"lvl_"
											]
											,[
												23,
												"levelNumber"
											]
										]
										]
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								7466767907394717,
								false
								,[
								[
									1,
									[
										2,
										"earnStar"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[false, "SOFT CODED"],
						false,
						null,
						1123063641939457,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							1123063641939457,
							false
							,[
							[
								1,
								[
									2,
									"SOFT CODED"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							4706649900032194,
							[
							[
								-1,
								cr.system_object.prototype.cnds.ForEachOrdered,
								null,
								0,
								true,
								false,
								false,
								9814067112193029,
								false
								,[
								[
									4,
									59
								]
,								[
									7,
									[
										21,
										59,
										false,
										null
										,1
									]
								]
,								[
									3,
									0
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								5190846794846945,
								false
								,[
								[
									7,
									[
										23,
										"Score"
									]
								]
,								[
									8,
									5
								]
,								[
									7,
									[
										2,
										"la condition nécéssaire pour débloquer l'étoile {loopindex}"
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								387671962715877,
								false
								,[
								[
									1,
									[
										2,
										"earnStar"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[false, "HARD CODED"],
						false,
						null,
						9760534884875213,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							9760534884875213,
							false
							,[
							[
								1,
								[
									2,
									"HARD CODED"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							8760765086649071,
							[
							[
								-1,
								cr.system_object.prototype.cnds.ForEachOrdered,
								null,
								0,
								true,
								false,
								false,
								9830845756091582,
								false
								,[
								[
									4,
									59
								]
,								[
									7,
									[
										21,
										59,
										false,
										null
										,1
									]
								]
,								[
									3,
									0
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								4819555311789618,
								[
								[
									59,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									9509869163861932,
									false
									,[
									[
										10,
										1
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									7066186733327394,
									false
									,[
									[
										7,
										[
											23,
											"Score"
										]
									]
,									[
										8,
										5
									]
,									[
										7,
										[
											2,
											"la condition nécéssaire pour débloquer l'étoile 1"
										]
									]
									]
								]
								],
								[
								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									1671078296761324,
									false
									,[
									[
										1,
										[
											2,
											"earnStar"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								2781189161844347,
								[
								[
									59,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									3762910469975628,
									false
									,[
									[
										10,
										1
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									3690696996082368,
									false
									,[
									[
										7,
										[
											23,
											"Score"
										]
									]
,									[
										8,
										5
									]
,									[
										7,
										[
											2,
											"la condition nécéssaire pour débloquer l'étoile 2"
										]
									]
									]
								]
								],
								[
								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									9702293065050145,
									false
									,[
									[
										1,
										[
											2,
											"earnStar"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								9945008956777815,
								[
								[
									59,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									9273569221133558,
									false
									,[
									[
										10,
										1
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											2
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									6932546090207358,
									false
									,[
									[
										7,
										[
											23,
											"Score"
										]
									]
,									[
										8,
										5
									]
,									[
										7,
										[
											2,
											"la condition nécéssaire pour débloquer l'étoile 3"
										]
									]
									]
								]
								],
								[
								[
									27,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									911056273867776,
									false
									,[
									[
										1,
										[
											2,
											"earnStar"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "DO NOT MODIFY THIS GROUP "],
					false,
					null,
					4395511756716799,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						4395511756716799,
						false
						,[
						[
							1,
							[
								2,
								"DO NOT MODIFY THIS GROUP "
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						8760765086649071,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							6516665473470034,
							false
							,[
							[
								7,
								[
									23,
									"starUnlocked"
								]
							]
,							[
								8,
								4
							]
,							[
								7,
								[
									20,
									40,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										23,
										"levelNumber"
									]
,[
										0,
										2
									]
									]
								]
							]
							]
						]
						],
						[
						[
							40,
							cr.plugins_.Arr.prototype.acts.SetXY,
							null,
							6282589774499922,
							false
							,[
							[
								0,
								[
									23,
									"levelNumber"
								]
							]
,							[
								0,
								[
									0,
									2
								]
							]
,							[
								7,
								[
									23,
									"starUnlocked"
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						6660765551066472,
						[
						[
							-1,
							cr.system_object.prototype.cnds.ForEachOrdered,
							null,
							0,
							true,
							false,
							false,
							44258474559961,
							false
							,[
							[
								4,
								59
							]
,							[
								7,
								[
									21,
									59,
									false,
									null
									,1
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							9475866502979512,
							false
							,[
							[
								7,
								[
									23,
									"starUnlocked"
								]
							]
,							[
								8,
								5
							]
,							[
								7,
								[
									4,
									[
										21,
										59,
										false,
										null
										,1
									]
									,[
										0,
										1
									]
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							1016606903753825,
							false
							,[
							[
								0,
								[
									21,
									59,
									false,
									null
									,1
								]
							]
							]
						]
,						[
							59,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							2701052892196094,
							false
							,[
							[
								1,
								[
									10,
									[
										2,
										"s"
									]
									,[
										21,
										59,
										false,
										null
										,1
									]
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "DO NOT MODIFY THIS GROUP"],
			false,
			null,
			8834230350104597,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8834230350104597,
				false
				,[
				[
					1,
					[
						2,
						"DO NOT MODIFY THIS GROUP"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5810364022285841,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8482567567719042,
					false
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					6206463595337403,
					false
					,[
					[
						1,
						[
							2,
							"prepareOverlays"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5891780806589499,
					false
					,[
					[
						11,
						"currentScoreDisplayed"
					]
,					[
						7,
						[
							0,
							-1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4324606650364973,
					false
					,[
					[
						11,
						"GOadShown"
					]
,					[
						7,
						[
							2,
							""
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2143393314548829,
					false
					,[
					[
						11,
						"score2AddByStep"
					]
,					[
						7,
						[
							7,
							[
								23,
								"Score"
							]
							,[
								1,
								3.3
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8206011154489127,
					false
					,[
					[
						11,
						"allowAccess2NextLvl"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					58,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					9304556767428707,
					false
				]
,				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					556434048549527,
					false
					,[
					[
						1,
						[
							2,
							"analytics"
						]
					]
,					[
						13,
													[
								7,
								[
									2,
									"sessionTime"
								]
							]
,
							[
								7,
								[
									2,
									"set"
								]
							]
,
							[
								7,
								[
									19,
									cr.system_object.prototype.exps.round
									,[
[
										19,
										cr.system_object.prototype.exps.time
									]
									]
								]
							]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7705858429652194,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						821288802316362,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetScale,
						null,
						2923364155924178,
						false
						,[
						[
							0,
							[
								1,
								0.55
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4956650396709111,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						4333525743425814,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetScale,
						null,
						5046988094949427,
						false
						,[
						[
							0,
							[
								1,
								0.4
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					988812300560331,
					[
					[
						40,
						cr.plugins_.Arr.prototype.cnds.CompareXY,
						null,
						0,
						false,
						false,
						false,
						3558833930665326,
						false
						,[
						[
							0,
							[
								23,
								"levelNumber"
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						3947716318925055,
						[
						[
							21,
							cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							3065125458234619,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							21,
							cr.plugins_.Spritefont2.prototype.acts.SetText,
							null,
							7093381316709681,
							false
							,[
							[
								7,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"prettyNumber"
									]
,[
										20,
										40,
										cr.plugins_.Arr.prototype.exps.At,
										false,
										null
										,[
[
											23,
											"levelNumber"
										]
,[
											0,
											1
										]
										]
									]
,[
										2,
										" "
									]
									]
								]
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							7850585178682905,
							[
							],
							[
							[
								74,
								cr.plugins_.Sprite.prototype.acts.SetPos,
								null,
								2094484095022501,
								false
								,[
								[
									0,
									[
										4,
										[
											20,
											21,
											cr.plugins_.Spritefont2.prototype.exps.X,
											false,
											null
										]
										,[
											7,
											[
												4,
												[
													20,
													21,
													cr.plugins_.Spritefont2.prototype.exps.TextWidth,
													false,
													null
												]
												,[
													20,
													74,
													cr.plugins_.Sprite.prototype.exps.Width,
													false,
													null
												]
											]
											,[
												0,
												2
											]
										]
									]
								]
,								[
									0,
									[
										20,
										21,
										cr.plugins_.Spritefont2.prototype.exps.Y,
										false,
										null
									]
								]
								]
							]
,							[
								74,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								901232142100059,
								false
								,[
								[
									3,
									1
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9605838194354659,
					[
					[
						28,
						cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
						null,
						0,
						false,
						false,
						false,
						6580130030855165,
						false
					]
,					[
						42,
						cr.plugins_.Dictionary.prototype.cnds.HasKey,
						null,
						0,
						false,
						false,
						false,
						7628599562551914,
						false
						,[
						[
							1,
							[
								2,
								"rate"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						2233774182213542,
						false
						,[
						[
							7,
							[
								8,
								[
									23,
									"fullscreenAdTriggerCount"
								]
								,[
									19,
									cr.system_object.prototype.exps["int"]
									,[
[
										20,
										42,
										cr.plugins_.Dictionary.prototype.exps.Get,
										false,
										null
										,[
[
											2,
											"RATE_FREQ"
										]
										]
									]
									]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						4045399411029662,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6627877298886056,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						3948141493369114,
						false
					]
					],
					[
					[
						0,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						3763103086786732,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3511375452924836,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7467743390250372,
						false
						,[
						[
							11,
							"MAX_LVL"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								23,
								"levelNumber"
							]
						]
						]
					]
,					[
						40,
						cr.plugins_.Arr.prototype.cnds.CompareXY,
						null,
						0,
						false,
						false,
						false,
						4074290962642827,
						false
						,[
						[
							0,
							[
								4,
								[
									23,
									"levelNumber"
								]
								,[
									0,
									1
								]
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						5324428955485842,
						false
						,[
						[
							1,
							[
								2,
								"allowAccess2NextLvl"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9375531346799837,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8983740874262552,
						false
						,[
						[
							11,
							"Score"
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								20,
								40,
								cr.plugins_.Arr.prototype.exps.At,
								false,
								null
								,[
[
									23,
									"levelNumber"
								]
,[
									0,
									1
								]
								]
							]
						]
						]
					]
					],
					[
					[
						40,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						971606648397555,
						false
						,[
						[
							0,
							[
								23,
								"levelNumber"
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							7,
							[
								23,
								"Score"
							]
						]
						]
					]
,					[
						58,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						5605608610521108,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1860011629509044,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						8735362680431237,
						false
					]
					],
					[
					[
						58,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						225747299493504,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4689905982484468,
					[
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						6267036982868586,
						false
						,[
						[
							0,
							[
								1,
								0.1
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						9557914968149926,
						false
						,[
						[
							1,
							[
								2,
								"saveDatas"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				906235881178445,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					3428389154581101,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9892434806634873,
					false
					,[
					[
						11,
						"currentScoreDisplayed"
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							23,
							"Score"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					1130179312138288,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6615941578022675,
						false
						,[
						[
							11,
							"currentScoreDisplayed"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								23,
								"Score"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						8456422601449615,
						false
						,[
						[
							11,
							"currentScoreDisplayed"
						]
,						[
							7,
							[
								6,
								[
									23,
									"score2AddByStep"
								]
								,[
									19,
									cr.system_object.prototype.exps.dt
								]
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						7269674812013354,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							7379047901312147,
							false
							,[
							[
								11,
								"currentScoreDisplayed"
							]
,							[
								8,
								5
							]
,							[
								7,
								[
									23,
									"Score"
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							6342571675763723,
							false
							,[
							[
								11,
								"currentScoreDisplayed"
							]
,							[
								7,
								[
									23,
									"Score"
								]
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							2242588468917992,
							[
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								8082177343831047,
								false
								,[
								[
									1,
									[
										2,
										"blinkStar"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							6888302898477458,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								4818667053613091,
								false
								,[
								[
									11,
									"GOadShown"
								]
,								[
									8,
									1
								]
,								[
									7,
									[
										2,
										"no ad"
									]
								]
								]
							]
							],
							[
							[
								27,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								9499186713537021,
								false
								,[
								[
									1,
									[
										2,
										"launchPub"
									]
								]
,								[
									13,
																			[
											7,
											[
												2,
												"pre"
											]
										]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						4962392587902783,
						[
						[
							21,
							cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							4558753722942066,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							21,
							cr.plugins_.Spritefont2.prototype.acts.SetText,
							null,
							5443177857642752,
							false
							,[
							[
								7,
								[
									20,
									27,
									cr.plugins_.Function.prototype.exps.Call,
									false,
									null
									,[
[
										2,
										"prettyNumber"
									]
,[
										19,
										cr.system_object.prototype.exps.round
										,[
[
											23,
											"currentScoreDisplayed"
										]
										]
									]
,[
										2,
										" "
									]
									]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9966868553379218,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					1557903862644574,
					false
					,[
					[
						11,
						"Score"
					]
,					[
						8,
						3
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5260096070098233,
					false
					,[
					[
						11,
						"GOadShown"
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							2,
							"no ad"
						]
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					8296457629753969,
					false
					,[
					[
						1,
						[
							2,
							"launchPub"
						]
					]
,					[
						13,
													[
								7,
								[
									2,
									"pre"
								]
							]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "OnCreated"],
				false,
				null,
				2656125096176932,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					2656125096176932,
					false
					,[
					[
						1,
						[
							2,
							"OnCreated"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5458837359594608,
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.cnds.OnCreated,
						null,
						1,
						false,
						false,
						false,
						3759036292036797,
						false
					]
					],
					[
					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterSpacing,
						null,
						4957927093243847,
						false
						,[
						[
							0,
							[
								23,
								"SPRITEFONT_WIDTH"
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
						null,
						2944773507740621,
						false
						,[
						[
							1,
							[
								2,
								"1"
							]
						]
,						[
							0,
							[
								0,
								40
							]
						]
						]
					]
,					[
						21,
						cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
						null,
						1604758523837798,
						false
						,[
						[
							1,
							[
								2,
								" "
							]
						]
,						[
							0,
							[
								0,
								30
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						3140978728045828,
						[
						[
							21,
							cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							8669011705120055,
							false
							,[
							[
								10,
								1
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							21,
							cr.plugins_.Spritefont2.prototype.acts.SetCharacterWidth,
							null,
							8599295633859446,
							false
							,[
							[
								1,
								[
									2,
									"1"
								]
							]
,							[
								0,
								[
									0,
									45
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Touch2"],
				false,
				null,
				7302809347555938,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					7302809347555938,
					false
					,[
					[
						1,
						[
							2,
							"Touch2"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6033965283516619,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						3156333084732028,
						false
						,[
						[
							4,
							3
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						true,
						false,
						4633519820425145,
						false
						,[
						[
							5,
							[
								2,
								"inter"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5446347961198255,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"isTouchGenuine"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						1193560238636244,
						false
						,[
						[
							1,
							[
								2,
								"queueIt"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"levelSelect"
									]
								]
,
								[
									7,
									[
										23,
										"GOadShown"
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7628691518513187,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						2320422355812034,
						false
						,[
						[
							4,
							5
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						true,
						false,
						6533631696578464,
						false
						,[
						[
							5,
							[
								2,
								"inter"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9597602517858437,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"isTouchGenuine"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						2409431983167779,
						false
						,[
						[
							1,
							[
								2,
								"queueIt"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"replay"
									]
								]
,
								[
									7,
									[
										23,
										"GOadShown"
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9682065890982685,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						859778388395396,
						false
						,[
						[
							4,
							4
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						815694162442273,
						false
						,[
						[
							11,
							"allowAccess2NextLvl"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						true,
						false,
						5955874470744706,
						false
						,[
						[
							5,
							[
								2,
								"inter"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						982871597626226,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"isTouchGenuine"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6311644729842849,
						false
						,[
						[
							1,
							[
								2,
								"queueIt"
							]
						]
,						[
							13,
															[
									7,
									[
										2,
										"next"
									]
								]
,
								[
									7,
									[
										23,
										"GOadShown"
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3624725460590974,
					[
					[
						26,
						cr.plugins_.Touch.prototype.cnds.OnTouchObject,
						null,
						1,
						false,
						false,
						false,
						1111960595048925,
						false
						,[
						[
							4,
							0
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsVisible,
						null,
						0,
						false,
						false,
						false,
						3717369528049178,
						false
					]
,					[
						28,
						cr.plugins_.CJSAds.prototype.cnds.IsCocoonJS,
						null,
						0,
						false,
						false,
						false,
						2481066507616339,
						false
					]
,					[
						-1,
						cr.system_object.prototype.cnds.LayerVisible,
						null,
						0,
						false,
						true,
						false,
						4664766336580918,
						false
						,[
						[
							5,
							[
								2,
								"inter"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7226115810350148,
						false
						,[
						[
							7,
							[
								20,
								27,
								cr.plugins_.Function.prototype.exps.Call,
								false,
								null
								,[
[
									2,
									"isTouchGenuine"
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						7301475947426943,
						false
						,[
						[
							1,
							[
								2,
								"doRate"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				true,
				null,
				6103212945846347,
				[
				[
					59,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					2240641605171715,
					false
					,[
					[
						1,
						[
							2,
							"s0"
						]
					]
					]
				]
,				[
					59,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					4116416131438532,
					false
					,[
					[
						1,
						[
							2,
							"s1"
						]
					]
					]
				]
,				[
					59,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					8273713730636932,
					false
					,[
					[
						1,
						[
							2,
							"s2"
						]
					]
					]
				]
				],
				[
				[
					59,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					1431739068236691,
					false
					,[
					[
						1,
						[
							10,
							[
								2,
								"l"
							]
							,[
								21,
								59,
								false,
								null
								,1
							]
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "SOUND_GAMEOVER"],
			false,
			null,
			597015851911343,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				597015851911343,
				false
				,[
				[
					1,
					[
						2,
						"SOUND_GAMEOVER"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4653395552701471,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1636930962841382,
					false
					,[
					[
						1,
						[
							2,
							"butt_sound"
						]
					]
					]
				]
				],
				[
				[
					72,
					cr.plugins_.Audio.prototype.acts.PlayByName,
					null,
					1527783876433955,
					false
					,[
					[
						3,
						0
					]
,					[
						1,
						[
							2,
							"butt"
						]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							"butt_sound"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1853589809738657,
				[
				[
					27,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					3027579243977912,
					false
					,[
					[
						1,
						[
							2,
							"butt_play_sound"
						]
					]
					]
				]
				],
				[
				[
					72,
					cr.plugins_.Audio.prototype.acts.PlayByName,
					null,
					3445531240057431,
					false
					,[
					[
						3,
						0
					]
,					[
						1,
						[
							2,
							"butt_play"
						]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							"butt_play_sound"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1064526205355856,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					301003432363549,
					false
					,[
					[
						4,
						5
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					4300605896295628,
					false
					,[
					[
						1,
						[
							2,
							"butt_play_sound"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3437541606505055,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					8518483500418933,
					false
					,[
					[
						4,
						4
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					1060975108697245,
					false
					,[
					[
						1,
						[
							2,
							"butt_play_sound"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				983837966381885,
				[
				[
					59,
					cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
					null,
					0,
					false,
					false,
					false,
					3403817390544251,
					false
					,[
					[
						1,
						[
							2,
							"s0"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7170408288343714,
					[
					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						1276017061914187,
						false
					]
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						9892722508517127,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"star"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4470275022235904,
				[
				[
					59,
					cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
					null,
					0,
					false,
					false,
					false,
					552633930360872,
					false
					,[
					[
						1,
						[
							2,
							"s1"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2126414775613934,
					[
					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						9098927039683161,
						false
					]
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						9222801285046313,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"star"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6154369934380804,
				[
				[
					59,
					cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
					null,
					0,
					false,
					false,
					false,
					8081935334008516,
					false
					,[
					[
						1,
						[
							2,
							"s2"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9197954893350392,
					[
					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						7966287270536839,
						false
					]
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						2754949454771505,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"star"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								""
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7398746261629618,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					3529268216051817,
					false
					,[
					[
						4,
						3
					]
					]
				]
				],
				[
				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					4016976028056469,
					false
					,[
					[
						1,
						[
							2,
							"butt_sound"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Restore Music GO"],
				false,
				null,
				7494224130110755,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					7494224130110755,
					false
					,[
					[
						1,
						[
							2,
							"Restore Music GO"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8687513773861987,
					[
					[
						-1,
						cr.system_object.prototype.cnds.OnLayoutStart,
						null,
						1,
						false,
						false,
						false,
						9049422425066806,
						false
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						6499878427055374,
						false
						,[
						[
							1,
							[
								2,
								"restoreMusic"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					203629988247631,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						555862870207283,
						false
						,[
						[
							1,
							[
								2,
								"restoreMusic"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						7628511355137786,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							5297467427544493,
							false
							,[
							[
								11,
								"Score"
							]
,							[
								8,
								4
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							72,
							cr.plugins_.Audio.prototype.acts.PlayByName,
							null,
							5486922188575263,
							false
							,[
							[
								3,
								0
							]
,							[
								1,
								[
									2,
									"full_coin"
								]
							]
,							[
								3,
								0
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								1,
								[
									2,
									"victory_full_coin"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							695172086259741,
							false
							,[
							[
								0,
								[
									1,
									3.3
								]
							]
							]
						]
,						[
							72,
							cr.plugins_.Audio.prototype.acts.Stop,
							null,
							7325986334711432,
							false
							,[
							[
								1,
								[
									2,
									"victory_full_coin"
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8448045136712376,
					[
					[
						27,
						cr.plugins_.Function.prototype.cnds.OnFunction,
						null,
						2,
						false,
						false,
						false,
						8575220278207029,
						false
						,[
						[
							1,
							[
								2,
								"CB_unMute"
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						2588618806282457,
						false
						,[
						[
							1,
							[
								2,
								"restoreMusic"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4579257887457225,
				[
				[
					58,
					cr.plugins_.Sprite.prototype.cnds.IsVisible,
					null,
					0,
					false,
					false,
					false,
					1688808208535265,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8094799008986959,
					[
					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						9226856489693836,
						false
					]
					],
					[
					[
						72,
						cr.plugins_.Audio.prototype.acts.PlayByName,
						null,
						4091731908557237,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"new_record"
							]
						]
,						[
							3,
							0
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"new_record"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4935647361777519,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutEnd,
					null,
					1,
					false,
					false,
					false,
					5289499996586781,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Audio.prototype.acts.Stop,
					null,
					4956544342233753,
					false
					,[
					[
						1,
						[
							2,
							"victory_full_coin"
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"tutoScript",
		[
		[
			2,
			"FUNCTIONS",
			false
		]
,		[
			0,
			[true, "DO NOT MODIFY         "],
			false,
			null,
			4271636947437802,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4271636947437802,
				false
				,[
				[
					1,
					[
						2,
						"DO NOT MODIFY         "
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6814159948275372,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8547943418462451,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8182287265645709,
					false
					,[
					[
						11,
						"currTutoPage"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					27,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					451234302263804,
					false
					,[
					[
						1,
						[
							2,
							"initTutoPage"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9987560996891107,
				[
				[
					26,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					3977329136121379,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					3581125251151575,
					false
					,[
					[
						11,
						"currTutoPage"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					8047193269479053,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4369823115739138,
						false
						,[
						[
							11,
							"currTutoPage"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								23,
								"NB_PAGE_OF_TUTO"
							]
						]
						]
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						7698801290822187,
						false
						,[
						[
							1,
							[
								2,
								"gotoLayout"
							]
						]
,						[
							13,
															[
									7,
									[
										23,
										"backFrom"
									]
								]
,
								[
									7,
									[
										2,
										"force"
									]
								]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2628708867204997,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						6630963268027064,
						false
					]
					],
					[
					[
						27,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						5734257820812342,
						false
						,[
						[
							1,
							[
								2,
								"initTutoPage"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
	],
	[
		["butt_play.m4a", 7504],
		["butt_play.ogg", 11025],
		["car1.m4a", 92101],
		["car1.ogg", 62316],
		["car2.m4a", 153340],
		["car2.ogg", 99569],
		["car3.m4a", 92164],
		["car3.ogg", 60441],
		["car4.m4a", 61134],
		["car4.ogg", 40992],
		["car5.m4a", 53985],
		["car5.ogg", 41786],
		["car6.m4a", 92558],
		["car6.ogg", 61938],
		["full_coin.m4a", 73225],
		["full_coin.ogg", 48181],
		["new_record.m4a", 26781],
		["new_record.ogg", 23144],
		["star.m4a", 8999],
		["star.ogg", 15457],
		["music_ingame.m4a", 369642],
		["music_ingame.ogg", 263271],
		["victory.m4a", 30921],
		["victory.ogg", 29050],
		["lock.m4a", 3099],
		["lock.ogg", 6636],
		["mvmt.m4a", 23707],
		["mvmt.ogg", 24184],
		["butt.m4a", 3542],
		["butt.ogg", 7426],
		["321.m4a", 3588],
		["321.ogg", 7909],
		["go.m4a", 3617],
		["go.ogg", 8133]
	],
	"media/",
	true,
	510,
	907,
	3,
	true,
	true,
	false,
	"9.0.0",
	true,
	false,
	0,
	0,
	351,
	false,
	true,
	1,
	true,
	"Parking Panic",
	[
	]
];};
