function GameJoint(){this.joint}GameJoint.prototype={preload:function(){},create:function(){this.bJoint=!0},update:function(){var a=this.joint;if(a&&(a.GetBodyA().GetType()!=BodyType.STATIC||a.GetBodyB().GetType()!=BodyType.STATIC))switch(a.GetType()){case JointType.REVOLUTE:case JointType.WELD:this.x=a.GetAnchorA().x,this.y=a.GetAnchorA().y}},shutdown:function(){this.sprite&&this.sprite.destroy();this.joint&&Joint.DestroyJoint(this.joint)}};Weld.prototype=new GameJoint;Weld.prototype.constructor=GameJoint;function Weld(a,d,b,c,e,f,g){b=b?b:1;c=c?c:1;e=e?e:0;g=g?g:1;this.sprite;this.joint;this.sprite=gameGlobal.add.sprite(a,d,f);this.sprite.scale.x=b;this.sprite.scale.y=c;this.sprite.angle=e;0==g&&(this.sprite.visible=!1)}
Weld.prototype={preload:function(){},create:function(){var a=new Phaser.Point(this.sprite.x,this.sprite.y);console.log(" in weld and point = "+a);var d=new b2Vec2(a.x,a.y);console.log(" in weld and point after physcale = "+d.x+" ,"+d.y);var b=Body.GetBodyAtPoint(d,!1);if(b){console.log("Weld: length = "+b.length);var d=b[0];if(1<b.length){var c=b[1];console.log("valid body b= "+c)}c||(groundBody&&(c=groundBody.sprite.body),console.log("body B is ground body = "+c));if(d&&c){if(d.sprite&&c.sprite)console.log("weld join body A = "+
d.sprite.key+" , bodyB = "+c.sprite.key+" point = "+a);else return;var b=a.x-d.sprite.x,e=a.y-d.sprite.y,f=a.x-c.sprite.x,a=a.y-c.sprite.y;console.log("WELD anchors Body A anchor points = "+b+" , "+e+"anchor body b = "+f+" , "+a);this.joint=Joint.CreateWeld(d,c,new b2Vec2(b,e),new b2Vec2(f,a))}}else console.log("NOT ONE BODY UNDER WELD JOINT!!!");GameJoint.prototype.create.call(this)},update:function(){},hookContactCallback:function(a,d,b,c,e){},shutdown:function(){this.sprite&&this.sprite.destroy();
this.joint&&Joint.Destroy(this.joint);this.joint=null}};WeldWall.prototype=new GameJoint;WeldWall.prototype.constructor=GameJoint;function WeldWall(a,d,b,c,e,f,g){b=b?b:1;c=c?c:1;e=e?e:0;g=g?g:1;this.jointName="WeldWall";this.sprite;this.joint;this.sprite=gameGlobal.add.sprite(a,d,f);this.sprite.scale.x=b;this.sprite.scale.y=c;this.sprite.angle=e;0==g&&(this.sprite.visible=!1)}
WeldWall.prototype={preload:function(){},create:function(){kill=!1;var a=new Phaser.Point(this.sprite.x,this.sprite.y);console.log(" in WeldWall and point = "+a);var d=new b2Vec2(a.x,a.y);console.log(" in WeldWall and point after physcale = "+d.x+" ,"+d.y);var b=Body.GetBodyAtPoint(d,!1);if(b){console.log("WeldWall: length = "+b.length);var d=b[0];if(1<b.length){var c=b[1];console.log("valid body b= "+c)}c||(groundBody&&(c=groundBody.sprite.body),console.log("body B is ground body = "+c));if(d&&c){d.sprite&&
c.sprite&&console.log("WeldWall join body A = "+d.sprite.key+" , bodyB = "+c.sprite.key+" point = "+a);var b=a.x-d.sprite.x,e=a.y-d.sprite.y,f=a.x-c.sprite.x,a=a.y-c.sprite.y;console.log("WeldWall anchors Body A anchor points = "+b+" , "+e+"anchor body b = "+f+" , "+a);d.setBodyContactCallback(bPlayer,this.reactionForcecallBack,this);this.body=d;this.joint=Joint.CreateWeld(d,c,new b2Vec2(b,e),new b2Vec2(f,a))}}else console.log("NOT ONE BODY UNDER WeldWall JOINT!!!");GameJoint.prototype.create.call(this)},
update:function(){},reactionForcecallBack:function(a,d,b,c,e){e&&(console.log("player touching the WeldWall "),a=new b2Vec2,this.joint&&(a=this.joint.GetReactionForce(1,a),70<100*a.Length()&&(console.log("weld wall - kill true"),kill=!0),console.log("reaction force callback = "+a.Length()+", x = "+a.x+" , y"+a.y)))},shutdown:function(){this.sprite&&this.sprite.destroy();this.joint&&Joint.Destroy(this.joint);this.joint=null}};var kill=!1;WeldVase.prototype=new GameJoint;WeldVase.prototype.constructor=GameJoint;function WeldVase(a,d,b,c,e,f,g){b=b?b:1;c=c?c:1;e=e?e:0;g=g?g:1;this.jointName="WeldVase";this.sprite;this.joint;this.sprite=gameGlobal.add.sprite(a,d,f);this.sprite.scale.x=b;this.sprite.scale.y=c;this.sprite.angle=e;0==g&&(this.sprite.visible=!1)}
WeldVase.prototype={preload:function(){},create:function(){kill=!1;var a=new Phaser.Point(this.sprite.x,this.sprite.y);console.log(" in WeldVase and point = "+a);var d=new b2Vec2(a.x,a.y);console.log(" in WeldVase and point after physcale = "+d.x+" ,"+d.y);var b=Body.GetBodyAtPoint(d,!1);if(b){console.log("WeldVase: length = "+b.length);var d=b[0];if(1<b.length){var c=b[1];console.log("valid body b= "+c)}c||(groundBody&&(c=groundBody.sprite.body),console.log("body B is ground body = "+c));if(d&&c){d.sprite&&
c.sprite&&console.log("WeldVase join body A = "+d.sprite.key+" , bodyB = "+c.sprite.key+" point = "+a);var b=a.x-d.sprite.x,e=a.y-d.sprite.y,f=a.x-c.sprite.x,a=a.y-c.sprite.y;console.log("WeldVase anchors Body A anchor points = "+b+" , "+e+"anchor body b = "+f+" , "+a);d.setBodyContactCallback(bPlayer,this.vasecallBack,this);c.setBodyContactCallback(bPlayer,this.vasecallBack,this);this.body=d;this.joint=Joint.CreateWeld(d,c,new b2Vec2(b,e),new b2Vec2(f,a),50,!0);this.bodyA=d;this.bodyB=c}}else console.log("NOT ONE BODY UNDER WeldVase JOINT!!!");
GameJoint.prototype.create.call(this)},update:function(){},vasecallBack:function(a,d,b,c,e){e&&(console.log("player touching the WeldVase "),a=new b2Vec2,this.joint&&(a=this.joint.GetReactionForce(1,a),750<100*a.Length()&&(console.log("weld vase - kill true"),kill=!0),console.log("reaction force callback = "+a.Length()+", x = "+a.x+" , y"+a.y)))},shutdown:function(){this.sprite&&this.sprite.destroy();this.joint&&Joint.Destroy(this.joint);this.joint=null}};kill=!1;Distance.prototype=new GameJoint;Distance.prototype.constructor=GameJoint;
function Distance(a,d,b,c,e,f,g,h,m,n,p,k,l){e=e?e:1;f=f?f:1;g=g?g:0;h=h?h:50;m=m?m:0;n=n?n:0;p=p?p:1;k=k?k:0;l=l?l:0;this.joint;this.anchorA;this.anchorB;this.rope;this.sprite;this.graphics;var q=gameGlobal;this.anchorA=q.add.sprite(a,d,"anchorA");this.anchorA.scale.x=e;this.anchorA.scale.y=f;this.anchorA.angle=g;this.anchorA.visible=!1;1==m&&(this.anchorA.visible=!0);this.anchorB=q.add.sprite(b,c,"anchorB");this.anchorB.scale.x=e;this.anchorB.scale.y=f;this.anchorB.angle=g;this.anchorB.visible=
!1;1==n&&(this.anchorB.visible=!0);this.distLength=h;this.rope=q.add.sprite(-2,7,"ropeDist");this.rope.anchor.set(0,.5);this.rope.visible=!0;this.rope.scale.x=1;this.rope.scale.y=f;this.ropeWidth=this.rope.width;this.extendRope=k;this.frequency=l;0==p&&(this.rope.visible=!1)}
Distance.prototype={preload:function(){},create:function(){var a=this.anchorA,d=this.anchorB,a=new b2Vec2(a.x,a.y),d=new b2Vec2(d.x,d.y);console.log("in distance : point a = "+a.x+", "+a.y+" , pointB ="+d.x+", "+d.y);a=Body.GetBodyAtPoint(a);console.log(" in distance joint and body array A = "+a);d=Body.GetBodyAtPoint(d);console.log(" in distance joint and body array B = "+d);var b;a?(b=a[0])&&b.sprite&&console.log(" in distance: body A sprite id = "+b.sprite.key+" body array x and y  = "+b.x+" , "+
b.y):groundBody&&(b=groundBody.sprite.body);var c;d?(c=d[0])&&c.sprite&&console.log(" in distance: body B sprite id = "+c.sprite.key+" body array x and y  = "+c.x+" , "+c.y):groundBody&&(c=groundBody.sprite.body);b&&c&&b!=c?(this.x1=this.anchorA.x-b.x,this.y1=this.anchorA.y-b.y,this.x2=this.anchorB.x-c.x,this.y2=this.anchorB.y-c.y,console.log("Distance :anchor computed body  x1, y1  = "+this.x1+" , "+this.y1+" x2 , y2 "+this.x2+" , "+this.y2),this.joint=Joint.CreateDistance(b.sprite,c.sprite,new b2Vec2(this.x1,
this.y1),new b2Vec2(this.x2,this.y2),this.distLength,this.frequency),console.log("joint = "+this.joint),this.bodyA=b,this.bodyB=c):console.log("DISTANCE JOINT APPLYED TO ONE BODY!!!");GameJoint.prototype.create.call(this)},update:function(){this.bodyA&&this.bodyB&&(this.anchorA.x=this.bodyA.x+this.x1,this.anchorA.y=this.bodyA.y+this.y1,this.anchorB.x=this.bodyB.x+this.x2,this.anchorB.y=this.bodyB.y+this.y2,this.rope.x=this.anchorA.x,this.rope.y=this.anchorA.y,this.rope.rotation=gameGlobal.math.angleBetween(this.anchorA.x,
this.anchorA.y,this.anchorB.x,this.anchorB.y),1==this.extendRope&&(this.distLength=gameGlobal.math.distance(this.anchorA.x,this.anchorA.y,this.anchorB.x,this.anchorB.y)),this.rope.scale.x=this.distLength/this.ropeWidth,GameJoint.prototype.update.call(this))},shutdown:function(){this.anchorA&&this.anchorA.destroy();this.anchorB&&this.anchorB.destroy();this.rope&&this.rope.destroy();this.joint&&Joint.Destroy(this.joint);this.joint=null}};TargetJoint.prototype=new GameJoint;TargetJoint.prototype.constructor=GameJoint;
function TargetJoint(a,d,b,c,e,f,g,h,m,n,p,k,l){this.game=gameGlobal;this.pointA=new b2Vec2(a,d);this.pointB=new b2Vec2(b,c);this.vAnchorA=new b2Vec2;this.vAnchorB=new b2Vec2;this.joint;this.bodyA;this.bodyB;this.distance=h;this.rope=this.game.add.sprite(-2,7,"ropeDist");this.rope.anchor.set(0,.5);this.rope.visible=!0;this.rope.scale.x=1;this.rope.scale.y=1;this.ropeWidth=this.rope.width;this.extendRope=k;this.frequency=l}
TargetJoint.prototype={preload:function(){},create:function(){var a=Body.GetBodyAtPoint(this.pointA),d=Body.GetBodyAtPoint(this.pointB);a&&(this.bodyA=a[0],this.bodyA.toLocalPoint(this.vAnchorA,this.pointA));d&&(this.bodyB=d[0],this.bodyB.toLocalPoint(this.vAnchorB,this.pointB));this.bodyA!=this.bodyB&&(this.joint=Joint.CreateDistance(this.bodyA,this.bodyB,this.vAnchorA,this.vAnchorB,this.distance,10,!1,3));GameJoint.prototype.create.call(this)},update:function(){var a=new b2Vec2,d=new b2Vec2;this.bodyA.toWorldPoint(a,
this.vAnchorA);this.bodyB.toWorldPoint(d,this.vAnchorB);this.rope.x=a.x;this.rope.y=a.y;this.rope.rotation=gameGlobal.math.angleBetween(a.x,a.y,d.x,d.y);1==this.extendRope&&(this.distLength=gameGlobal.math.distance(a.x,a.y,d.x,d.y));this.rope.scale.x=this.distLength/this.ropeWidth;GameJoint.prototype.update.call(this)},shutdown:function(){this.anchorA&&this.anchorA.destroy();this.anchorB&&this.anchorB.destroy();this.rope&&this.rope.destroy();this.joint&&Joint.Destroy(this.joint);this.joint=null}};Revolute.prototype=new GameJoint;Revolute.prototype.constructor=GameJoint;function Revolute(a,d,b,c,e,f,g,h,m,n,p,k,l){this.sprite;this.joint;var q=gameGlobal;b=b?b:1;c=c?c:1;e=e?e:1;g=g?g:0;this.sprite=q.add.sprite(a,d,f);this.sprite.scale.x=b;this.sprite.scale.y=c;this.anchorAx=n;this.anchorAy=p;this.anchorBx=k;this.anchorBy=l;this.enableMotor=g;this.maxSpeed=h;this.maxTorque=m;0==e&&(this.sprite.visible=!1)}
Revolute.prototype={preload:function(){},create:function(){var a=new Phaser.Point(this.sprite.x,this.sprite.y);console.log(" in revolute  and point = "+a);var d=new b2Vec2(a.x,a.y);console.log(" in revolute and point  = "+d.x+" ,"+d.y);var b=Body.GetBodyAtPoint(d,!1);console.log("in revolute  and body array  = "+b);if(b){console.log("revolute : length = "+b.length);(d=b[0])&&console.log("body A is = "+d.sprite.key);if(1<b.length){var c=b[1];d.sprite.key==c.sprite.key&&2<b.length&&(c=b[2]);c&&console.log("valid body b= "+
c)}else groundBody&&(c=groundBody.sprite.body),console.log("body B is ground body = "+c);if(!d&&!c)return;if(d&&c){var e=a.x-d.sprite.x,f=a.y-d.sprite.y,b=a.x-c.sprite.x,g=a.y-c.sprite.y;console.log("revolute join body A = "+d.sprite.key+" , bodyB = "+c.sprite.key+" point = "+a);console.log("Revolute  : anchors Body A anchor points = "+e+" , "+f+"anchor body b = "+b+" , "+g);a=this.anchorAx?new b2Vec2(this.anchorAx,this.anchorAy):new b2Vec2(e,f);b=this.anchorBx?new b2Vec2(this.anchorBx,this.anchorBy):
new b2Vec2(b,g);(this.joint=Joint.CreateRevolute(d,c,a,b))&&1==this.enableMotor&&(console.log("enable motor "+this.maxSpeed),this.joint.EnableMotor(!0),this.joint.SetMotorSpeed(this.maxSpeed),this.joint.SetMaxMotorTorque(this.maxTorque))}}else console.log("NOT ONE BODY UNDER REVOLUTE JOINT!!!");GameJoint.prototype.create.call(this)},update:function(){},revoluteCallBack:function(a,d,b,c,e){},shutdown:function(){this.sprite&&this.sprite.destroy();this.joint&&Joint.Destroy(this.joint);this.joint=null}};RevoluteMill.prototype=new GameJoint;RevoluteMill.prototype.constructor=GameJoint;function RevoluteMill(a,d,b,c,e){this.sprite;this.joint;b=b?b:1;c=c?c:1;e=e?e:1;this.sprite=gameGlobal.add.sprite(a,d,"revoluteMill");this.sprite.scale.x=b;this.sprite.scale.y=c;0==e&&(this.sprite.visible=!1)}
RevoluteMill.prototype={preload:function(){},create:function(){var a=new Phaser.Point(this.sprite.x,this.sprite.y);console.log(" in RevoluteMill  and point = "+a);var d=new b2Vec2(a.x,a.y);console.log(" in RevoluteMill and point  = "+d.x+" ,"+d.y);var b=Body.GetBodyAtPoint(d,!1);console.log("in RevoluteMill  and body array  = "+b);if(b){console.log("RevoluteMill : length = "+b.length);var d=b[0],c;1<b.length?(c=b[1])&&console.log("valid body b= "+c.sprite.key):(groundBody&&(c=groundBody.sprite.body),
console.log("body B is ground body = "+c));if(d&&c){console.log("RevoluteMill join body A = "+d.sprite.key+" , bodyB = "+c.sprite.key+" point = "+a);b=new b2Vec2((a.x-d.x)/2,(a.y-d.y)/2);console.log("Revolute Mill : anchor Point = "+b.x+" , "+b.y);var e=a.x-d.sprite.x,f=a.y-d.sprite.y,b=a.x-c.sprite.x,a=a.y-c.sprite.y;console.log("Revolute Mill : anchors Body A anchor points = "+e+" , "+f+"anchor body b = "+b+" , "+a);e=new b2Vec2(e,f);a=new b2Vec2(b,a);this.joint=Joint.CreateRevolute(c.sprite,d.sprite,
a,e,-.7,1E3,!0);this.joint.EnableMotor(!0);this.joint.SetMotorSpeed(.7);this.joint.SetMaxMotorTorque(1E3)}}else console.log("NOT ONE BODY UNDER RevoluteMill JOINT!!!");GameJoint.prototype.create.call(this)},update:function(){},shutdown:function(){this.sprite&&this.sprite.destroy();this.joint&&Joint.Destroy(this.joint);this.joint=null}};RevoluteCastle.prototype=new GameJoint;RevoluteCastle.prototype.constructor=GameJoint;function RevoluteCastle(a,d,b,c,e,f){this.sprite;this.joint;var g=gameGlobal;b=b?b:1;c=c?c:1;e=e?e:1;this.sprite=g.add.sprite(a,d,f);this.sprite.scale.x=b;this.sprite.scale.y=c;this.sprite1=g.add.sprite(358,319,"revoluteCastle");0==e&&(this.sprite.visible=!1)}
RevoluteCastle.prototype={preload:function(){},create:function(){var a=new Phaser.Point(this.sprite.x,this.sprite.y);console.log(" in RevoluteCastle  and point = "+a);var d=new b2Vec2(a.x,a.y);console.log(" in RevoluteCastle and point  = "+d.x+" ,"+d.y);var b=Body.GetBodyAtPoint(d,!1);console.log("in RevoluteCastle  and body array  = "+b);if(b){console.log("RevoluteCastle : length = "+b.length);(d=b[0])&&console.log("body A is = "+d.sprite.key);var c;1<b.length?(c=b[1])&&console.log("valid body b= "+
c):(groundBody&&(c=groundBody.sprite.body),console.log("body B is ground body = "+c));if(!d&&!c)return;if(d&&c){var e=a.x-d.sprite.x,f=a.y-d.sprite.y,b=a.x-c.sprite.x,g=a.y-c.sprite.y;console.log("RevoluteCastle join body A = "+d.sprite.key+" , bodyB = "+c.sprite.key+" point = "+a);console.log("RevoluteCastle  : anchors Body A anchor points = "+e+" , "+f+"anchor body b = "+b+" , "+g);a=new b2Vec2(e,f);b=new b2Vec2(b,g);this.joint=Joint.CreateRevolute(d,c,a,b);this.joint.EnableLimit(!0);this.joint.SetLimits(0,
Math.PI/2)}}else console.log("NOT ONE BODY UNDER RevoluteCastle JOINT!!!");GameJoint.prototype.create.call(this)},update:function(){},RevoluteCastleCallBack:function(a,d,b,c,e){},shutdown:function(){this.sprite&&this.sprite.destroy();this.joint&&Joint.Destroy(this.joint);this.joint=null}};RevoluteBridge.prototype=new GameJoint;RevoluteBridge.prototype.constructor=GameJoint;function RevoluteBridge(a,d,b,c,e,f){this.sprite;this.joint;var g=gameGlobal;this.jointName="RevoluteBridge";this.bridgeBrokenJoint=!1;b=b?b:1;c=c?c:1;e=e?e:1;this.sprite=g.add.sprite(a,d,f);this.sprite.scale.x=b;this.sprite.scale.y=c;0==e&&(this.sprite.visible=!1)}
RevoluteBridge.prototype={preload:function(){},create:function(){var a=new Phaser.Point(this.sprite.x,this.sprite.y);this.bridgeBrokenJoint=!1;console.log(" in RevoluteBridge  and point = "+a);var d=new b2Vec2(a.x,a.y);console.log(" in RevoluteBridge and point  = "+d.x+" ,"+d.y);var b=Body.GetBodyAtPoint(d,!1);console.log("in RevoluteBridge  and body array  = "+b);if(b){console.log("RevoluteBridge : length = "+b.length);(d=b[0])&&console.log("body A is = "+d.sprite.key);var c;1<b.length?(c=b[1])&&
console.log("valid body b= "+c):(groundBody&&(c=groundBody.sprite.body),console.log("body B is ground body = "+c));if(!d&&!c)return;if(d&&c){var e=a.x-d.sprite.x,f=a.y-d.sprite.y,b=a.x-c.sprite.x,g=a.y-c.sprite.y;console.log("RevoluteBridge join body A = "+d.sprite.key+" , bodyB = "+c.sprite.key+" point = "+a);console.log("RevoluteBridge  : anchors Body A anchor points = "+e+" , "+f+"anchor body b = "+b+" , "+g);a=new b2Vec2(e,f);b=new b2Vec2(b,g);this.joint=Joint.CreateRevolute(d,c,a,b);d.setBodyContactCallback(bPlayer,
this.RevoluteBridgeCallBack,this);c.setBodyContactCallback(bPlayer,this.RevoluteBridgeCallBack,this)}}else console.log("NOT ONE BODY UNDER RevoluteBridge JOINT!!!");GameJoint.prototype.create.call(this);kill=!1},update:function(){if(this.joint){var a=new b2Vec2,a=100*this.joint.GetReactionForce(1,a).Length()+.05*currClick;25E3<a&&(console.log("revolue bridge call back -  kill true"+a),this.bridgeBrokenJoint=kill=!0)}},RevoluteBridgeCallBack:function(a,d,b,c,e){if(e&&(console.log("player hitting the bridge "),
d=3350,this.joint)){b=new b2Vec2;b=this.joint.GetReactionForce(1,b);console.log("reaction force =  "+100*b.Length());if("beamWood50"==a.sprite.key||"beamWood50.1"==a.sprite.key||"beamWood50.12"==a.sprite.key||"beamWood50.13"==a.sprite.key)d=4E3;"ground1"!=a.sprite.key&&"ground2"!=a.sprite.key&&(100*b.Length()>d&&(console.log("revolue bridge call back -  kill true"),this.bridgeBrokenJoint=kill=!0),console.log("reaction force callback = "+b.Length()+", x = "+b.x+" , y"+b.y))}},shutdown:function(){this.sprite&&
this.sprite.destroy();this.joint&&Joint.Destroy(this.joint);this.joint=null}};kill=!1;RevoluteTrainMinus.prototype=new GameJoint;RevoluteTrainMinus.prototype.constructor=GameJoint;function RevoluteTrainMinus(a,d,b,c,e,f){this.sprite;this.joint;var g=gameGlobal;b=b?b:1;c=c?c:1;e=e?e:1;this.sprite=g.add.sprite(a,d,f);this.sprite.scale.x=b;this.sprite.scale.y=c;0==e&&(this.sprite.visible=!1)}
RevoluteTrainMinus.prototype={preload:function(){},create:function(){var a=new Phaser.Point(this.sprite.x,this.sprite.y);console.log(" in RevoluteTrainMinus  and point = "+a);var d=new b2Vec2(a.x,a.y);console.log(" in RevoluteTrainMinus and point  = "+d.x+" ,"+d.y);var b=Body.GetBodyAtPoint(d,!1);console.log("in RevoluteTrainMinus  and body array  = "+b);if(b){console.log("RevoluteTrainMinus : length = "+b.length);(d=b[0])&&console.log("body A is = "+d.sprite.key);var c;1<b.length?(c=b[1])&&console.log("valid body b= "+
c):(groundBody&&(c=groundBody.sprite.body),console.log("body B is ground body = "+c));if(!d&&!c)return;if(d&&c){var e=a.x-d.sprite.x,f=a.y-d.sprite.y,b=a.x-c.sprite.x,g=a.y-c.sprite.y;console.log("RevoluteTrainMinus join body A = "+d.sprite.key+" , bodyB = "+c.sprite.key+" point = "+a);console.log("RevoluteTrainMinus  : anchors Body A anchor points = "+e+" , "+f+"anchor body b = "+b+" , "+g);a=new b2Vec2(e,f);b=new b2Vec2(b,g);this.joint=Joint.CreateRevolute(d,c,a,b);this.joint.EnableMotor(!0);this.joint.SetMotorSpeed(-2);
this.joint.SetMaxMotorTorque(300)}}else console.log("NOT ONE BODY UNDER RevoluteTrainMinus JOINT!!!");GameJoint.prototype.create.call(this)},update:function(){},RevoluteTrainMinusCallBack:function(a,d,b,c,e){},shutdown:function(){this.sprite&&this.sprite.destroy();this.joint&&Joint.Destroy(this.joint);this.joint=null}};RevoluteCarMinus.prototype=new GameJoint;RevoluteCarMinus.prototype.constructor=GameJoint;function RevoluteCarMinus(a,d,b,c,e,f){this.sprite;this.joint;var g=gameGlobal;this.on=!1;this.timer=60;b=b?b:1;c=c?c:1;e=e?e:1;this.sprite=g.add.sprite(a,d,f);this.sprite.scale.x=b;this.sprite.scale.y=c;0==e&&(this.sprite.visible=!1)}
RevoluteCarMinus.prototype={preload:function(){},create:function(){var a=new Phaser.Point(this.sprite.x,this.sprite.y);console.log(" in RevoluteCarMinus  and point = "+a);var d=new b2Vec2(a.x,a.y);console.log(" in RevoluteCarMinus and point  = "+d.x+" ,"+d.y);var b=Body.GetBodyAtPoint(d,!1);console.log("in RevoluteCarMinus  and body array  = "+b);if(b){console.log("RevoluteCarMinus : length = "+b.length);(d=b[0])&&console.log("body A is = "+d.sprite.key);var c;1<b.length?(c=b[1])&&console.log("valid body b= "+
c):(groundBody&&(c=groundBody.sprite.body),console.log("body B is ground body = "+c));if(!d&&!c)return;if(d&&c){var e=a.x-d.sprite.x,f=a.y-d.sprite.y,b=a.x-c.sprite.x,g=a.y-c.sprite.y;console.log("RevoluteCarMinus join body A = "+d.sprite.key+" , bodyB = "+c.sprite.key+" point = "+a);console.log("RevoluteCarMinus  : anchors Body A anchor points = "+e+" , "+f+"anchor body b = "+b+" , "+g);a=new b2Vec2(e,f);b=new b2Vec2(b,g);this.bodyB=c;this.bodyA=d;this.joint="carWheel"==d.sprite.key||"carWheel1"==
d.sprite.key?Joint.CreateRevolute(d,c,a,b):Joint.CreateRevolute(c,d,b,a)}}else console.log("NOT ONE BODY UNDER RevoluteCarMinus JOINT!!!");GameJoint.prototype.create.call(this)},update:function(){this.on||(this.timer?this.timer--:(this.joint.EnableMotor(!0),this.joint.SetMotorSpeed(-3),this.joint.SetMaxMotorTorque(300),this.on=!0))},RevoluteCarMinusCallBack:function(a,d,b,c,e){e&&console.log("player hitting the car")},shutdown:function(){this.sprite&&this.sprite.destroy();this.joint&&Joint.Destroy(this.joint);
this.joint=null}};RevoluteWalker.prototype=new GameJoint;RevoluteWalker.prototype.constructor=GameJoint;function RevoluteWalker(a,d,b,c,e,f){this.sprite;this.joint;var g=gameGlobal;b=b?b:1;c=c?c:1;e=e?e:1;this.sprite=g.add.sprite(a,d,f);this.sprite.scale.x=b;this.sprite.scale.y=c;0==e&&(this.sprite.visible=!1)}
RevoluteWalker.prototype={preload:function(){},create:function(){var a=new Phaser.Point(this.sprite.x,this.sprite.y);console.log(" in RevoluteWalker  and point = "+a);var d=new b2Vec2(a.x,a.y);console.log(" in RevoluteWalker and point  = "+d.x+" ,"+d.y);var b=Body.GetBodyAtPoint(d,!1);console.log("in RevoluteWalker  and body array  = "+b);if(b){console.log("RevoluteWalker : length = "+b.length);(d=b[0])&&console.log("body A is = "+d.sprite.key);var c;1<b.length?(c=b[1])&&console.log("valid body b= "+
c):(groundBody&&(c=groundBody.sprite.body),console.log("body B is ground body = "+c));if(!d&&!c)return;if(d&&c){var e=a.x-d.sprite.x,f=a.y-d.sprite.y,b=a.x-c.sprite.x,g=a.y-c.sprite.y;console.log("RevoluteWalker join body A = "+d.sprite.key+" , bodyB = "+c.sprite.key+" point = "+a);console.log("RevoluteWalker  : anchors Body A anchor points = "+e+" , "+f+"anchor body b = "+b+" , "+g);a=new b2Vec2(e,f);b=new b2Vec2(b,g);this.joint=Joint.CreateRevolute(d,c,a,b);this.joint.EnableMotor(!0);this.joint.SetMotorSpeed(-3);
this.joint.SetMaxMotorTorque(500)}}else console.log("NOT ONE BODY UNDER RevoluteWalker JOINT!!!");GameJoint.prototype.create.call(this)},update:function(){},RevoluteWalkerCallBack:function(a,d,b,c,e){},shutdown:function(){this.sprite&&this.sprite.destroy();this.joint&&Joint.Destroy(this.joint);this.joint=null}};
